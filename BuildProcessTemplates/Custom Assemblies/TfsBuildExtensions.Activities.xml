<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TfsBuildExtensions.Activities</name>
    </assembly>
    <members>
        <member name="T:TfsBuildExtensions.Activities.BaseActivity">
            <summary>
            Base class for implementing activities in code as if derived from <see cref="T:System.Activities.Activity"/>
            <para>
            This class is abstract and in order for derived activities to be implemented they need to implement the
            CreateBody method which has to return the Activity to be executed.
            </para>
            <para>The activity implemented by the derived class will be wrapped around a try catch and this class implements the
            same semantics as <see cref="T:TfsBuildExtensions.Activities.BaseCodeActivity"/>
            </para>
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.IBaseActivityMinimumArguments">
            <summary>
            Represents the minimum number of arguments that an activity must implement
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.IBaseActivityMinimumArguments.FailBuildOnError">
            <summary>
            Set to true to fail the build if the activity logs any errors. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.IBaseActivityMinimumArguments.TreatWarningsAsErrors">
            <summary>
            Set to true to fail the build if the activity logs any errors. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.IBaseActivityMinimumArguments.IgnoreExceptions">
            <summary>
            Set to true to ignore any unhandled exceptions thrown by activities. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.IBaseActivityMinimumArguments.LogExceptionStack">
            <summary>
            Set to true to log the entire stack in the event of an exception. Default is true
            <para></para>
            <remarks>This parameter is ignored, if <see cref="P:TfsBuildExtensions.Activities.IBaseActivityMinimumArguments.FailBuildOnError"/> is true or <see cref="P:TfsBuildExtensions.Activities.IBaseActivityMinimumArguments.TreatWarningsAsErrors"/> is true </remarks>
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseActivity.#ctor">
            <summary>
            Initializes a new instance of the BaseActivity class
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseActivity.CreateBody">
            <summary>
            Creates the code for wrapping an activity.
            Returns a <see cref="T:System.Activities.Statements.TryCatch"/>activity that implements error handling logic
            </summary>
            <returns>The code for wrapping activity</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseActivity.CreateInternalBody">
            <summary>
            Returns the implementation for the derived activity
            </summary>
            <returns>the code to execute the activity</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseActivity.FormatLogExceptionStackMessage(System.Exception)">
            <summary>
            Formats the message for logging the exception
            </summary>
            <param name="exception">the exception to be logged</param>
            <returns>The formated message</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseActivity.FailBuildOnError">
            <summary>
            Set to true to fail the build if the activity logs any errors. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseActivity.TreatWarningsAsErrors">
            <summary>
            Set to true to fail the build if the activity logs any errors. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseActivity.IgnoreExceptions">
            <summary>
            Set to true to ignore any unhandled exceptions thrown by activities. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseActivity.LogExceptionStack">
            <summary>
            Set to true to log the entire stack in the event of an exception. Default is true
            <para></para>
            <remarks>This parameter is ignored, if <see cref="P:TfsBuildExtensions.Activities.BaseActivity.FailBuildOnError"/> is true or <see cref="P:TfsBuildExtensions.Activities.BaseActivity.TreatWarningsAsErrors"/> is true </remarks>
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.BaseCodeActivity">
            <summary>
            Provides a base class to all Activities which support remoting
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseCodeActivity.Execute(System.Activities.CodeActivityContext)">
            <summary>
            Entry point to the Activity. It sets the context and executes InternalExecute which is implemented by derived activities
            </summary>
            <param name="context">CodeActivityContext</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseCodeActivity.InternalExecute">
            <summary>
            InternalExecute method which activities should implement
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseCodeActivity.LogBuildError(System.String)">
            <summary>
            Logs a message as a build error
            Also can fail the build if the FailBuildOnError flag is set
            </summary>
            <param name="errorMessage">Message to save</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseCodeActivity.LogBuildWarning(System.String)">
            <summary>
            Logs a message as a build warning
            </summary>
            <param name="warningMessage">Message to save</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseCodeActivity.LogBuildMessage(System.String,Microsoft.TeamFoundation.Build.Client.BuildMessageImportance)">
            <summary>
            Logs a generical build message
            </summary>
            <param name="message">The message to save</param>
            <param name="importance">The verbosity importance of the message</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseCodeActivity.LogBuildMessage(System.String)">
            <summary>
            Logs a generical build message
            </summary>
            <param name="message">The message to save</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseCodeActivity.LogBuildLink(System.String,System.Uri)">
            <summary>
            Logs a link to the build log
            </summary>
            <param name="message">Message to save as link name</param>
            <param name="uri">Uri for link</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseCodeActivity.AddTextNode(System.String,Microsoft.TeamFoundation.Build.Client.IBuildInformationNode)">
            <summary>
            Add a text node to the build log
            </summary>
            <param name="text">Display text</param>
            <param name="parent">Parent node in the build log</param>
            <returns>The new node containing the supplied text if <paramref name="parent"/> is not a null reference; otherwise null.</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseCodeActivity.AddLinkNode(System.String,System.Uri,Microsoft.TeamFoundation.Build.Client.IBuildInformationNode)">
            <summary>
            Add a hyperlink to the
            </summary>
            <param name="text">Display text of the hyperlink</param>
            <param name="uri">Uri of the hyperlink</param>
            <param name="parent">Parent node in the build log</param>
            <returns>The new external link containing the supplied hyperlink if <paramref name="parent"/> is not a null reference; otherwise null.</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseCodeActivity.FailBuildOnError">
            <summary>
            Set to true to fail the build if the activity logs any errors. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseCodeActivity.TreatWarningsAsErrors">
            <summary>
            Set to true to fail the build if the activity logs any errors. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseCodeActivity.IgnoreExceptions">
            <summary>
            Set to true to ignore any unhandled exceptions thrown by activities. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseCodeActivity.LogExceptionStack">
            <summary>
            Set to true to log the entire stack in the event of an exception. Default is true
            <para></para>
            <remarks>This parameter is ignored, if <see cref="P:TfsBuildExtensions.Activities.BaseCodeActivity.FailBuildOnError"/> is true or <see cref="P:TfsBuildExtensions.Activities.BaseCodeActivity.TreatWarningsAsErrors"/> is true </remarks>
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseCodeActivity.ActivityContext">
            <summary>
            Variable to hold CodeActivityContext
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.BaseCodeActivity`1">
            <summary>
            Provides a base class to all code Activities which returns a result.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseCodeActivity`1.Execute(System.Activities.CodeActivityContext)">
            <summary>
            Entry point to the Activity. It sets the context and executes InternalExecute which is implemented by derived activities
            </summary>
            <param name="context">CodeActivityContext</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseCodeActivity`1.InternalExecute">
            <summary>
            InternalExecute method which activities should implement
            </summary>
            <returns>
            The activity result.
            </returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseCodeActivity`1.LogBuildError(System.String)">
            <summary>
            Logs a message as a build error
            Also can fail the build if the FailBuildOnError flag is set
            </summary>
            <param name="errorMessage">Message to save</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseCodeActivity`1.LogBuildWarning(System.String)">
            <summary>
            Logs a message as a build warning
            </summary>
            <param name="warningMessage">Message to save</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseCodeActivity`1.LogBuildMessage(System.String,Microsoft.TeamFoundation.Build.Client.BuildMessageImportance)">
            <summary>
            Logs a generical build message
            </summary>
            <param name="message">The message to save</param>
            <param name="importance">The verbosity importance of the message</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseCodeActivity`1.LogBuildLink(System.String,System.Uri)">
            <summary>
            Logs a link to the build log
            </summary>
            <param name="message">Message to save as link name</param>
            <param name="uri">Uri for link</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseCodeActivity`1.AddTextNode(System.String,Microsoft.TeamFoundation.Build.Client.IBuildInformationNode)">
            <summary>
            Add a text node to the build log
            </summary>
            <param name="text">Display text</param>
            <param name="parent">Parent node in the build log</param>
            <returns>The new node containing the supplied text if <paramref name="parent"/> is not a null reference; otherwise null.</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseCodeActivity`1.AddLinkNode(System.String,System.Uri,Microsoft.TeamFoundation.Build.Client.IBuildInformationNode)">
            <summary>
            Add a hyperlink to the
            </summary>
            <param name="text">Display text of the hyperlink</param>
            <param name="uri">Uri of the hyperlink</param>
            <param name="parent">Parent node in the build log</param>
            <returns>The new external link containing the supplied hyperlink if <paramref name="parent"/> is not a null reference; otherwise null.</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseCodeActivity`1.FailBuildOnError">
            <summary>
            Set to true to fail the build if the activity logs any errors. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseCodeActivity`1.TreatWarningsAsErrors">
            <summary>
            Set to true to fail the build if the activity logs any errors. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseCodeActivity`1.IgnoreExceptions">
            <summary>
            Set to true to ignore any unhandled exceptions thrown by activities. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseCodeActivity`1.LogExceptionStack">
            <summary>
            Set to true to log the entire stack in the event of an exception. Default is true
            <para></para>
            <remarks>This parameter is ignored, if <see cref="P:TfsBuildExtensions.Activities.BaseCodeActivity`1.FailBuildOnError"/> is true or <see cref="P:TfsBuildExtensions.Activities.BaseCodeActivity`1.TreatWarningsAsErrors"/> is true </remarks>
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseCodeActivity`1.ActivityContext">
            <summary>
            Variable to hold CodeActivityContext
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.BaseRemoteCodeActivity">
            <summary>
            Provides a base class to all Activities which support remoting
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.BaseRemoteCodeActivity.authLevel">
            <summary>
            Variable to hold authenticationLevel
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseRemoteCodeActivity.Execute(System.Activities.CodeActivityContext)">
            <summary>
            Executes the logic for this workflow activity
            </summary>
            <param name="context">CodeActivityContext</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseRemoteCodeActivity.InternalExecute">
            <summary>
            InternalExecute method which activities should implement
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseRemoteCodeActivity.LogBuildError(System.String)">
            <summary>
            Logs a message as a build error
            Also can fail the build if the FailBuildOnError flag is set
            </summary>
            <param name="errorMessage">Message to save</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseRemoteCodeActivity.LogBuildWarning(System.String)">
            <summary>
            Logs a message as a build warning
            </summary>
            <param name="warningMessage">Message to save</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseRemoteCodeActivity.LogBuildMessage(System.String,Microsoft.TeamFoundation.Build.Client.BuildMessageImportance)">
            <summary>
            Logs a generical build message
            </summary>
            <param name="message">The message to save</param>
            <param name="importance">The verbosity importance of the message</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseRemoteCodeActivity.LogBuildLink(System.String,System.Uri)">
            <summary>
            Logs a link to the build log
            </summary>
            <param name="message">Message to save as link name</param>
            <param name="uri">Uri for link</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseRemoteCodeActivity.AddTextNode(System.String,Microsoft.TeamFoundation.Build.Client.IBuildInformationNode)">
            <summary>
            Add a text node to the build log
            </summary>
            <param name="text">Display text</param>
            <param name="parent">Parent node in the build log</param>
            <returns>The new node containing the supplied text</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.BaseRemoteCodeActivity.AddLinkNode(System.String,System.Uri,Microsoft.TeamFoundation.Build.Client.IBuildInformationNode)">
            <summary>
            Add a hyperlink to the
            </summary>
            <param name="text">Display text of the hyperlink</param>
            <param name="uri">Uri of the hyperlink</param>
            <param name="parent">Parent node in the build log</param>
            <returns>The new external link containing the supplied hyperlink</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseRemoteCodeActivity.FailBuildOnError">
            <summary>
            Set to true to fail the build if the activity logs any errors. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseRemoteCodeActivity.TreatWarningsAsErrors">
            <summary>
            Set to true to fail the build if the activity logs any errors. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseRemoteCodeActivity.IgnoreExceptions">
            <summary>
            Set to true to ignore any unhandled exceptions thrown by activities. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseRemoteCodeActivity.LogExceptionStack">
            <summary>
            Set to true to log the entire stack in the event of an exception. Default is true
            <para></para>
            <remarks>This parameter is ignored, if <see cref="P:TfsBuildExtensions.Activities.BaseRemoteCodeActivity.FailBuildOnError"/> is true or <see cref="P:TfsBuildExtensions.Activities.BaseRemoteCodeActivity.TreatWarningsAsErrors"/> is true </remarks>
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseRemoteCodeActivity.ActivityContext">
            <summary>
            Variable to hold CodeActivityContext
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseRemoteCodeActivity.MachineName">
            <summary>
            Sets the MachineName. Defaults to Environment.MachineName
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseRemoteCodeActivity.UserName">
            <summary>
            Sets the UserName
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseRemoteCodeActivity.UserPassword">
            <summary>
            Sets the UserPassword.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseRemoteCodeActivity.Authority">
            <summary>
            Sets the authority to be used to authenticate the specified user.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.BaseRemoteCodeActivity.AuthenticationLevel">
            <summary>
            Sets the authentication level to be used to connect to WMI. Default is Default. Also supports: Call, Connect, None, Packet, PacketIntegrity, PacketPrivacy, Unchanged
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.FailingBuildException">
            <summary>
            FailingBuild Exception
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.FailingBuildException.#ctor">
            <summary>
            Initializes a new instance of the FailingBuildException class
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.FailingBuildException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FailingBuildException class
            </summary>
            <param name="message">Message to send</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.FailingBuildException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the FailingBuildException class
            </summary>
            <param name="message">Message to send</param>
            <param name="innerException">Inner exception details</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.FailingBuildException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the FailingBuildException class
            </summary>
            <param name="info">Serialization information for the exception</param>
            <param name="context">The streaming context for the exception</param>
        </member>
        <member name="T:TfsBuildExtensions.Activities.PropertiesType">
            <summary>
            Type of conversion to use
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.PropertiesType.MSBuild">
            <summary>
            MSBuild
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.PropertiesType.NTShell">
            <summary>
            NTShell
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.PropertiesType.PowerShell">
            <summary>
            PowerShell
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.StringExtension.Contains(System.String,System.String,System.StringComparison)">
            <summary>
            Returns a value indicating whether the specified System.String object occurs within this string.
            </summary>
            <param name="source">The source.</param>
            <param name="valueLookingFor">The value looking for.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns> Returns <c>true</c> if match exists, otherwise <c>false</c>.</returns>
        </member>
        <member name="T:TfsBuildExtensions.Activities.ClickOnce.ClickOnceDeployment">
            <summary>
            ClickOnceDeployment
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.ClickOnce.ClickOnceDeployment.InternalExecute">
            <summary>
            Internal Execute method to excute the process within the Activity
            </summary>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:TfsBuildExtensions.Activities.ClickOnce.ClickOnceDeployment.Processor">
            <summary>
            Sets the Processor to use. Default is x86.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.ClickOnce.ClickOnceDeployment.MageFilePath">
            <summary>
            Full Path and Filename to Mage.exe (Located in .NET SDK)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.ClickOnce.ClickOnceDeployment.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.ClickOnce.ClickOnceDeployment.BinLocation">
            <summary>
            BinLocation
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.ClickOnce.ClickOnceDeployment.ApplicationName">
            <summary>
            Application Name
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.ClickOnce.ClickOnceDeployment.CertFilePath">
            <summary>
            Get File Path
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.ClickOnce.ClickOnceDeployment.CertPassword">
            <summary>
            Certificate Password
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.ClickOnce.ClickOnceDeployment.ManifestCertificateThumbprint">
            <summary>
            Manifest Certificate Thumbprint / Hash
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.ClickOnce.ClickOnceDeployment.PublishLocation">
            <summary>
            Publish Location
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.ClickOnce.ClickOnceDeployment.InstallLocation">
            <summary>
            Install location
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.ClickOnce.ClickOnceDeployment.TargetFrameworkVersion">
            <summary>
            TargetFrameworkVersion
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics">
            <summary>
            Activity for processing code metrics using the Visual Studio Code Metrics PowerTool 11.0
            (http://www.microsoft.com/en-gb/download/details.aspx?id=38196)
            <para/>
            <example>
            <code lang="xml"><![CDATA[
            <!-- Run Code Metrics for SampleApp.exe and SampleLibrary.dll -->    
            <tac:CodeMetrics FailBuildOnError="{x:Null}" TreatWarningsAsErrors="{x:Null}" BinariesDirectory="[BinariesDirectory]" CyclomaticComplexityErrorThreshold="15" CyclomaticComplexityWarningThreshold="10" FilesToProcess="[New List(Of String)(New String() {&quot;SampleApp.exe&quot;, &quot;SampleLibrary.dll&quot;})]" GeneratedFileName="Metrics.xml" LogExceptionStack="True" MaintainabilityIndexErrorThreshold="40" MaintainabilityIndexWarningThreshold="90" />
            ]]></code>    
            </example>
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.ProgramFilesX86">
            <summary>
            Path to Program Files environment directory.
            </summary>
            <returns>Path to Program Files directory (C:\Program Files or C:\Program Files (x86)).</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.CacheMetadata(System.Activities.CodeActivityMetadata)">
            <summary>
            Override for base.CacheMetadata
            </summary>
            <param name="metadata">CodeActivityMetadata</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.ProcessMetrics(Microsoft.TeamFoundation.Build.Client.IBuildInformationNode,System.Collections.Generic.IEnumerable{TfsBuildExtensions.Activities.CodeMetrics.Extended.Metric},TfsBuildExtensions.Activities.CodeQuality.Extended.SpecificMetricThresholds,System.String,System.String)">
            <summary>
            Analyzes the resulting metrics file and compares the metrics against the threshold values
            </summary>
            <param name="parent">The parent node in the build log</param>
            <param name="metrics">List of metric values</param>
            <param name="thresholds">Thresholds for errors and warnings </param>
            <param name="fullyQualifiedName">FQN for the method/type under test</param>
            <param name="currentName">Name of current method/type </param>
            <returns>Number if violations</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.BinariesDirectory">
            <summary>
            Path to where the binaries are placed
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.FilesToProcess">
            <summary>
            Optional: Which files that should be processed. Can be a list of files or file match patterns. Defaults to *.dll;*.exe
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.FilesToIgnore">
            <summary>
            Optional: Which files that should be ignored. Can be a list of files or file match patterns.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.GeneratedFileName">
            <summary>
            Optional: Name of the generated metrics result file. Should end with .xml
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.AssemblyCompareMode">
            <summary>
            Set the assembly comparison mode. Supports None, StrongName, StrongNameIgnoringVersion. Default is StrongName.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.SearchGac">
            <summary>
            Optional: Enables/Disables searchGac. Default false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.AnalyzeMetricsResult">
            <summary>
            Optional: Enables/Disables analysis of code metrics results. Default true
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.MaintainabilityIndexErrorThreshold">
            <summary>
            Threshold value for what Maintainability Index should fail the build
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.MaintainabilityIndexWarningThreshold">
            <summary>
            Threshold value for what Maintainability Index should partially fail the build on methods and types
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.CyclomaticComplexityErrorThreshold">
            <summary>
            Threshold value for what Cyclomatic Complexity should fail the build on methods
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.CyclomaticComplexityWarningThreshold">
            <summary>
            Threshold value for what Cyclomatic Complexity should partially fail the build on methods
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.CouplingWarningThreshold">
            <summary>
            Threshold value for what Coupling should partially fail the build on methods
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.CouplingErrorThreshold">
            <summary>
            Threshold value for what Coupling should fail the build on methods
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.LinesOfCodeWarningThreshold">
            <summary>
            Threshold value for what Lines Of Code should partially fail the build on methods
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.LinesOfCodeErrorThreshold">
            <summary>
            Threshold value for what Lines Of Code should fail the build on methods
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.DepthOfInheritanceWarningThreshold">
            <summary>
            Threshold value for what Depth Of Inheritance should partially fail the build on methods
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.DepthOfInheritanceErrorThreshold">
            <summary>
            Threshold value for what Depth Of Inheritance should fail the build on methods
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.AssemblyThresholdsString">
            <summary>
            Overrides the global thresholds for the Assembly Metric Level by specific one.  
            When a level is not overrides (value of 0), the global thresholds are used.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Raise this exception if the string contains a part that is not an integer.
            </exception>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.NamespaceThresholdsString">
            <summary>
            Overrides the global thresholds for the Namespace Metric Level by specific one.  
            When a level is not overrides (value of 0), the global thresholds are used.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Raise this exception if the string contains a part that is not an integer.
            </exception>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.TypeThresholdsString">
            <summary>
            Overrides the global thresholds for the Assembly Metric Level by specific one.  
            When a level is not overrides (value of 0), the global thresholds are used.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Raise this exception if the string contains a part that is not an integer.
            </exception>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.MemberThresholdsString">
            <summary>
            Overrides the global thresholds for the Assembly Metric Level by specific one.  
            When a level is not overrides (value of 0), the global thresholds are used.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Raise this exception if the string contains a part that is not an integer.
            </exception>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.LogCodeMetrics">
            <summary>
            Gets or sets ta value indicating if code metrics should be logged in detail. Normally keep this false. 
            When enabled, all detailed metrics are logged, not only those that fails/warns. 
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.IgnoreGeneratedCode">
            <summary>
            Optional: Indicates whether to ignore elements with the GeneratedCode attribute. Default true
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.Context">
            <summary>
            ActivityContext for use by Threshold logic
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.CompareMode.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.CompareMode.StrongName">
            <summary>
            StrongName
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.CompareMode.StrongNameIgnoringVersion">
            <summary>
            StrongNameIgnoringVersion
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.Extended.CodeMetricsFilesToProcess">
            <summary>
            Class to manage the files the CodeMetrics activity should process
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.History.IActivityContextProxy">
            <summary>
            Provides access to an activity's context without any direct references (decoupling concerns)
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.History.ActivityContextProxy">
            <summary>
            Provides access to an activity's context without any direct references (decoupling concerns)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.History.ActivityContextProxy.SourceFileName">
            <summary>
            Returns the <see cref="P:TfsBuildExtensions.Activities.CodeQuality.History.CodeMetricsHistory.SourceFileName"/> values for the current context.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.History.ActivityContextProxy.HistoryDirectory">
            <summary>
            Returns the <see cref="P:TfsBuildExtensions.Activities.CodeQuality.History.CodeMetricsHistory.HistoryDirectory"/> values for the current context.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.History.ActivityContextProxy.HistoryFileName">
            <summary>
            Returns the <see cref="P:TfsBuildExtensions.Activities.CodeQuality.History.CodeMetricsHistory.HistoryFileName"/> values for the current context.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.History.ActivityContextProxy.HowManyFilesToKeepInDirectory">
            <summary>
            Returns the <see cref="P:TfsBuildExtensions.Activities.CodeQuality.History.CodeMetricsHistory.HowManyFilesToKeepInDirectory"/> values for the current context.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.History.ActivityContextProxy.BuildDetail">
            <summary>
            Returns the <see cref="T:Microsoft.TeamFoundation.Build.Client.IBuildDetail"/> for the current context.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.History.CodeMetricsHistory">
            <summary>
            Activity to push the Code Metrics produce by the <see cref="T:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics"/> activity in an history folder.
            <para/>
            <example>
            <code lang="xml"><![CDATA[
            <tach:CodeMetricsHistory Enabled="[True]" 
                                     SourceFileName="[String.Format(&quot;{0}\Metrics.xml&quot;,BinariesDirectory)]"
                                     HistoryDirectory="[\\Server\CodeMetricsHistory]" 
                                     HistoryFileName="[String.Format(&quot;Metrics_{0}.xml&quot;, BuildNumber)]"
                                     HowManyFilesToKeepInDirectory="[50]" />
            ]]></code>    
            </example>
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.History.CodeMetricsHistory.#ctor">
            <summary>
            Initializes a new instance of the CodeMetricsHistory class
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.History.CodeMetricsHistory.#ctor(TfsBuildExtensions.Activities.CodeQuality.History.IActivityContextProxy,TfsBuildExtensions.Activities.CodeQuality.Proxy.IFileSystemProxy,TfsBuildExtensions.Activities.CodeQuality.History.IParametersValidations)">
            <summary>
            Initializes a new instance of the CodeMetricsHistory class
            </summary>
            <param name="proxyContext">Proxy context</param>
            <param name="proxyFileSystem">File system proxy</param>
            <param name="validations">validation</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.History.CodeMetricsHistory.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.History.CodeMetricsHistory.CacheMetadata(System.Activities.CodeActivityMetadata)">
            <summary>
            Override for base.CacheMetadata
            </summary>
            <param name="metadata">CodeActivityMetadata</param>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.History.CodeMetricsHistory.Enabled">
            <summary>
            Enable Code Metrics history
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.History.CodeMetricsHistory.SourceFileName">
            <summary>
            The full filename where the metrics has been written by the Code Metrics activity.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.History.CodeMetricsHistory.HistoryDirectory">
            <summary>
            The directory where the metrics files will be copied.  This directory should contains only those files.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.History.CodeMetricsHistory.HistoryFileName">
            <summary>
            The destination filename for the metrics file.  This name has to be unique for each iteration, history.
            Something like this String.Format(&quot;Metrics_{0}.xml&quot;, BuildNumber)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.History.CodeMetricsHistory.HowManyFilesToKeepInDirectory">
            <summary>
            How many files to keep in history before removing the oldest.  Default:50
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.History.IParametersValidations">
            <summary>
            Provides validations for the parameters of the <see cref="T:TfsBuildExtensions.Activities.CodeQuality.History.CodeMetricsHistory"/> activity.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.History.ParametersValidations">
            <summary>
            Provides validations for the parameters of the <see cref="T:TfsBuildExtensions.Activities.CodeQuality.History.CodeMetricsHistory"/> activity.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeMetrics.Extended.ICodeMetricsLogger">
            <summary>
            Interface for logging progress
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.ICodeMetricsLogger.LogError(System.String)">
            <summary>
            Logs an error
            </summary>
            <param name="message">Error description</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.ICodeMetricsLogger.LogMessage(System.String)">
            <summary>
            Logs information
            </summary>
            <param name="message">Information message</param>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeMetrics.Extended.IMetricsLogger">
            <summary>
            Interface for logging metric errors back to the build log
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.IMetricsLogger.LogError(System.String)">
            <summary>
            Log error message
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.IMetricsLogger.LogMessage(System.String)">
            <summary>
            Log information message
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeMetrics.Extended.MetricsInvoker">
            <summary>
            Class that wraps the call to Metrics.exe
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.MetricsInvoker.Create(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.IMetricsLogger)">
            <summary>
            Creates an instance of MetricsInvoker
            </summary>
            <param name="filesToProcess">Which files to process, Can be wildcards or explicit file names</param>
            <param name="rootPath">Root path where to look for binaries</param>
            <param name="output">The resulting output from metrics.exe</param>
            <param name="logger">Instance of IMetricsLogger</param>
            <returns>A MetricsInvoker instance </returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.MetricsInvoker.Invoke">
            <summary>
            Calls metrics.exe
            </summary>
            <returns>True if the exit code from metrics.exe was 0 (zero)</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeMetrics.Extended.MetricsInvoker.Argument">
            <summary>
            Argument to Metrics.exe. 
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeMetrics.Extended.MetricsLogger">
            <summary>
            Implements IMetricLogger
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.MetricsLogger.#ctor(TfsBuildExtensions.Activities.CodeMetrics.Extended.ICodeMetricsLogger)">
            <summary>
            Initializes a new instance of the MetricsLogger class
            </summary>
            <param name="activity">Interface to activity</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.MetricsLogger.LogError(System.String)">
            <summary>
            Logs error message back to the calling activity
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.MetricsLogger.LogMessage(System.String)">
            <summary>
            Logs information message back to activity
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeMetrics.Extended.Member">
            <summary>
            Manually added code to the autogenerated Member class, adding the MetricsInformation property.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Member.Serialize">
            <summary>
            Serializes current Member object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Member.Deserialize(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Member@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an Member object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output Member object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Member.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current Member object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Member.LoadFromFile(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Member@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an Member object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output Member object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeMetrics.Extended.Member.MetricsInformation">
            <summary>
            Returns an  information string on the current metrics values for the method
            The format is a short hand:  MI = MaintainabilityIndex, CC = CyclomaticComplexity, CO = ClassCoupling and LOC = LinesOfCode
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.CodeMetricsReport.Serialize">
            <summary>
            Serializes current CodeMetricsReport object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.CodeMetricsReport.Deserialize(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.CodeMetricsReport@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an CodeMetricsReport object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output CodeMetricsReport object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.CodeMetricsReport.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current CodeMetricsReport object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.CodeMetricsReport.LoadFromFile(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.CodeMetricsReport@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an CodeMetricsReport object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output CodeMetricsReport object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Target.Serialize">
            <summary>
            Serializes current Target object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Target.Deserialize(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Target@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an Target object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output Target object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Target.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current Target object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Target.LoadFromFile(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Target@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an Target object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output Target object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Module.Serialize">
            <summary>
            Serializes current Module object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Module.Deserialize(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Module@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an Module object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output Module object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Module.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current Module object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Module.LoadFromFile(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Module@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an Module object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output Module object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Metric.Serialize">
            <summary>
            Serializes current Metric object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Metric.Deserialize(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Metric@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an Metric object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output Metric object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Metric.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current Metric object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Metric.LoadFromFile(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Metric@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an Metric object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output Metric object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Namespace.Serialize">
            <summary>
            Serializes current Namespace object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Namespace.Deserialize(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Namespace@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an Namespace object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output Namespace object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Namespace.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current Namespace object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Namespace.LoadFromFile(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Namespace@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an Namespace object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output Namespace object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Type.Serialize">
            <summary>
            Serializes current Type object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Type.Deserialize(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Type@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an Type object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output Type object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Type.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current Type object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Type.LoadFromFile(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Type@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an Type object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output Type object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Targets.Serialize">
            <summary>
            Serializes current Targets object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Targets.Deserialize(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Targets@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an Targets object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output Targets object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Targets.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current Targets object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Targets.LoadFromFile(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Targets@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an Targets object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output Targets object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Modules.Serialize">
            <summary>
            Serializes current Modules object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Modules.Deserialize(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Modules@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an Modules object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output Modules object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Modules.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current Modules object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Modules.LoadFromFile(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Modules@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an Modules object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output Modules object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Namespaces.Serialize">
            <summary>
            Serializes current Namespaces object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Namespaces.Deserialize(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Namespaces@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an Namespaces object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output Namespaces object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Namespaces.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current Namespaces object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Namespaces.LoadFromFile(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Namespaces@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an Namespaces object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output Namespaces object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Types.Serialize">
            <summary>
            Serializes current Types object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Types.Deserialize(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Types@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an Types object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output Types object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Types.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current Types object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Types.LoadFromFile(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Types@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an Types object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output Types object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Members.Serialize">
            <summary>
            Serializes current Members object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Members.Deserialize(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Members@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an Members object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output Members object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Members.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current Members object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Members.LoadFromFile(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Members@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an Members object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output Members object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Metrics.Serialize">
            <summary>
            Serializes current Metrics object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Metrics.Deserialize(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Metrics@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an Metrics object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output Metrics object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Metrics.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current Metrics object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeMetrics.Extended.Metrics.LoadFromFile(System.String,TfsBuildExtensions.Activities.CodeMetrics.Extended.Metrics@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an Metrics object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output Metrics object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.Proxy.IActivityContextProxy">
            <summary>
            Provides access to an activity's context without any direct references (decoupling concerns)
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.Proxy.ActivityContextProxy">
            <summary>
            Provides access to an activity's context without any direct references (decoupling concerns)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.Proxy.ActivityContextProxy.FilesToIgnore">
            <summary>
            Returns the <see cref="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.FilesToIgnore"/> values for the current context.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.Proxy.ActivityContextProxy.BinariesDirectory">
            <summary>
            Returns the <see cref="P:TfsBuildExtensions.Activities.CodeQuality.CodeMetrics.BinariesDirectory"/> values for the current context.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.Proxy.FileSystemProxy">
            <summary>
            Provides access to the file system (for decoupling concerns)
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.Extended.MetricThresholds">
            <summary>
            Class for holding the pair of error and warning limits
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.Extended.MetricThresholds.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:TfsBuildExtensions.Activities.CodeQuality.Extended.MetricThresholds"/> class
            Main Constructor for Metric thresholds class
            </summary>
            <param name="warning">Warning limit</param>
            <param name="error">Error limit</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.Extended.MetricThresholds.#ctor(TfsBuildExtensions.Activities.CodeQuality.Extended.MetricThresholds)">
            <summary>
            Initializes a new instance of the <see cref="T:TfsBuildExtensions.Activities.CodeQuality.Extended.MetricThresholds"/> class
            Copy constructor for Metric thresholds class
            </summary>
            <param name="other">The class to copy from</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.Extended.MetricThresholds.op_Multiply(TfsBuildExtensions.Activities.CodeQuality.Extended.MetricThresholds,System.Int32)">
            <summary>
            Overloaded multiply operator to scale a metrics up (or down) by a given factor.  
            </summary>
            <param name="target">object to be scaled</param>
            <param name="factor">Scale factor</param>
            <returns>returns scaled object</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.Extended.MetricThresholds.Multiply(TfsBuildExtensions.Activities.CodeQuality.Extended.MetricThresholds,System.Int32)">
            <summary>
            Named  multiply operator to scale a metrics up (or down) by a given factor.  
            </summary>
            <param name="target">object to be scaled</param>
            <param name="factor">Scale factor</param>
            <returns>returns scaled object</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.Extended.MetricThresholds.Error">
            <summary>
            Error limit
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.Extended.MetricThresholds.Warning">
            <summary>
            Warning limit
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.Extended.SpecificMetricThresholds">
            <summary>
            Represents the specific set of thresholds for a metric's level.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.Extended.SpecificMetricThresholds.MaintainabilityIndexThresholds">
            <summary>
            Threshold values for  Maintainability Index should fail or partially fail a build. Default is no thresholds, returning null
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.Extended.SpecificMetricThresholds.CyclomaticComplexityThresholds">
            <summary>
            Threshold value for what Cyclomatic Complexity should fail or partially fail a build. Default is no thresholds, returning null
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.Extended.SpecificMetricThresholds.CouplingThresholds">
            <summary>
            Threshold value for what Efferent Coupling should fail or partially fail a build. Default is no thresholds, returning null
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.Extended.SpecificMetricThresholds.LinesOfCodeThresholds">
            <summary>
            Threshold value for what Lines Of Code should fail or partially fail a build. Default is no thresholds, returning null
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.Extended.SpecificMetricThresholds.DepthOfInheritanceThresholds">
            <summary>
            Threshold value for what Depth of Inheritance should fail or partially fail a build. Default is no thresholds, returning null
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.Extended.AssemblyMetricsThresholds">
            <summary>
            Thresholds for assemblies
            There are no checks for any metrics for assemblies
            Placeholder code for extensions
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.Extended.AssemblyMetricsThresholds.#ctor(TfsBuildExtensions.Activities.CodeQuality.CodeMetrics)">
            <summary>
            Initializes a new instance of the <see cref="T:TfsBuildExtensions.Activities.CodeQuality.Extended.AssemblyMetricsThresholds"/> class
            Assembly thresholds.  Currently blank, as we dont see usable values for this.  Placeholder for user extension code only
            </summary>
            <param name="activity">Code metrics activity, from where we pick off the incoming values for thresholds</param>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.Extended.NameSpaceMetricsThresholds">
            <summary>
            Thresholds for namespaces.
            There are no check for any metrics on namespaces
            Placeholder code for extensions
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.Extended.NameSpaceMetricsThresholds.#ctor(TfsBuildExtensions.Activities.CodeQuality.CodeMetrics)">
            <summary>
            Initializes a new instance of the <see cref="T:TfsBuildExtensions.Activities.CodeQuality.Extended.NameSpaceMetricsThresholds"/> class
            Name space thresholds.  Currently blank, as we dont see usable values for this.  Placeholder for user extension code only
            </summary>
            <param name="activity">Code metrics activity, from where we pick off the incoming values for thresholds</param>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.Extended.TypeMetricsThresholds">
            <summary>
            Thresholds for types
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.Extended.TypeMetricsThresholds.#ctor(TfsBuildExtensions.Activities.CodeQuality.CodeMetrics,TfsBuildExtensions.Activities.CodeQuality.Extended.MethodMetricsThresholds)">
            <summary>
            Initializes a new instance of the <see cref="T:TfsBuildExtensions.Activities.CodeQuality.Extended.TypeMetricsThresholds"/> class
            Thresholds for Types (Classes)
            </summary>
            <param name="activity">Code metrics activity, from where we pick off the incoming values for thresholds</param>
            <param name="methodMetricsThresholds">The class thresholds depends on the method thresholds, so we need this first</param>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.Extended.MethodMetricsThresholds">
            <summary>
            Thresholds for methods
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.Extended.MethodMetricsThresholds.#ctor(TfsBuildExtensions.Activities.CodeQuality.CodeMetrics)">
            <summary>
            Initializes a new instance of the <see cref="T:TfsBuildExtensions.Activities.CodeQuality.Extended.MethodMetricsThresholds"/> class
            Thresholds for methods in a class
            </summary>
            <param name="activity">Code metrics activity, from where we pick off the incoming values for thresholds</param>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.Extended.UnknownMetricNameException">
            <summary>
            Exception raised if we find a metric in the metric.exe outfit file (Default called metrics.xml with a name we dont recognize.
            Other option is that we have misspelled the metrics name in the code, but that will never ever happen
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.Extended.UnknownMetricNameException.#ctor">
            <summary>
            UnknownMetricNameException
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.Extended.UnknownMetricNameException.#ctor(System.String)">
            <summary>
            UnknownMetricNameException
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.Extended.UnknownMetricNameException.#ctor(System.String,System.Exception)">
            <summary>
            UnknownMetricNameException
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.Extended.UnknownMetricNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            UnknownMetricNameException
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.NUnit">
            <summary>
            Executes Test Cases using NUnit (Tested using v2.5.7)
            <example>
            <code lang="xml"><![CDATA[
            <!-- Run NUnit on all binaries (*.dll) for the the current configuration/platform-->    
            <Sequence>
            <Sequence.Variables>
            <Variable x:TypeArguments="scg2:IEnumerable(x:String)" Name="NUnitTestAssemblies" />
             <Variable x:TypeArguments="x:Int32" Name="Total" />
            <Variable x:TypeArguments="x:Int32" Name="Errors" />
            </Sequence.Variables>
            <mtbwa:FindMatchingFiles DisplayName="Find NUnitTest assemblies" MatchPattern="[String.Format(&quot;{0}\\**.dll&quot;, BinariesDirectory)]" Result="[NUnitTestAssemblies]" />
            <tan:NUnit PublishTestResults="True" Flavor="[platformConfiguration.Configuration]" Platform="[platformConfiguration.Platform]" Configuration="{x:Null}" Domain="{x:Null}" ErrorOutputFile="{x:Null}" ExcludeCategory="{x:Null}" FailBuildOnError="{x:Null}" Failures="{x:Null}" Framework="{x:Null}" Ignored="{x:Null}" IncludeCategory="{x:Null}" Inconclusive="{x:Null}" Invalid="{x:Null}" Labels="{x:Null}" NoShadow="{x:Null}" NoThread="{x:Null}" NotRun="{x:Null}" OutputFile="{x:Null}" Process="{x:Null}" Run="{x:Null}" Skipped="{x:Null}" TestTimeout="{x:Null}" TimeTaken="{x:Null}" TreatWarningsAsErrors="{x:Null}" Use32Bit="{x:Null}" Assemblies="[NUnitTestAssemblies]" Errors="[Errors]" LogExceptionStack="True" OutputXmlFile="NUnitResults.xml" ToolPath="C:\Program Files (x86)\NUnit 2.5.10\bin\net-2.0\" Total="[Total]" Version="2.5.7" />
            </Sequence>
            ]]></code>    
            </example>
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.NUnit.#ctor">
            <summary>
            Initializes a new instance of the NUnit class
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.NUnit.InternalExecute">
            <summary>
            Executes the logic for this custom activity
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.Version">
            <summary>
            The version of NUnit to run. Default is 2.5.7
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.ToolPath">
            <summary>
            Gets or sets the ToolPath (defaults to %ProgramFiles%\Nunit {version}\bin\nunit-console[-86].exe
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.Assemblies">
            <summary>
            The assemblies to process.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.PublishTestResults">
            <summary>
            Set to true to publish test results back to TFS
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.Platform">
            <summary>
            Which platform to publish test results for (ex. Any CPU)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.Flavor">
            <summary>
            Which flavor to publish test results for (ex. Debug)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.Use32Bit">
            <summary>
            Set to true to run nunit-console-x86.exe
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.IncludeCategory">
            <summary>
            Comma separated list of categories to include.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.ExcludeCategory">
            <summary>
            Comma separated list of categories to exclude.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.OutputXmlFile">
            <summary>
            Sets the OutputXmlFile name
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.ErrorOutputFile">
            <summary>
            Sets the File to receive test error output
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.OutputFile">
            <summary>
            File to receive test output
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.NoThread">
            <summary>
            Disable use of a separate thread for tests. Default is false.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.Failures">
            <summary>
            Gets the Failures count
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.NotRun">
            <summary>
            Gets the NotRun count
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.Total">
            <summary>
            Gets the Total count
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.Errors">
            <summary>
            Gets the Errors count
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.Inconclusive">
            <summary>
            Gets the Inconclusive count
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.Ignored">
            <summary>
            Gets the Ignored count
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.Skipped">
            <summary>
            Gets the Skipped count
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.Invalid">
            <summary>
            Gets the Invalid count
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.NoShadow">
            <summary>
            Disable shadow copy when running in separate domain. Default is false.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.Configuration">
            <summary>
            Sets the Project configuration (e.g.: Debug) to load
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.TimeTaken">
            <summary>
            Gets the Time taken to run the tests
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.Process">
            <summary>
            Process model for tests. Supports Single, Separate, Multiple. Single is the Default
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.Domain">
            <summary>
            AppDomain Usage for tests. Supports None, Single, Multiple. The default is to use multiple domains if multiple assemblies are listed on the command line. Otherwise a single domain is used.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.Framework">
            <summary>
            Framework version to be used for tests
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.TestTimeout">
            <summary>
            Set timeout for each test case in milliseconds
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.Labels">
            <summary>
            Label each test in stdOut. Default is false.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.Run">
            <summary>
            Name of the test case(s), fixture(s) or namespace(s) to run
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.VisualStudioVersion">
            <summary>
            The version of Visual Studio used to run unit tests. Default is VS2012
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.NUnit.ExitCode">
            <summary>
            Name of the test case(s), fixture(s) or namespace(s) to run
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.Extended.SimpleCommandLineBuilder">
            <summary>
            Helper class for generating command line arguments
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.Extended.SimpleCommandLineBuilder.#ctor">
            <summary>
            Initializes a new instance of the SimpleCommandLineBuilder class
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.Extended.SimpleCommandLineBuilder.AppendFileNamesIfNotNull(System.String[],System.String)">
            <summary>
            Append a list of file names to the argument
            </summary>
            <param name="fileNames">File names</param>
            <param name="delimiter">Delimiter</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.Extended.SimpleCommandLineBuilder.AppendSwitch(System.String)">
            <summary>
            Append a switch to the arguments
            </summary>
            <param name="switchName">Name of the switch</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.Extended.SimpleCommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String)">
            <summary>
            Append a switch to the arguments, if the parameter is not null
            </summary>
            <param name="switchName">Name of the switch</param>
            <param name="parameter">parameter</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.Extended.SimpleCommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String[],System.String)">
            <summary>
            Append a switch to the arguments, if the parameter is not null
            </summary>
            <param name="switchName">Name of the switch</param>
            <param name="parameters">List of parameters</param>
            <param name="delimiter">Delimiter</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.Extended.SimpleCommandLineBuilder.ToString">
            <summary>
            Overrides to string to generate command line
            </summary>
            <returns>Command line arguments</returns>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.Sonar">
            <summary>
            The Sonar activity allows a build to call the sonar-runner after compilation.
            It also provides a way to handle sonar properties required for the sonar-runner automatically.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.Sonar.InternalExecute">
            <summary>
            Executes the logic for this custom activity
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.Sonar.ProjectsToAnalyze">
            <summary>
            Projects (solutions) list to analyze, typically pass the ProjectsToBuild variable.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.Sonar.SonarRunnerPath">
            <summary>
            Sonar runner cmd (or bat) file path.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.Sonar.BuildWorkspace">
            <summary>
            Gets or sets the build workspace. This is used to obtain the project folder in the build workspace.
            </summary>
            <value>The workspace used by the current build</value>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.Sonar.BinariesDirectory">
            <summary>
            Gets or sets the binaries directory. This is the path where Sonar may find all the binaries to analyze.
            It is set up by the build process template.
            </summary>
            <value>The binaries directory as defined by the current build template</value>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.Sonar.SonarPropertiesTemplatePath">
            <summary>
            The path to a Sonar properties template file, that will be used for generating a customized version every build.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.Sonar.FailBuildOnAlert">
            <summary>
            Gets or sets the option to fail the build if alerts are raised by Sonar.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.Sonar.GeneratePropertiesIfMissing">
            <summary>
            Gets or sets the option to fail the build if alerts are raised by Sonar.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.Sonar.SonarPropertiesFileName">
            <summary>
            Gets or sets the name of the file that will hold the Sonar properties during the build.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.Sonar.SonarProperties">
            <summary>
            Gets or sets the list of properties names and values that are overriden for a build definition.
            </summary>
            <example>
            sonar.fxcop.mode=skip
            sonar.ndeps.mode=active
            </example>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.Sonar.SonarRunResult">
            <summary>
            Internal class for handling a Sonar analysis result
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.StatLight">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.StatLight.#ctor">
            <summary>
            Initializes a new instance of the StatLight class.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.StatLight.InternalExecute">
            <summary>
            Executes the logic for this custom activity
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.StatLight.TestAssembly">
            <summary>
            The assemblies to process.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.StatLight.ToolPath">
            <summary>
            Gets or sets the ToolPath. Defaults to %ProgramFiles%\StatLight\StatLight.exe
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.StatLight.PublishTestResults">
            <summary>
            Set to true to publish test results back to TFS
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.StatLight.Platform">
            <summary>
            Which platform to publish test results for (ex. Any CPU)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.StatLight.Flavor">
            <summary>
            Which flavor to publish test results for (ex. Debug)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.StatLight.OutputXmlFile">
            <summary>
            Sets the OutputXmlFile name for the test result
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.StatLight.VisualStudioVersion">
            <summary>
            The version of Visual Studio used to run unit tests. Default is VS2012
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.StatLight.AdditionalArguments">
            <summary>
            Provide additional arguments to Statlight
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.FxCop">
            <summary>
            The FxCop activity provides a basic wrapper over FxCopCmd.exe. See http://msdn.microsoft.com/en-gb/library/bb429449(VS.80).aspx for more details.
            <para/>
            <b>Required: </b> Project and / or Files, OutputFile <b>Optional: </b>DependencyDirectories, AssemblyCompareMode, References, Imports, Rules, ShowSummary, LogResultsToBuildLog, UpdateProject, Verbose, UpdateProject, LogToConsole, Types, FxCopPath, ReportXsl, OutputFile, ConsoleXsl, Project, SearchGac, IgnoreInvalidTargets, Quiet, ForceOutput, AspNetOnly, IgnoreGeneratedCode, OverrideRuleVisibilities, FailOnMissingRules, SuccessFile, Dictionary, Ruleset, RulesetDirectory <b>Output: </b>AnalysisFailed, OutputText, ExitCode<para/>
            </summary>
            <example>
            <code lang="xml"><![CDATA[
            <tac3:FxCop AnalysisFailed="{x:Null}" AspNetOnly="{x:Null}" ConsoleXsl="{x:Null}" DependencyDirectories="{x:Null}" Dictionary="{x:Null}" ExitCode="{x:Null}" FailBuildOnError="{x:Null}" FailOnMissingRules="{x:Null}" ForceOutput="{x:Null}" IgnoreExceptions="{x:Null}" IgnoreGeneratedCode="{x:Null}" IgnoreInvalidTargets="{x:Null}" Imports="{x:Null}" OutputText="{x:Null}" OverrideRuleVisibilities="{x:Null}" Project="{x:Null}" Quiet="{x:Null}" ReportXsl="{x:Null}" Ruleset="{x:Null}" RulesetDirectory="{x:Null}" SearchGac="{x:Null}" SuccessFile="{x:Null}" Timeout="{x:Null}" TreatWarningsAsErrors="{x:Null}" Types="{x:Null}" UpdateProject="{x:Null}" Verbose="{x:Null}" Files="[New String() {&quot;C:\FxCopFailTest.dll&quot;}]" FxCopPath="D:\Program Files (x86)\Microsoft Visual Studio 10.0\Team Tools\Static Analysis Tools\FxCop\FxCopCmd.exe" sap:VirtualizedContainerService.HintSize="526,22" LogExceptionStack="True" LogToConsole="True" OutputFile="D:\a\tfsfail.txt" Rules="[New String() {&quot;+D:\Program Files (x86)\Microsoft Visual Studio 10.0\Team Tools\Static Analysis Tools\FxCop\Rules\DesignRules.dll&quot;}]" ShowSummary="True" />
            ]]></code>    
            </example>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.FxCop.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.FxCop.LogResults(System.String,System.Boolean)">
            <summary>
            Log the results of the FxCop results.
            </summary>
            <param name="resultsFilePath">The path to the FxCop analysis results file.</param>
            <param name="treatWarningsAsErrors">Whether warnings should be logged as errors.</param>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.Files">
            <summary>
            Sets the collection of assemblies to analyse (/file option)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.References">
            <summary>
            Sets the collection of assemblies to reference (/reference option)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.AssemblyCompareMode">
            <summary>
            Set the assembly comparison mode. Supports None, StrongName, StrongNameIgnoringVersion. Default is StrongName.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.DependencyDirectories">
            <summary>
            Sets the DependencyDirectories :(/directory option)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.Imports">
            <summary>
            Sets the name of an analysis report or project file to import (/import option)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.Rules">
            <summary>
            Sets the location of rule libraries to load (/rule option). Prefix the Rules path with ! to treat warnings as errors
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.LogResultsToBuildLog">
            <summary>
            Set to true to log the results to the build file. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.ShowSummary">
            <summary>
            Set to true to display a summary (/summary option). Default is true
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.SearchGac">
            <summary>
            Set to true to search the GAC for missing assembly references (/gac option). Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.SuccessFile">
            <summary>
            Set to true to create .lastcodeanalysissucceeded file in output report directory if no build-breaking messages occur during analysis. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.OverrideRuleVisibilities">
            <summary>
            Set to true to run all overridable rules against all targets. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.Timeout">
            <summary>
            Set the override timeout for analysis deadlock detection. Analysis will be aborted when analysis of a single item by a single rule exceeds the specified amount of time. Default is 0 to disable deadlock detection.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.FailOnMissingRules">
            <summary>
            Set to true to treat missing rules or rule sets as an error and halt execution. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.IgnoreGeneratedCode">
            <summary>
            Set to true to suppress analysis results against generated code. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.AspNetOnly">
            <summary>
            Set to true to analyze only ASP.NET-generated binaries and honor global suppressions in App_Code.dll for all assemblies under analysis. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.IgnoreInvalidTargets">
            <summary>
            Set to true to silently ignore invalid target files. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.Quiet">
            <summary>
            Set to true to suppress all console output other than the reporting implied by /console or /consolexsl. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.ForceOutput">
            <summary>
            Set to true to write output XML and project files even in the case where no violations occurred. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.Verbose">
            <summary>
            Set to true to output verbose information during analysis (/verbose option)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.UpdateProject">
            <summary>
            Saves the results of the analysis in the project file. This option is ignored if the /project option is not specified (/update option)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.LogToConsole">
            <summary>
            Set to true to direct analysis output to the console (/console option). Default is true
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.Types">
            <summary>
            Specifies the types to analyze
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.RulesetDirectory">
            <summary>
            Specifies the directory to search for rule set files that are specified by the Ruleset switch or are included by one of the specified rule sets.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.Ruleset">
            <summary>
            Specifies the Rule set to be used for the analysis. It can be a file path to the rule set file or the file name of 
            a built-in rule set. '+' enables all rules in the rule set; '-' disables all rules in the rule set; '=' sets rules 
            to match the rule set and disables all rules that are not enabled in the rule set
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.FxCopPath">
            <summary>
            Sets the path to FxCopCmd.exe. Default is [Program Files]\Microsoft FxCop 1.36\FxCopCmd.exe
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.ReportXsl">
            <summary>
            Sets the ReportXsl (/outXsl: option)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.OutputFile">
            <summary>
            Set the name of the file for the analysis report
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.ConsoleXsl">
            <summary>
            Sets the ConsoleXsl (/consoleXsl option)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.Dictionary">
            <summary>
            Sets the custom dictionary used by spelling rules.Default is no custom dictionary
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.Project">
            <summary>
            Set the name of the .fxcop project to use
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.AnalysisFailed">
            <summary>
            Gets AnalysisFailed. True if FxCop logged Code Analysis errors to the Output file.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.ExitCode">
            <summary>
            The exit code returned from FxCop
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.FxCop.OutputText">
            <summary>
            Gets the OutputText emitted during analysis
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.CodeQuality.FxCop.CompareMode.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.CodeQuality.FxCop.CompareMode.StrongName">
            <summary>
            StrongName
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.CodeQuality.FxCop.CompareMode.StrongNameIgnoringVersion">
            <summary>
            StrongNameIgnoringVersion
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.IProcess">
            <summary>
            The IProcess interface encapsulates a Process.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.WindowsProcess">
            <summary>
            The WindowsProcess class encapsulates a Windows process and implements the IProcess interface.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.WindowsProcess.Execute(System.String,System.String,System.String)">
            <summary>
            Executes a windows process.
            </summary>
            <param name="executablePath">The path to the executable file.</param>
            <param name="commandLineArguments">Command line arguments to be passed to the executable file.</param>
            <param name="workingDirectory">The working directory to execute the executable file from.</param>
            <returns>True if the process ran successfully. False otherwise</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.WindowsProcess.StandardOutput">
            <summary>
            Gets the standard output.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.WindowsProcess.StandardError">
            <summary>
            Gets the standard error.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Communication.EmailAction">
            <summary>
            EmailAction
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Communication.EmailAction.Send">
            <summary>
            Send
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Communication.Email">
            <summary>
            <b>Valid Actions are:</b>
            <para><i>Send</i> (<b>Required: </b> SmtpServer, MailFrom, MailTo, Subject  <b>Optional: </b> Priority, Body, Format, Attachments, UseDefaultCredentials, UserName, UserPassword, Port, EnableSsl)</para>
            </summary>
            <example>
            <code lang="xml"><![CDATA[
            <Sequence DisplayName="TFSBuildExtensions Email Sequence" sap:VirtualizedContainerService.HintSize="818,146">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Default="YOUREMAILFROMADDRESS" Name="EmailFrom" />
                <Variable x:TypeArguments="s:String[]" Default="[New String() {&quot;YOUREMAILTOADDRESSES&quot;}]" Name="EmailTo" />
                <Variable x:TypeArguments="x:String" Name="variable1" />
              </Sequence.Variables>
              <tac2:Email Attachments="{x:Null}" Body="{x:Null}" FailBuildOnError="{x:Null}" Format="{x:Null}" LogExceptionStack="{x:Null}" Priority="{x:Null}" TreatWarningsAsErrors="{x:Null}" UseDefaultCredentials="{x:Null}" Action="Send" EnableSsl="True" sap:VirtualizedContainerService.HintSize="200,22" MailFrom="[EmailFrom]" MailTo="[EmailTo]" Port="0" SmtpServer="" Subject="YOURSUBJECT" UserName="" UserPassword="" />
            </Sequence>
            ]]></code>    
            </example>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.Email.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Email.Action">
            <summary>
            Specifies the action to perform. Default is Send.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Email.SmtpServer">
            <summary>
            The SMTP server to use to send the email.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Email.Port">
            <summary>
            Sets the port to use. Ignored if not specified.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Email.EnableSsl">
            <summary>
            Sets whether to EnableSsl
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Email.MailFrom">
            <summary>
            The email address to send the email from.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Email.MailTo">
            <summary>
            Sets the Item Collection of email address to send the email to.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Email.Subject">
            <summary>
            The subject of the email.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Email.Priority">
            <summary>
            The priority of the email. Default is Normal (also available High and Low)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Email.Body">
            <summary>
            The body of the email.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Email.Format">
            <summary>
            Sets the format of the email. Default is HTML
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Email.UserName">
            <summary>
            Sets the UserName if SmtpClient requires credentials
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Email.UserPassword">
            <summary>
            Sets the UserPassword if SmtpClient requires credentials
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Email.UseDefaultCredentials">
            <summary>
            Gets or sets a Boolean value that controls whether the DefaultCredentials are sent with requests. DefaultCredentials represents the system credentials for the current security context in which the application is running. Default is true.
            <para>If UserName and UserPassword is supplied, this is set to false. If UserName and UserPassword are not supplied and this is set to false then mail is sent to the server anonymously.</para>
            <para><b>If you provide credentials for basic authentication, they are sent to the server in clear text. This can present a security issue because your credentials can be seen, and then used by others.</b></para>
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Email.Attachments">
            <summary>
            An Item Collection of full paths of files to attach to the email.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Communication.FtpAction">
            <summary>
            FtpAction
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Communication.FtpAction.CreateDirectory">
            <summary>
            Create Directory
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Communication.FtpAction.DeleteDirectory">
            <summary>
            Delete Directory
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Communication.FtpAction.DeleteFiles">
            <summary>
            Delete Files
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Communication.FtpAction.DownloadFiles">
            <summary>
            Download Files
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Communication.FtpAction.UploadFiles">
            <summary>
            Upload Files
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Communication.Ftp">
            <summary>
            <b>Valid Actions are:</b>
            <para><i>CreateDirectory</i> (<b>Required:</b> Host<b>Optional:</b> UserName, UserPassword, WorkingDirectory, RemoteDirectoryName, Port)</para>        
            <para><i>DeleteDirectory</i> (<b>Required:</b> Host<b>Optional:</b> UserName, UserPassword, WorkingDirectory, RemoteDirectoryName, Port)</para>    
            <para><i>DeleteFiles</i> (<b>Required:</b> Host, FileNames <b>Optional:</b> UserName, UserPassword, WorkingDirectory, RemoteDirectoryName, Port)</para>    
            <para><i>DownloadFiles</i> (<b>Required:</b> Host <b>Optional:</b> FileNames, UserName, UserPassword, WorkingDirectory, RemoteDirectoryName, Port)</para>    
            <para><i>UploadFiles</i> (<b>Required:</b> Host, FileNames <b>Optional:</b> UserName, UserPassword, WorkingDirectory, RemoteDirectoryName, Port)</para>    
            <para><b>Remote Execution Support:</b> NA</para>
            </summary>
            <example>
            <code lang="xml"><![CDATA[
            <Sequence DisplayName="Upload all drops to the ftp folder" sap2010:WorkflowViewState.IdRef="Sequence_16">
                <tac:Ftp FileNames="" WorkingDirectory="Your Working Directory" Action="[FtpAction.CreateDirectory]" DisplayName="Create Directory" Host="Your Ftp Host Name" sap2010:WorkflowViewState.IdRef="Ftp_3" Port="Your Fpt Port" RemoteDirectoryName="Your Ftp Remote directory name" UserName="Your ftp user name" UserPassword="Your ftp password" />          
                <tac:Ftp FileNames="" WorkingDirectory="Your Working Directory" Action="[FtpAction.DeleteDirectory]" DisplayName="Delete Directory" Host="Your Ftp Host Name" sap2010:WorkflowViewState.IdRef="Ftp_3" Port="Your Fpt Port" RemoteDirectoryName="Your Ftp Remote directory name" UserName="Your ftp user name" UserPassword="Your ftp password" />          
                <tac:Ftp FileNames="" WorkingDirectory="Your Working Directory" Action="[FtpAction.DeleteFiles]" DisplayName="Delete Files" Host="Your Ftp Host Name" sap2010:WorkflowViewState.IdRef="Ftp_3" FileNames="Your files to be deleted" Port="Your Fpt Port" RemoteDirectoryName="Your Ftp Remote directory name" UserName="Your ftp user name" UserPassword="Your ftp password" />          
                <tac:Ftp FileNames="" WorkingDirectory="Your Working Directory" Action="[FtpAction.DownloadFiles]" DisplayName="Download Files" Host="Your Ftp Host Name" sap2010:WorkflowViewState.IdRef="Ftp_3" FileNames="Your files to be downloaded" Port="Your Fpt Port" RemoteDirectoryName="Your Ftp Remote directory name" UserName="Your ftp user name" UserPassword="Your ftp password" />          
                <tac:Ftp FileNames="" WorkingDirectory="Your Working Directory" Action="[FtpAction.UploadFiles]" DisplayName="Upload Files" Host="Your Ftp Host Name" sap2010:WorkflowViewState.IdRef="Ftp_3" FileNames="Your files to be uploaded" Port="Your Fpt Port" RemoteDirectoryName="Your Ftp Remote directory name" UserName="Your ftp user name" UserPassword="Your ftp password" />          
            </Sequence>
            ]]></code>
            </example>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.Ftp.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.Ftp.CreateDirectory">
            <summary>
            Creates a new Ftp directory on the ftp server.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.Ftp.DeleteDirectory">
            <summary>
            Deletes an Ftp directory on the ftp server.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.Ftp.DeleteFiles">
            <summary>
            Delete given files from the FTP Directory
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.Ftp.UploadFiles">
            <summary>
            Upload Files 
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.Ftp.DownloadFiles">
            <summary>
            Download Files 
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.Ftp.CreateFtpConnection">
            <summary>
            Creates an FTP Connection object 
            </summary>
            <returns>An initialised FTP Connection</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Ftp.Action">
            <summary>
            Specifies the action to perform. 
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Ftp.Host">
            <summary>
            Sets the Host of the FTP Site.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Ftp.RemoteDirectoryName">
            <summary>
            Sets the Remote Path to connect to the FTP Site
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Ftp.WorkingDirectory">
            <summary>
            Sets the working directory on the local machine
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Ftp.Port">
            <summary>
            The port used to connect to the ftp server.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Ftp.FileNames">
            <summary>
            The list of files that needs to be transfered over FTP
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Ftp.UserName">
            <summary>
            Sets the UserName
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Ftp.UserPassword">
            <summary>
            Sets the UserPassword.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Communication.Extensions">
            <summary>
            Helper class used to convert FILETIME to DateTime
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.Extensions.ToDateTime(TfsBuildExtensions.Activities.Communication.NativeMethods.FILETIME)">
            <summary>
            Converts given datetime in FILETIME struct format and convert it to .Net DateTime.
            </summary>
            <param name="time">The given time in FileTime structure format</param>
            <returns>The DateTime equivalent of the given fileTime</returns>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Communication.FtpConnection">
            <summary>
            The <c>FtpConnection</c> class provides the ability to connect and perform operations on FTP servers.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FtpConnection class.
            </summary>
            <param name="host">The host name of the ftp site where the connection would be made.</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the FtpConnection class.
            </summary>
            <param name="host">The host of the ftp site where the connection would be made.</param>
            <param name="port">The port to connect to.</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the FtpConnection class.
            </summary>
            <param name="host">The host of the ftp site where the connection would be made.</param>
            <param name="userName">The userName used to make the FTP connection</param>
            <param name="password">The password for the user connecting to the ftp site</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the FtpConnection class.
            </summary>
            <param name="host">The host of the ftp site where the connection would be made.</param>
            <param name="port">The port to make the connection on</param>
            <param name="userName">The userName used to make the FTP connection</param>
            <param name="password">The Password used to make the FTP connection</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.Finalize">
            <summary>
            Finalizes an instance of the FtpConnection class. 
            Disposable types with unmanaged resources need to implement a finalizer.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.SetLocalDirectory(System.String)">
            <summary>
            Sets the directory on the local machine used to upload / download files.
            </summary>
            <param name="directory">The directory file path.</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.LogOn">
            <summary>
            LogOn to the given FTP host using the given ftp UserName and Password
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.SetCurrentDirectory(System.String)">
            <summary>
            Sets the current directory on FTP site to the given directory path
            </summary>
            <param name="directory">The directory path to set on the FTP site.</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.GetCurrentDirectory">
            <summary>
            Returns the directory currently set on the Ftp site in current session.
            </summary>
            <returns>The path of the current directory</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.GetCurrentDirectoryInfo">
            <summary>
            Returns Directory information of the the currently selected directory.
            </summary>
            <returns>A FtpDirectoryInfo object containing information of the current directory.</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.GetFile(System.String,System.Boolean)">
            <summary>
            Download a file from the current remote directory ftp directory to the current local selected directory
            </summary>
            <param name="remoteFile">The name of the file to be downloaded.</param>
            <param name="failIfExists">Flag to indicate whether to overwrite the file if it exists already in local directory.</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.GetFile(System.String,System.String,System.Boolean)">
            <summary>
            Download a file from the current remote directory ftp directory to the current local selected directory
            </summary>
            <param name="remoteFile">The name of the file to be downloaded.</param>
            <param name="localFile">The name of the file to be save locally as.</param>
            <param name="failIfExists">Flag to indicate whether to overwrite the file if it exists already in local directory.</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.PutFile(System.String)">
            <summary>
            Upload a file from the current local directory to the ftp directory currently selected
            </summary>
            <param name="fileName">The name of the file to be uploaded.</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.PutFile(System.String,System.String)">
            <summary>
            Upload a file from the current local directory to the ftp directory currently selected
            </summary>
            <param name="localFile">The name of the file to be uploaded.</param>
            <param name="remoteFile">The remote name of the file.</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.RenameFile(System.String,System.String)">
            <summary>
            Rename a file on the remote FTP directory
            </summary>
            <param name="fileName">The name of the file to be renamed.</param>
            <param name="newFileName">The name the file needs to be renamed to.</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.DeleteFile(System.String)">
            <summary>
            Deletes a file in the Ftp remote directory
            </summary>
            <param name="fileName">The name of the file to be deleted.</param>        
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.DeleteDirectory(System.String)">
            <summary>
            Deletes a file in the Ftp remote directory
            </summary>
            <param name="directory">The name of the file to be deleted.</param>        
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.GetFiles">
            <summary>
            Retrieves the list of all files in the ftp directory currently selected
            </summary> 
            <returns>Returns the list of files present in the current ftp directory.</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.GetFiles(System.String)">
            <summary>
            Retrieves the list of all files in the ftp directory currently selected whose name matches the fileName mask
            </summary>
            <param name="mask">The search criteria to return files.</param>        
            <returns>Returns the list of files present in the current ftp directory.</returns>        
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.GetDirectories">
            <summary>
            Retrieves the list of all directories in the ftp directory currently selected.
            </summary>
            <returns>Returns the list of diretories present in the current ftp directory.</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.GetDirectories(System.String)">
            <summary>
            Retrieves the list of all directories in the given ftp directory 
            </summary>
            <param name="path">The remote ftp directory path.</param>        
            <returns>Returns the list of diretories present in the given ftp directory.</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.CreateDirectory(System.String)">
            <summary>
            Creates a directory in the remote ftp directory
            </summary>
            <param name="path">The path of the ftp directory.</param>        
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.DirectoryExists(System.String)">
            <summary>
            Checks whether the given directory exists on the remote ftp server or not
            </summary>
            <param name="path">The path of the directory to check whether it exists or not.</param>
            <returns>True if the directory exists, false otherwise</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.FileExists(System.String)">
            <summary>
            Checks whether the given file exists on the remote ftp server or not
            </summary>
            <param name="path">The path of the file to check whether it exists or not.</param>
            <returns>True if the file exists, false otherwise</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.SendCommand(System.String)">
            <summary>
            Sends a command line command to the remote ftp server.
            </summary>
            <param name="cmd">The command to execute remotely on the remote ftp server.</param>
            <returns>Result from the command execution on remote server.</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.Close">
            <summary>
            Close connection to FTP server and all relevant sessions.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.Dispose">
            <summary>
            The overrided Dispose method
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.LogOn(System.String,System.String)">
            <summary>
            LogOn to the given FTP host using the given ftp UserName and Password
            </summary>
            <param name="userName">The userName used to LogOn</param>
            <param name="password">The password of the user used to LogOn</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.InternetLastResponseInfo(System.Int32@)">
            <summary>
            Returns full description of the 
            </summary>
            <param name="code">The error code whose details would be returned</param>
            <returns>The description of the error code passed</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.Error">
            <summary>
            The private helper method to raise exception based on the error occured in native calls
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpConnection.Open">
            <summary>
            The method is opens a connection to the Internet and should be invoked before 
            any attempt to connect to the FTP Site.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Communication.FtpDirectoryInfo">
            <summary>
            The <c>FtpDirectoryInfo</c> class encapsulates a remote FTP directory.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpDirectoryInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            No specific impelementation is needed of the GetObjectData to serialize this object
            because all attributes are redefined.
            </summary>
            <param name="info">The SerializationInfo to populate with data. </param>
            <param name="context">The destination for this serialization. </param>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Communication.FtpException">
            <summary>
            The <c>FtpException</c> class encapsulates an FTP exception.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpException.#ctor">
            <summary>
            FtpException
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpException.#ctor(System.String)">
            <summary>
            FtpException
            </summary>
            <param name="message">string</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpException.#ctor(System.Int32,System.String)">
            <summary>
            FtpException
            </summary>
            <param name="error">int</param>
            <param name="message">string</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpException.#ctor(System.String,System.Exception)">
            <summary>
            FtpException
            </summary>
            <param name="message">string</param>
            <param name="innerException">Exception</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            FtpException
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            No specific impelementation is needed of the GetObjectData to serialize this object
            because all attributes are redefined.
            </summary>
            <param name="info">The SerializationInfo to populate with data. </param>
            <param name="context">The destination for this serialization. </param>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.FtpException.ErrorCode">
            <summary>
            ErrorCode
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Communication.FtpFileInfo">
            <summary>
            The <c>FtpFileInfo</c> class encapsulates a remote FTP directory.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.FtpFileInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            No specific impelementation is needed of the GetObjectData to serialize this object
            because all attributes are redefined.
            </summary>
            <param name="info">The SerializationInfo to populate with data. </param>
            <param name="context">The destination for this serialization. </param>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Communication.NativeMethods">
            <summary>
            Static class containing all PInvoke methods for WinInet API
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Communication.SmsAction">
            <summary>
            EmailAction
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Communication.SmsAction.Send">
            <summary>
            Send
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Communication.Sms">
            <summary>
            <b>Valid Actions are:</b>
            <para><i>Send</i> (<b>Required: </b> From, To, Body, AccountSid, AuthToken </para>
            </summary>
            <example>
            <code lang="xml"><![CDATA[
            <Sequence DisplayName="TFSBuildExtensions Sms Sequence" sap:VirtualizedContainerService.HintSize="818,146">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Default="YOURFROMADDRESS" Name="From" />
                <Variable x:TypeArguments="s:String[]" Default="[New String() {&quot;YOURTOADDRESSES&quot;}]" Name="To" />
                <Variable x:TypeArguments="x:String" Name="variable1" />
              </Sequence.Variables>
              <tac2:Email Attachments="{x:Null}" Body="{x:Null}" FailBuildOnError="{x:Null}" Format="{x:Null}" LogExceptionStack="{x:Null}" Priority="{x:Null}" TreatWarningsAsErrors="{x:Null}" UseDefaultCredentials="{x:Null}" Action="Send" EnableSsl="True" sap:VirtualizedContainerService.HintSize="200,22" MailFrom="[EmailFrom]" MailTo="[EmailTo]" Port="0" SmtpServer="" Subject="YOURSUBJECT" UserName="" UserPassword="" />
            </Sequence>
            ]]></code>    
            </example>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Communication.Sms.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Sms.Action">
            <summary>
            Specifies the action to perform. Default is Send.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Sms.From">
            <summary>
            The phone number to send the SMS from.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Sms.To">
            <summary>
            Sets the Item Collection of phone numbers address to send the SMS to.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Sms.Body">
            <summary>
            The body of the SMS.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Sms.AccountSid">
            <summary>
            Sets the Twilio Account SID
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Sms.AuthToken">
            <summary>
            Sets the Twilio AuthToken
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Communication.Sms.ApiVersion">
            <summary>
            Sets the Twilio AuthToken
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Compression.ZipAction">
            <summary>
            ZipAction
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Compression.ZipAction.AddFiles">
            <summary>
            AddFiles
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Compression.ZipAction.Create">
            <summary>
            Create
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Compression.ZipAction.Extract">
            <summary>
            Extract
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Compression.Zip">
            <summary>
            <b>Valid Action values are:</b>
            <para><i>AddFiles</i> (<b>Required: </b> ZipFileName, CompressFiles or Path <b>Optional: </b>CompressionLevel, MaxOutputSegmentSize, Password; RemoveRoot, UseZip64WhenSaving) Existing files will be updated</para>
            <para><i>Create</i> (<b>Required: </b> ZipFileName, CompressFiles or Path <b>Optional: </b>CompressionLevel, MaxOutputSegmentSize, Password; RemoveRoot, UseZip64WhenSaving)</para>
            <para><i>Extract</i> (<b>Required: </b> ZipFileName, ExtractPath <b>Optional:</b> Password)</para>
            </summary>
            <example>
            <code lang="xml"><![CDATA[
            <Sequence DisplayName="TFSBuildExtensions Zip Sequence" sap:VirtualizedContainerService.HintSize="1178,146">
            <tac:Zip ExtractPath="{x:Null}" Files="{x:Null}" LogExceptionStack="{x:Null}" Password="{x:Null}" RemoveRoot="{x:Null}" TreatWarningsAsErrors="{x:Null}" Action="Create" CompressPath="[BinariesDirectory]" CompressionLevel="Default" FailBuildOnError="True" sap:VirtualizedContainerService.HintSize="200,22" ZipFileName="[BinariesDirectory + &quot;\\&quot; + &quot;MyBuild&quot; + &quot;.zip&quot;]" />
            </Sequence>
            ]]></code>    
            </example>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Compression.Zip.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Compression.Zip.RemoveRoot">
            <summary>
            Sets the root to remove from the zip path. Note that this should be part of the file to compress path, not the target path of the ZipFileName
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Compression.Zip.Files">
            <summary>
            Sets the files to Compress
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Compression.Zip.CompressPath">
            <summary>
            Sets the Path to Zip.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Compression.Zip.ZipFileName">
            <summary>
            Sets the name of the Zip File
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Compression.Zip.ExtractPath">
            <summary>
            Path to extract the zip file to
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Compression.Zip.Password">
            <summary>
            Sets the Password to be used
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Compression.Zip.CompressionLevel">
            <summary>
            Sets the CompressionLevel to use. Default is Default, also supports BestSpeed and BestCompression
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Compression.Zip.Action">
            <summary>
            Specifies the action to perform
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Compression.Zip.UseZip64WhenSaving">
            <summary>
            Sets the UseZip64WhenSaving output of the DotNetZip library. Default is Zip64Option.Default
            For more details see the DotNetZip documentation.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Compression.Zip.MaxOutputSegmentSize">
            <summary>
            Sets the maximum output segment size, which typically results in a split archive (an archive split into multiple files).
            This value is not required and if not set or set to 0 the resulting archive will not be split.
            For more details see the DotNetZip documentation.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.FileSystem.WriteToFile">
            <summary>
            Writes the content passed into a file (tipically a line).
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.FileSystem.WriteToFile.Execute(System.Activities.CodeActivityContext)">
            <summary>
            Executes the activity code. 
            Writes the desirad content to the file.
            Overwrites or appends the content if the file exists
            </summary>
            <param name="context">the activity context</param>
        </member>
        <member name="P:TfsBuildExtensions.Activities.FileSystem.WriteToFile.FileName">
            <summary>
            The filename where the content will be written
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.FileSystem.WriteToFile.Create">
            <summary>
            Should we create a new file or append to an existing one (if it doesn't exist it will be created)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.FileSystem.WriteToFile.Content">
            <summary>
            The content to be written to the fileName
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.FileSystem.WriteToFile.AutoNewLine">
            <summary>
            Automatically write a new line after the content?
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.FileSystem.FileAction">
            <summary>
            FileAction
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.FileSystem.FileAction.AddAttributes">
            <summary>
            AddAttributes
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.FileSystem.FileAction.GetChecksum">
            <summary>
            GetChecksum
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.FileSystem.FileAction.GetTempFileName">
            <summary>
            GetTempFileName
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.FileSystem.FileAction.Move">
            <summary>
            Move
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.FileSystem.FileAction.RemoveAttributes">
            <summary>
            RemoveAttributes
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.FileSystem.FileAction.SetAttributes">
            <summary>
            SetAttributes
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.FileSystem.FileAction.Replace">
            <summary>
            Replace
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.FileSystem.FileAction.Touch">
            <summary>
            Touch
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.FileSystem.FileAction.Delete">
            <summary>
            Delete
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.FileSystem.File">
            <summary>
            <b>Valid Action values are:</b>
            <para><i>AddAttributes</i> (<b>Required: </b>Attributes, Files)</para>
            <para><i>GetChecksum</i> (<b>Required: </b>Path <b>Output: </b>Checksum)</para>
            <para><i>GetTempFileName</i> (<b>Output: </b>Path)</para>
            <para><i>Move</i> (<b>Required: </b>Path, TargetPath)</para>
            <para><i>RemoveAttributes</i> (<b>Required: </b>Attributes, Files)</para>
            <para><i>Replace</i> (<b>Required: </b>RegexPattern <b>Optional: </b>Replacement, Path, TextEncoding, Files)</para>
            <para><i>SetAttributes</i> (<b>Required: </b>Attributes, Files)</para>
            <para><i>Touch</i> (<b>Required: </b>Files <b>Optional: </b>Force, Time)</para>
            <para><i>Delete</i> (<b>Required:</b> Files <b>Optional: </b>Force)</para>
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.FileSystem.File.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.FileSystem.File.RegexPattern">
            <summary>
            Sets the regex pattern.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.FileSystem.File.Replacement">
            <summary>
            The replacement text to use. Default is string.Empty
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.FileSystem.File.Path">
            <summary>
            A path to process or get. Use * for recursive folder processing. For the GetChecksum TaskAction, this indicates the path to the file to create a checksum for.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.FileSystem.File.TextEncoding">
            <summary>
            The file encoding to write the new file in. The task will attempt to default to the current file encoding.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.FileSystem.File.Attributes">
            <summary>
            The File attributes
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.FileSystem.File.Files">
            <summary>
            An ItemList of files to process. If calling SetAttributes, RemoveAttributes or AddAttributes, include the attributes in an Attributes metadata tag, separated by a semicolon.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.FileSystem.File.TargetPath">
            <summary>
            Sets the TargetPath for a renamed file
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.FileSystem.File.Checksum">
            <summary>
            Gets the file checksum
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.FileSystem.File.Action">
            <summary>
            Specifies the action to perform
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.FileSystem.File.Force">
            <summary>
            Forces the action on read only files.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.FileSystem.File.Time">
            <summary>
            Date and time to use for touch. If not specify, the activity will use the current date and time.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.FileSystem.RoboCopyAction">
            <summary>
            RoboCopyAction
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.FileSystem.RoboCopyAction.Copy">
            <summary>
            Copy
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.FileSystem.RoboCopy">
            <summary>
            <para>This activity wraps RoboCopy. Successful non-zero exit codes from Robocopy. Use the ReturnCode property to access the exit code from Robocopy</para>
            <b>Valid Action values are:</b>
            <para><i>Copy</i></para>
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.FileSystem.RoboCopy.InternalExecute">
            <summary> 
            Executes the logic for this workflow activity
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.FileSystem.RoboCopy.Source">
            <summary>
            Source Directory (drive:\path or \\server\share\path).
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.FileSystem.RoboCopy.Destination">
            <summary>
            Destination Dir  (drive:\path or \\server\share\path).
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.FileSystem.RoboCopy.Files">
            <summary>
            File(s) to copy  (names/wildcards: default is "*.*").
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.FileSystem.RoboCopy.ReturnCode">
            <summary>
            Gets the Return Code from RoboCopy
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.FileSystem.RoboCopy.Options">
            <summary>
            Type 'robocopy.exe /?' at the command prompt for all available options
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.FileSystem.RoboCopy.LogToBuild">
            <summary>
            Set to true to log output to the build progress screen. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.FileSystem.RoboCopy.Action">
            <summary>
            Specifies the action to perform
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Framework.AssemblyInfo">
            <summary>
            Updates content of AssemblyInfo files.
            </summary>
            <remarks>
                <para>The <see cref="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.Files"/> property is <b>required</b>.</para>
                <para>Setting a property to null will disable updating the associated attribute.</para>
                <para>
                The following tokens are supported for replacement (all tokens are not supported by every property, see properties remarks for the list of supported tokens):
                <list type="table">
                    <listheader>
                        <term>Token</term>
                        <description>Description</description>
                    </listheader>
                    <item>
                        <term>$(current)</term>
                        <description>Uses the current value.</description>
                    </item>
                    <item>
                        <term>$(increment)</term>
                        <description>Increments the current value.</description>
                    </item>
                    <item>
                        <term>$(date:&lt;format&gt;)</term>
                        <description>Uses the current date formatted with the specified &lt;format&gt;.</description>
                    </item>
                    <item>
                        <term>$(version)</term>
                        <description>The updated AssemblyVersion value.</description>
                    </item>
                    <item>
                        <term>$(fileversion)</term>
                        <description>The updated AssemblyFileVersion value.</description>
                    </item>
                </list>
                </para>
            </remarks>
            <example>
                <code lang="xml"><![CDATA[
                <Sequence DisplayName="TFSBuildExtensions AssemblyInfo Sequence" sap:VirtualizedContainerService.HintSize="818,146">
                    <Sequence.Variables>
                        <Variable x:TypeArguments="s:String[]" Name="AssemblyInfoFiles" />
                    </Sequence.Variables>
                    <taf:AssemblyInfo FailBuildOnError="{x:Null}" IgnoreExceptions="{x:Null}" TreatWarningsAsErrors="{x:Null}" AssemblyCompany="{x:Null}" AssemblyConfiguration="{x:Null}" AssemblyCopyright="{x:Null}" AssemblyCulture="{x:Null}" AssemblyDelaySign="{x:Null}" AssemblyDescription="{x:Null}" AssemblyFileVersion="$(current).$(current).$(increment).0" AssemblyInformationalVersion="$(fileversion)" AssemblyKeyFile="{x:Null}" AssemblyKeyName="{x:Null}" AssemblyProduct="{x:Null}" AssemblyTitle="{x:Null}" AssemblyTrademark="{x:Null}" AssemblyVersion="$(current).$(current).0.0" CLSCompliant="[False]" ComVisible="{x:Null}" Files="[AssemblyInfoFiles]" Guid="{x:Null}" LogExceptionStack="True" MaxAssemblyFileVersion="{x:Null}" MaxAssemblyInformationalVersion="{x:Null}" MaxAssemblyVersion="{x:Null}" />
                </Sequence>
                ]]></code>    
            </example>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Framework.AssemblyInfo.InternalExecute">
            <summary>
            Executes the logic for this workflow activity.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.Files">
            <summary>
            Sets the AssemblyInfo files to update.
            </summary>
            <remarks>
            This property is <b>required.</b>
            </remarks>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.AssemblyVersion">
            <summary>
            Sets the assembly version.
            </summary>
            <remarks>
                <para>Setting the value to null will disable updating this attribute.</para>
                <para>
                The following tokens are supported (see <see cref="T:TfsBuildExtensions.Activities.Framework.AssemblyInfo"/> remarks for a description of those tokens):
                <list type="bullet">
                    <item>
                        <description>$(current)</description>
                    </item>
                    <item>
                        <description>$(increment)</description>
                   </item>
                   <item>
                        <description>$(date:&lt;format&gt;)</description>
                   </item>
                </list>
                </para>
            </remarks>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.AssemblyFileVersion">
            <summary>
            Sets the assembly file version.
            </summary>
            <remarks>
                <para>Setting the value to null will disable updating this attribute.</para>
                <para>
                The following tokens are supported (see <see cref="T:TfsBuildExtensions.Activities.Framework.AssemblyInfo"/> remarks for a description of those tokens):
                <list type="bullet">
                   <item>
                        <description>$(current)</description>
                   </item>
                   <item>
                       <description>$(increment)</description>
                    </item>
                    <item>
                        <description>$(date:&lt;format&gt;)</description>
                   </item>
                </list>
                </para>
            </remarks>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.AssemblyInformationalVersion">
            <summary>
            Sets the assembly informational version.
            </summary>
            <remarks>
                <para>Setting the value to null will disable updating this attribute.</para>
                <para>
                The following tokens are supported (see <see cref="T:TfsBuildExtensions.Activities.Framework.AssemblyInfo"/> remarks for a description of those tokens):
                <list type="bullet">
                    <item>
                    <description>$(version)</description>
                    </item>
                    <item>
                        <description>$(fileversion)</description>
                    </item>
                    <item>
                        <description>$(date:&lt;format&gt;)</description>
                    </item>
                </list>
                </para>
            </remarks>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.AssemblyCompany">
            <summary>
            Sets the company name.
            </summary>
            <remarks>
                <para>Setting the value to null will disable updating this attribute.</para>
                <para>
                The following tokens are supported (see <see cref="T:TfsBuildExtensions.Activities.Framework.AssemblyInfo"/> remarks for a description of those tokens):
                <list type="bullet">
                    <item>
                        <description>$(version)</description>
                    </item>
                    <item>
                        <description>$(fileversion)</description>
                    </item>
                    <item>
                        <description>$(date:&lt;format&gt;)</description>
                    </item>
                </list>
                </para>
            </remarks>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.AssemblyConfiguration">
            <summary>
            Sets the assembly configuration.
            </summary>
            <remarks>
                <para>Setting the value to null will disable updating this attribute.</para>
                <para>
                The following tokens are supported (see <see cref="T:TfsBuildExtensions.Activities.Framework.AssemblyInfo"/> remarks for a description of those tokens):
                <list type="bullet">
                    <item>
                        <description>$(version)</description>
                    </item>
                    <item>
                        <description>$(fileversion)</description>
                    </item>
                    <item>
                        <description>$(date:&lt;format&gt;)</description>
                    </item>
                </list>
                </para>
            </remarks>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.AssemblyCopyright">
            <summary>
            Sets the assembly copyright.
            </summary>
            <remarks>
                <para>Setting the value to null will disable updating this attribute.</para>
                <para>
                The following tokens are supported (see <see cref="T:TfsBuildExtensions.Activities.Framework.AssemblyInfo"/> remarks for a description of those tokens):
                <list type="bullet">
                    <item>
                        <description>$(version)</description>
                    </item>
                    <item>
                        <description>$(fileversion)</description>
                    </item>
                    <item>
                        <description>$(date:&lt;format&gt;)</description>
                    </item>
                </list>
                </para>
            </remarks>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.AssemblyCulture">
            <summary>
            Sets the assembly culture.
            </summary>
            <remarks>
            Setting the value to null will disable updating this attribute.
            </remarks>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.AssemblyDelaySign">
            <summary>
            Set to <b>true</b> to mark the assembly for delay signing.
            </summary>
            <remarks>
            Setting the value to null will disable updating this attribute.
            </remarks>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.AssemblyDescription">
            <summary>
            Sets the assembly description.
            </summary>
            <remarks>
                <para>Setting the value to null will disable updating this attribute.</para>
                <para>
                The following tokens are supported (see <see cref="T:TfsBuildExtensions.Activities.Framework.AssemblyInfo"/> remarks for a description of those tokens):
                <list type="bullet">
                    <item>
                        <description>$(version)</description>
                    </item>
                    <item>
                        <description>$(fileversion)</description>
                    </item>
                    <item>
                        <description>$(date:&lt;format&gt;)</description>
                    </item>
                </list>
                </para>
            </remarks>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.Guid">
            <summary>
            Sets the assembly GUID.
            </summary>
            <remarks>
            Setting the value to null will disable updating this attribute.
            </remarks>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.AssemblyKeyFile">
            <summary>
            Sets the key file to use to sign the assembly.
            </summary>
            <remarks>
            Setting the value to null will disable updating this attribute.
            </remarks>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.AssemblyKeyName">
            <summary>
            Sets the name of a key container within the CSP containing the key pair used to generate a strong name.
            </summary>
            <remarks>
            Setting the value to null will disable updating this attribute.
            </remarks>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.AssemblyProduct">
            <summary>
            Sets the assembly product.
            </summary>
            <remarks>
                <para>Setting the value to null will disable updating this attribute.</para>
                <para>
                The following tokens are supported (see <see cref="T:TfsBuildExtensions.Activities.Framework.AssemblyInfo"/> remarks for a description of those tokens):
                <list type="bullet">
                    <item>
                        <description>$(version)</description>
                    </item>
                    <item>
                        <description>$(fileversion)</description>
                    </item>
                    <item>
                        <description>$(date:&lt;format&gt;)</description>
                    </item>
                </list>
                </para>
            </remarks>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.AssemblyTitle">
            <summary>
            Sets the assembly title.
            </summary>
            <remarks>
                <para>Setting the value to null will disable updating this attribute.</para>
                <para>
                The following tokens are supported (see <see cref="T:TfsBuildExtensions.Activities.Framework.AssemblyInfo"/> remarks for a description of those tokens):
                <list type="bullet">
                    <item>
                        <description>$(version)</description>
                    </item>
                    <item>
                        <description>$(fileversion)</description>
                    </item>
                    <item>
                        <description>$(date:&lt;format&gt;)</description>
                    </item>
                </list>
                </para>
            </remarks>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.AssemblyTrademark">
            <summary>
            Sets the assembly trademark.
            </summary>
            <remarks>
                <para>Setting the value to null will disable updating this attribute.</para>
                <para>
                The following tokens are supported (see <see cref="T:TfsBuildExtensions.Activities.Framework.AssemblyInfo"/> remarks for a description of those tokens):
                <list type="bullet">
                    <item>
                        <description>$(version)</description>
                    </item>
                    <item>
                        <description>$(fileversion)</description>
                    </item>
                    <item>
                        <description>$(date:&lt;format&gt;)</description>
                    </item>
                </list>
                </para>
            </remarks>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.CLSCompliant">
            <summary>
            Set to <b>true</b> to mark the assembly CLS compliant.
            </summary>
            <remarks>
            Setting the value to null will disable updating this attribute.
            </remarks>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.ComVisible">
            <summary>
            Set to <b>true</b> to make the assembly visible to COM.
            </summary>
            <remarks>
            Setting the value to null will disable updating this attribute.
            </remarks>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.MaxAssemblyVersion">
            <summary>
            Gets the max updated assembly version.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.MaxAssemblyFileVersion">
            <summary>
            Gets the max updated assembly file version.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.MaxAssemblyInformationalVersion">
            <summary>
            Gets the max updated assembly informational version.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.AssemblyVersions">
            <summary>
            Gets the updated assembly versions.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.AssemblyFileVersions">
            <summary>
            Gets the max updated assembly file versions.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfo.AssemblyInformationalVersions">
            <summary>
            Gets the updated assembly informational versions.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Framework.ReadAssemblyInfo">
            <summary>
            Activity to read Assembly information
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Framework.ReadAssemblyInfo.InternalExecute">
            <summary>
            Executes the logic for this workflow activity.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.ReadAssemblyInfo.File">
            <summary>
            Sets the AssemblyInfo file to read.
            </summary>
            <remarks>
            This property is <b>required.</b>
            </remarks>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.ReadAssemblyInfo.AssemblyVersion">
            <summary>
            Gets the assembly version.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.ReadAssemblyInfo.AssemblyFileVersion">
            <summary>
            Gets the assembly file version.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.ReadAssemblyInfo.AssemblyInformationalVersion">
            <summary>
            Gets the assembly informational version.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.ReadAssemblyInfo.AssemblyCompany">
            <summary>
            Gets the company name.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.ReadAssemblyInfo.AssemblyConfiguration">
            <summary>
            Gets the assembly configuration.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.ReadAssemblyInfo.AssemblyCopyright">
            <summary>
            Gets the assembly copyright.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.ReadAssemblyInfo.AssemblyCulture">
            <summary>
            Gets the assembly culture.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.ReadAssemblyInfo.AssemblyDelaySign">
            <summary>
            Specifiec whether the assembly is marked for delay signing.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.ReadAssemblyInfo.AssemblyDescription">
            <summary>
            Gets the assembly description.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.ReadAssemblyInfo.Guid">
            <summary>
            Gets the assembly GUID.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.ReadAssemblyInfo.AssemblyKeyFile">
            <summary>
            Gets the key file to use to sign the assembly.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.ReadAssemblyInfo.AssemblyKeyName">
            <summary>
            Gets the name of a key container within the CSP containing the key pair used to generate a strong name.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.ReadAssemblyInfo.AssemblyProduct">
            <summary>
            Gets the assembly product.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.ReadAssemblyInfo.AssemblyTitle">
            <summary>
            Gets the assembly title.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.ReadAssemblyInfo.AssemblyTrademark">
            <summary>
            Gets the assembly trademark.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.ReadAssemblyInfo.CLSCompliant">
            <summary>
            Specifies whether the assemblyis marked CLS compliant.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.ReadAssemblyInfo.ComVisible">
            <summary>
            Specifies whether the assembly is marked visible to COM.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Framework.AssemblyInfoFile">
            <summary>
            Represents a parsed AssemblyInfo file.
            </summary>
            <remarks>
            To correctly parse multiline comments, it must start at the beginning of a line.
            </remarks>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Framework.AssemblyInfoFile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TfsBuildExtensions.Activities.Framework.AssemblyInfoFile"/> class with the specified AssemblyInfo file.
            </summary>
            <param name="path">
            The AssemblyInfo file to parse.
            </param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Framework.AssemblyInfoFile.Write(System.IO.TextWriter)">
            <summary>
            Writes the updated AssemblyInfo file to the specified <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="writer">
            The <see cref="T:System.IO.TextWriter"/> to write to.
            </param>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.AssemblyInfoFile.Item(System.String)">
            <summary>
            Gets or sets the attribute value.
            </summary>
            <param name="attributeName">
            The attribute name.
            </param>
            <value>
            The attribute value. If the attribute is not declared returns <see langword="null"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The attribute <paramref name="attributeName"/> is not declared in the parsed file and cannot be set.
            </exception>
            <returns>string</returns>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Framework.DateAndTimeAction">
            <summary>
            DateAndTimeAction
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Framework.DateAndTimeAction.Get">
            <summary>
            Get
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Framework.DateAndTimeAction.GetElapsed">
            <summary>
            GetElapsed
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Framework.DateAndTimeAction.CheckLater">
            <summary>
            CheckLater
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Framework.DateAndTimeAction.CheckBetween">
            <summary>
            CheckBetween
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Framework.DateAndTimeAction.AddDays">
            <summary>
            AddDays
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Framework.DateAndTimeAction.AddHours">
            <summary>
            AddHours
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Framework.DateAndTimeAction.AddMilliseconds">
            <summary>
            AddMilliseconds
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Framework.DateAndTimeAction.AddMinutes">
            <summary>
            AddMinutes
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Framework.DateAndTimeAction.AddMonths">
            <summary>
            AddMonths
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Framework.DateAndTimeAction.AddSeconds">
            <summary>
            AddSeconds
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Framework.DateAndTimeAction.AddTicks">
            <summary>
            AddTicks
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Framework.DateAndTimeAction.AddYears">
            <summary>
            AddYears
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Framework.DateAndTime">
            <summary>
            <b>Valid Action values are:</b>
            <para><i>AddDays</i> - <b>Required: </b>Format, Value <b>Optional: </b>Start <b>Output: </b> Result</para>
            <para><i>AddHours</i> - <b>Required: </b>Format, Value <b>Optional: </b>Start <b>Output: </b> Result</para>
            <para><i>AddMilliseconds</i> - <b>Required: </b>Format, Value <b>Optional: </b>Start <b>Output: </b> Result</para>
            <para><i>AddMinutes</i> - <b>Required: </b>Format, Value <b>Optional: </b>Start <b>Output: </b> Result</para>
            <para><i>AddMonths</i> - <b>Required: </b>Format, Value <b>Optional: </b>Start <b>Output: </b> Result</para>
            <para><i>AddSeconds</i> - <b>Required: </b>Format, Value <b>Optional: </b>Start <b>Output: </b> Result</para>
            <para><i>AddTicks</i> - <b>Required: </b>Format, Value <b>Optional: </b>Start <b>Output: </b> Result</para>
            <para><i>AddYears</i> - <b>Required: </b>Format, Value <b>Optional: </b>Start <b>Output: </b> Result</para>
            <para><i>CheckBetween</i> - <b>Required: </b>Start, End <b>Optional:</b> UseUtc <b>Output: </b> BoolResult</para>
            <para><i>CheckLater</i> - <b>Required: </b>Start <b>Optional:</b> UseUtc <b>Output: </b> BoolResult</para>
            <para><i>Get</i> - <b>Required: </b>Format <b>Optional:</b> UseUtc <b>Output: </b> Result</para>
            <para><i>GetElapsed</i> - <b>Required: </b>Format, Start <b>Optional: </b>End, UseUtc <b>Output: </b> Result</para>
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Framework.DateAndTime.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.DateAndTime.Action">
            <summary>
            Specifies the action to perform. Default is Get.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.DateAndTime.Start">
            <summary>
            The start time to use
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.DateAndTime.End">
            <summary>
            The end time to use for GetElapsed. Default is DateTime.Now
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.DateAndTime.Format">
            <summary>
            Format to apply to the Result. For GetTime, Format can be any valid DateTime format. For GetElapsed, Format can be Milliseconds, Seconds, Minutes, Hours, Days or Total. Total returns dd:hh:mm:ss
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.DateAndTime.Value">
            <summary>
            The Value to use in calculations
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.DateAndTime.Result">
            <summary>
            The output Result
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.DateAndTime.BoolResult">
            <summary>
            The output boolean result.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.DateAndTime.UseUtc">
            <summary>
            Set to true to use UTC Date / Time for the Action. Default is false.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Framework.ExpandVariables">
            <summary>
            Expands variables of the form $(variable) in the specified inputs to their corresponding values.
            </summary>
            <remarks>
            Variables names are case incensitive and user variables specifed using the <see cref="P:TfsBuildExtensions.Activities.Framework.ExpandVariables.Variables"/> have precedence over environment and build 
            variables.
            </remarks>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Framework.ExpandVariables.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
            <returns>
            The activity result.
            </returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.ExpandVariables.Inputs">
            <summary>
            Sets the input strings to expand.
            </summary>
            <remarks>
            This property is <b>required.</b>
            </remarks>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.ExpandVariables.IncludeBuildVariables">
            <summary>
            Set to <b>true</b> to add build variables to expand.
            </summary>
            <remarks>
            Setting the value to true will enable the following build variables:
            <list type="table">
            <listheader>
            <item>
            <term>Variable</term>
            <description>Description</description>
            </item>
            </listheader>
            <item>
            <term>$(BuildNumer)</term>
            <description>The build number.</description>
            </item>
            <item>
            <term>$(BuildId)</term>
            <description>The current build identifier.</description>
            </item>
            <item>
            <term>$(BuildDefinitionName)</term>
            <description>The current build definition name.</description>
            </item>
            <item>
            <term>$(BuildDefinitionId)</term>
            <description>The current build definition identifier.</description>
            </item>
            <item>
            <term>$(TeamProject)</term>
            <description>The current build team project.</description>
            </item>
            <item>
            <term>$(DropLocation)</term>
            <description>The current build drop location.</description>
            </item>
            <item>
            <term>$(BuildAgent)</term>
            <description>The current build agent name. This variable is only available if the activity is inside a <see cref="T:Microsoft.TeamFoundation.Build.Workflow.Activities.AgentScope"/> activity.</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.ExpandVariables.IncludeEnvironmentVariables">
            <summary>
            Set to <b>true</b> to add environment variables to expand.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.ExpandVariables.Variables">
            <summary>
            Set variables and their value to expand.
            </summary>
            <remarks>
            User variables have precedence over environment variables and build variables.
            </remarks>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Framework.GuidAction">
            <summary>
            GuidAction
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Framework.GuidAction.Create">
            <summary>
            Send
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Framework.GuidAction.CreateCrypto">
            <summary>
            CreateCrypto
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Framework.Guid">
            <summary>
            <b>Valid Action values are:</b>
            <para><i>Create</i> - <b>Output: </b> GuidString, FormattedGuidString</para>
            <para><i>CreateCrypto</i> - <b>Output: </b> GuidString, FormattedGuidString</para>
            </summary>
            <example>
            <code lang="xml"><![CDATA[
            <Sequence DisplayName="TFSBuildExtensions Guid Sequence" sap:VirtualizedContainerService.HintSize="633,208">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="MyGuid" />
              <Variable x:TypeArguments="x:String" Name="MyFormattedGuid" />
            </Sequence.Variables>
            <taf:Guid FailBuildOnError="{x:Null}" LogExceptionStack="{x:Null}" TreatWarningsAsErrors="{x:Null}" Action="Create" DisplayName="Guid (Create)" FormattedGuidString="[MyFormattedGuid]" GuidString="[MyGuid]" sap:VirtualizedContainerService.HintSize="200,22" />
            <mtbwa:WriteBuildMessage DisplayName="Write Guid Result" sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[&quot;MyGuid: &quot; + MyGuid + &quot;. MyFormattedGuid: &quot; + MyFormattedGuid]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
            </Sequence>
            ]]></code>    
            </example>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Framework.Guid.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Framework.Guid.Get">
            <summary>
            Gets this instance.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Framework.Guid.GetCrypto">
            <summary>
            Gets the crypto.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.Guid.Action">
            <summary>
            Specifies the action to perform. Default is Create.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.Guid.GuidString">
            <summary>
            The Guid result:  32 digits: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.Guid.FormattedGuidString">
            <summary>
            The Formatted Guid result: 32 digits separated by hyphens: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Framework.Sleep">
            <summary>
            Sleep a thread for the specified number of milliseconds
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Framework.Sleep.InternalExecute">
            <summary>
            InternalExecute method which activities should implement
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Framework.Sleep.NumberOfMilliseconds">
            <summary>
            Sepecifies the number of milliseconds to sleep for
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Internal.LogBuildError">
            <summary>
            Logs a message as a build error
            Also can fail the build if the FailBuildOnError flag is set
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Internal.LogBuildError.InternalExecute">
            <summary>
            Logs a message as a build error
            Also can fail the build if the FailBuildOnError flag is set
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Internal.LogBuildMessage.#ctor">
            <summary>
            Initializes a new instance of the LogBuildMessage class
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Internal.LogBuildMessage.Importance">
            <summary>
            The importance of the message to be logged
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Management.WmiAction">
            <summary>
            WmiAction
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Management.WmiAction.Execute">
            <summary>
            Execute
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Management.Wmi">
            <summary>
            <b>Valid Action values are:</b>
            <para><i>Execute</i> (<b>Required: </b> Class, Namespace, Method <b> Optional: </b>Instance, MethodParameters <b>Output: </b>ReturnValue)</para>
            <para><b>Remote Execution Support:</b> Yes</para>
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Management.Wmi.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Management.Wmi.Action">
            <summary>
            Specifies the action to perform
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Management.Wmi.Namespace">
            <summary>
            Sets the namespace.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Management.Wmi.Class">
            <summary>
            Sets the WMI class.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Management.Wmi.ReturnValue">
            <summary>
            Gets the ReturnValue for Execute
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Management.Wmi.Method">
            <summary>
            Sets the Method used in Execute
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Management.Wmi.MethodParameters">
            <summary>
            Sets the MethodParameters. Use #~# separate name and value.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Management.Wmi.Instance">
            <summary>
            Sets the Wmi Instance used in Execute
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.NAnt.AddNAntProperty">
            <summary>
            Activity used to add a parameter to NAnt
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.NAnt.AddNAntProperty.InternalExecute">
            <summary>
            InternalExecute method which activities should implement
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.NAnt.AddNAntProperty.Parameters">
            <summary>
            Parameters
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.NAnt.AddNAntProperty.PropertyName">
            <summary>
            PropertyName
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.NAnt.AddNAntProperty.PropertyValue">
            <summary>
            PropertyValue
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.NAnt.ExecutionParameters">
            <summary>
            ExecutionParameters
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.NAnt.ExecutionParameters.#ctor">
            <summary>
            Initializes a new instance of the NAntParameters class.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.NAnt.ExecutionParameters.Properties">
            <summary>
            Properties
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.NAnt.ExecutionParameters.TargetFramework">
            <summary>
            TargetFramework
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.NAnt.ExecutionParameters.BuildFilePath">
            <summary>
            BuildFilePath
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.NAnt.ExecutionParameters.Verbose">
            <summary>
            Verbose
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.NAnt.ExecutionParameters.Debug">
            <summary>
            Debug
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.NAnt.ExecutionParameters.BuildFilePathExists">
            <summary>
            BuildFilePathExists
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.NAnt.InvokeNAnt">
            <summary>
            InvokeNAnt
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.NAnt.InvokeNAnt.CreateInternalBody">
            <summary>
            Returns the implementation for the derived activity
            </summary>
            <returns>the code to execute the activity</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.NAnt.InvokeNAnt.ProcessNantPath(System.String)">
            <summary>
            Replaces %env% placeholders by environment variable values
            </summary>
            <param name="input">string containing placeholders to replace</param>
            <returns>the input script with placeholder removed</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.NAnt.InvokeNAnt.Parameters">
            <summary>
            Parameters
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.NAnt.InvokeNAnt.Verbose">
            <summary>
            Verbose
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.NAnt.InvokeNAnt.IgnoreExitCode">
            <summary>
            IgnoreExitCode
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.NAnt.InvokeNAnt.NAntDirectory">
            <summary>
            NAntDirectory
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.NAnt.InvokeNAnt.WorkingDirectory">
            <summary>
            WorkingDirectory
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.NAnt.InvokeNAnt.LogFilePath">
            <summary>
            LogFilePath
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.NAnt.NAntException">
            <summary>
            NAntException
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.NAnt.NAntException.#ctor">
            <summary>
            Initializes a new instance of the NAntException class.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.NAnt.NAntException.#ctor(System.String)">
            <summary>
            NAntException
            </summary>
            <param name="message">message</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.NAnt.NAntException.#ctor(System.String,System.Exception)">
            <summary>
            NAntException
            </summary>
            <param name="message">message</param>
            <param name="innerException">innerException</param>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Scripting.InvokePowerShellCommand">
            <summary>
            A command to invoke powershell scripts on a build agent
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Scripting.InvokePowerShellCommand.powershellUtilities">
            <summary>
            Interface is used to allow use to mock out calls to the TFS server for testing
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Scripting.InvokePowerShellCommand.#ctor">
            <summary>
            Initializes a new instance of the InvokePowerShellCommand class
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Scripting.InvokePowerShellCommand.#ctor(TfsBuildExtensions.Activities.Scripting.IUtilitiesForPowerShellActivity)">
            <summary>
            Initializes a new instance of the InvokePowerShellCommand class
            </summary>
            <param name="powershellUtilities">Allows a mock implementation of utilities to be passed in for testing</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Scripting.InvokePowerShellCommand.ResolveScript(Microsoft.TeamFoundation.VersionControl.Client.Workspace,System.String,System.String)">
            <summary>
            Resolves the provided script parameter to either a server stored 
            PS file or an inline script for direct execution.
            </summary>
            <param name="workspace">The TFS workspace</param>
            <param name="script">The powershell script or path</param>
            <param name="arguments">The powershell script arguments</param>
            <returns>An executable powershell command</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Scripting.InvokePowerShellCommand.Execute(System.Activities.CodeActivityContext)">
            <summary>
            When implemented in a derived class, performs the execution of the activity.
            </summary>
            <param name="context">The execution environment under which the activity executes.</param>
            <returns>PSObject array</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Scripting.InvokePowerShellCommand.Script">
            <summary>
            Gets or sets the powershell command script to execute.
            </summary>
            <value>The command script in string form</value>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Scripting.InvokePowerShellCommand.Arguments">
            <summary>
            Gets or sets any arguments to be provided to the script
            <value>An arguments list for the command as a string</value>
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Scripting.InvokePowerShellCommand.BuildWorkspace">
            <summary>
            Gets or sets the build workspace. This is used to obtain
            a powershell script from a source control path
            </summary>
            <value>The workspace used by the current build</value>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Scripting.IUtilitiesForPowerShellActivity">
            <summary>
            The set of methods used to resolve scripts from source control or local file system
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Scripting.IUtilitiesForPowerShellActivity.IsServerItem(System.String)">
            <summary>
            Checks if the path is a valid file under source control
            </summary>
            <param name="path">Path to source control in for '$/aaa/file.cs'</param>
            <returns>True if file found</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Scripting.IUtilitiesForPowerShellActivity.GetLocalFilePathFromWorkspace(Microsoft.TeamFoundation.VersionControl.Client.Workspace,System.String)">
            <summary>
            Finds the local path for a server file path
            </summary>
            <param name="workspace">The current TFS workspace</param>
            <param name="fileName">The TFS server path</param>
            <returns>The local file path</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Scripting.IUtilitiesForPowerShellActivity.FileExists(System.String)">
            <summary>
            Checks if a file exists on local file system
            </summary>
            <param name="path">Path to file</param>
            <returns>True if file found</returns>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Scripting.UtilitiesForPowerShellActivity">
            <summary>
            The set of methods used to resolve scripts from source control or local file system
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Scripting.UtilitiesForPowerShellActivity.IsServerItem(System.String)">
            <summary>
            Checks if the path is a valid file under source control
            </summary>
            <param name="path">Path to source control in for '$/aaa/file.cs'</param>
            <returns>True if file found</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Scripting.UtilitiesForPowerShellActivity.GetLocalFilePathFromWorkspace(Microsoft.TeamFoundation.VersionControl.Client.Workspace,System.String)">
            <summary>
            Finds the local path for a server file path
            </summary>
            <param name="workspace">The current TFS workspace</param>
            <param name="fileName">The TFS server path</param>
            <returns>The local file path</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Scripting.UtilitiesForPowerShellActivity.FileExists(System.String)">
            <summary>
            Checks if a file exists on local file system
            </summary>
            <param name="path">Path to file</param>
            <returns>True if file found</returns>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.SharePoint.CatNetScan">
            <summary>
            The CatNetScan activity provides a basic wrapper over CATNetCmd.exe. See http://msdn.microsoft.com/en-gb/library/bb429449(VS.80).aspx for more details.
            <para/>
            </summary>   
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.SharePoint.CatNetScan.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.SharePoint.CatNetScan.CatNetPath">
            <summary>
            Sets the path to CATNetCmd.exe. Default is [Program Files]\Microsoft\CAT.NET\CATNetCmd.exe
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.SharePoint.CatNetScan.AssemblyDirectory">
            <summary>
            Required. The path of an assembly file to analyze. Multiple file paths and wildcards are not supported. This is a required parameter. 
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.SharePoint.CatNetScan.ConfigDirectory">
            <summary>
            Required. The path to a directory which contains .NET configuration files for analysis.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.SharePoint.CatNetScan.Report">
            <summary>
            Required. The file to store the analysis report in.  It is also used to do an analysis of how many issues were found. 
            </summary>   
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.SharePoint.CatNetScan.Rules">
            <summary>
            Optional. The path to a file or directory that contains analysis rule(s).  The engine will use the default rules included with the product by default. 
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.SharePoint.CatNetScan.ReportXsl">
            <summary>
            Optional. The XSL file to use to transform the report.  By default, the packaged XSL transform included in the product will be used. 
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.SharePoint.CatNetScan.ReportXslOutput">
            <summary>
            Optional. The output file to store the XSLT transform output in.  By default, the HTML report will be saved in 'report.html' in the current working directory.  
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.SharePoint.CatNetScan.Verbose">
            <summary>
            Optional. Enables flag to display verbose message when displaying results.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.SharePoint.CatNetScan.AnalysisFailed">
            <summary>
            Gets AnalysisFailed. True if CatNetScan logged Code Analysis errors to the Output file.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.SharePoint.SPDisposeCheck">
            <summary>
            The SPDisposeCheck activity provides a basic wrapper over SPDisposeCheck.exe. See http://msdn.microsoft.com/en-gb/library/bb429449(VS.80).aspx for more details.
            <para/>
            </summary>   
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.SharePoint.SPDisposeCheck.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.SharePoint.SPDisposeCheck.SPDisposePath">
            <summary>
            Sets the path to SPDisposeCheckerCmd.exe. Default is [Program Files]\Microsoft\SharePoint Dispose Check\SPDisposeCheck.exe
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.SharePoint.SPDisposeCheck.AssemblyDirectory">
            <summary>
            Sets the Path to Assemblies
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.SharePoint.SPDisposeCheck.LogFile">
            <summary>
            Set the name of the file for the output report
            </summary>    
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.SharePoint.SPDisposeCheck.AnalysisFailed">
            <summary>
            Gets AnalysisFailed. True if SPDisposeChecker logged Code Analysis errors to the Output file.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteAction">
            <summary>
             Possible action for the activity
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteAction.AddSolution">
            <summary>
            Adds a solution
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteAction.InstallSolution">
            <summary>
            Installs a solution
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteAction.UpdateSolution">
            <summary>
            Updates a solution
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteAction.UninstallSolution">
            <summary>
            Uninstalls a solution
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteAction.RemoveSolution">
            <summary>
            Removes a solution
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteAction.EnableFeature">
            <summary>
            Enables a feature
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteAction.DisableFeature">
            <summary>
            Disables a feature
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteAction.GetFeature">
            <summary>
            Gets the list of features
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteAction.GetSolution">
            <summary>
            Gets the list of solutions
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteDeployment">
            <summary>
            An activity that builds and executes PowerShell commands to deploy SharePoint Solutions to different versions of SharePoint
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteDeployment.GeneratePowerShellScript(System.String,TfsBuildExtensions.Activities.SharePoint.SharePointRemoteAction,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.String,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Generates the PowerShell
            </summary>
            <param name="serverName">The name of the server to run the command on</param>
            <param name="action">The action to perform</param>        
            <param name="compatabilityLevel">The compatabilityLevel to target</param>
            <param name="wspName">The name of the WSP file</param>
            <param name="siteUrl">The web application url</param>
            <param name="wspLiteralPath">The path to the WSP file</param>
            <param name="featureName">The name of a feature within a solution</param>
            <param name="gacDeployment">True if the wsp should be deployed to the GAC</param>
            <param name="force">True if the command should be forced event if a solution is partial deployed</param>
            <param name="otherParameters">A string of adition parameters to append</param>
            <param name="useCredSSP">True if want to use CredSSP on Powershell script</param>
            <param name="domain">Domain of the account to access the server</param>
            <param name="userName">UserName of the account to access the server</param>
            <param name="password">Password of the account to access the server</param>
            <returns>The PowerShell command to run</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteDeployment.ProcessPowerShellOutput(TfsBuildExtensions.Activities.SharePoint.SharePointRemoteAction,System.String)">
            <summary>
            Capture the return results for any commands that return lists
            </summary>
            <param name="action">The command passed</param>
            <param name="outputFromScript">The raw text from the powershell script</param>
            <returns>An array of processed lines</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteDeployment.InternalExecute">
            <summary>
            When implemented in a derived class, performs the execution of the activity.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteDeployment.Action">
            <summary>
            The task to perform.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteDeployment.CompatibilityLevel">
            <summary>
            The values for the CompatibilityLevel parameter.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteDeployment.WspName">
            <summary>
            Gets or sets the name of the WSP e.g. mysolution.wsp.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteDeployment.ServerName">
            <summary>
            Gets or sets the name of the server to execute the PowerShell script on.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteDeployment.WspLiteralPath">
            <summary>
            Gets or sets the fullpath to the WSP file e.g. c:\myfolder\mysolution.wsp.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteDeployment.SiteUrl">
            <summary>
            Gets or sets the URL of the SharePoint web application to deploy a feature to.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteDeployment.GacDeploy">
            <summary>
            Gets or sets if a solution should be deployed to the GAC.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteDeployment.ScriptTimeout">
            <summary>
            Gets or sets the timeout to use when running the powershell script in milliseconds.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteDeployment.Force">
            <summary>
            Gets or sets if a solution should be force installed.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteDeployment.OtherParameters">
            <summary>
            Gets or sets if a any other PowerShell parameter needs to be passed
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteDeployment.FeatureName">
            <summary>
            Gets or sets the name of the feature to be deployed
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteDeployment.UseCredSSP">
            <summary>
            Gets or sets if a solution should be force installed.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteDeployment.Domain">
            <summary>
            Gets or sets if a solution should be force installed.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteDeployment.UserName">
            <summary>
            Gets or sets if a solution should be force installed.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteDeployment.Password">
            <summary>
            Gets or sets if a solution should be force installed.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointRemoteDeployment.ScriptResult">
            <summary>
            Gets or sets the result of the underling powershell command
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SharePoint.SharePointAppAction">
            <summary>
             Possible action for the activity
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SharePoint.SharePointAppAction.Import_SPAppPackage">
            <summary>
            Imports a SPAppPackage
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SharePoint.SharePointAppAction.Install_SPApp">
            <summary>
            Installs a SPApp
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SharePoint.SharePointAppAction.Update_SPAppInstance">
            <summary>
            Updates a SPAppInstance
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SharePoint.SharePointAppAction.Uninstall_SPAppInstance">
            <summary>
            Uninstalls a SPAppInstance
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SharePoint.SharePointAppAction.Get_SPAppInstance">
            <summary>
            Gets the list of SPAppInstances
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SharePoint.SharePointAppDeployment">
            <summary>
            An activity that builds and executes PowerShell commands to deploy SharePoint AppPackages to different versions of SharePoint
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SharePoint.SharePointAppDeployment.GeneratePowerShellScript(System.String,TfsBuildExtensions.Activities.SharePoint.SharePointAppAction,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Generates the PowerShell
            </summary>
            <param name="serverName">The name of the server to run the command on</param>
            <param name="action">The action to perform</param>
            <param name="version">The version to target</param>
            <param name="appSource">The appSource to deploy to</param>
            <param name="appName">The name of the SpAppPackage file</param>
            <param name="siteUrl">The web application url</param>
            <param name="appLiteralPath">The path to the SpAppPackage file</param>        
            <param name="otherParameters">A string of adition parameters to append</param>
            <returns>The PowerShell command to run</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SharePoint.SharePointAppDeployment.ProcessPowerShellOutput(TfsBuildExtensions.Activities.SharePoint.SharePointAppAction,System.String)">
            <summary>
            Capture the return results for any commands that return lists
            </summary>
            <param name="action">The command passed</param>
            <param name="outputFromScript">The raw text from the powershell script</param>
            <returns>An array of processed lines</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SharePoint.SharePointAppDeployment.InternalExecute">
            <summary>
            When implemented in a derived class, performs the execution of the activity.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointAppDeployment.Action">
            <summary>
            The task to perform.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointAppDeployment.Version">
            <summary>
            The values for the CompatabilityLevel parameter.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointAppDeployment.AppSource">
            <summary>
            Defines the source of the app.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointAppDeployment.AppName">
            <summary>
            Gets or sets the name of the App e.g. myapplication.spapp.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointAppDeployment.ServerName">
            <summary>
            Gets or sets the name of the server to execute the PowerShell script on.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointAppDeployment.AppLiteralPath">
            <summary>
            Gets or sets the fullpath to the App file e.g. c:\myfolder\myapplication.spapp.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointAppDeployment.SiteUrl">
            <summary>
            Gets or sets the URL of the SharePoint web application to deploy a feature to.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointAppDeployment.ScriptTimeout">
            <summary>
            Gets or sets the timeout to use when running the powershell script in milliseconds.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointAppDeployment.OtherParameters">
            <summary>
            Gets or sets if a any other PowerShell parameter needs to be passed
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointAppDeployment.ScriptResult">
            <summary>
            Gets or sets the result of the underling powershell command
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SharePoint.SharePointAction">
            <summary>
             Possible action for the activity
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SharePoint.SharePointAction.AddSolution">
            <summary>
            Adds a solution
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SharePoint.SharePointAction.InstallSolution">
            <summary>
            Installs a solution
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SharePoint.SharePointAction.UpdateSolution">
            <summary>
            Updates a solution
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SharePoint.SharePointAction.UninstallSolution">
            <summary>
            Uninstalls a solution
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SharePoint.SharePointAction.RemoveSolution">
            <summary>
            Removes a solution
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SharePoint.SharePointAction.EnableFeature">
            <summary>
            Enables a feature
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SharePoint.SharePointAction.DisableFeature">
            <summary>
            Disables a feature
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SharePoint.SharePointAction.GetFeature">
            <summary>
            Gets the list of features
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SharePoint.SharePointAction.GetSolution">
            <summary>
            Gets the list of solutions
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SharePoint.SharePointDeployment">
            <summary>
            An activity that builds and executes PowerShell commands to deploy SharePoint features
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SharePoint.SharePointDeployment.GeneratePowerShellScript(System.String,TfsBuildExtensions.Activities.SharePoint.SharePointAction,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Generates the PowerShell
            </summary>
            <param name="serverName">The name of the server to run the command on</param>
            <param name="action">The action to perform</param>
            <param name="wspName">The name of the WSP file</param>
            <param name="siteUrl">The web application url</param>
            <param name="wspLiteralPath">The path to the WSP file</param>
            <param name="featureName">The name of a feature within a solution</param>
            <param name="gacDeployment">True if the wsp should be deployed to the GAC</param>
            <param name="force">True if the command should be forced event if a solution is partial deployed</param>
            <param name="otherParameters">A string of adition parameters to append</param>
            <returns>The PowerShell command to run</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SharePoint.SharePointDeployment.ProcessPowerShellOutput(TfsBuildExtensions.Activities.SharePoint.SharePointAction,System.String)">
            <summary>
            Capture the return results for any commands that return lists
            </summary>
            <param name="action">The command passed</param>
            <param name="outputFromScript">The raw text from the powershell script</param>
            <returns>An array of processed lines</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SharePoint.SharePointDeployment.InternalExecute">
            <summary>
            When implemented in a derived class, performs the execution of the activity.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointDeployment.Action">
            <summary>
            The task to perform.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointDeployment.WspName">
            <summary>
            Gets or sets the name of the WSP e.g. mysolution.wsp.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointDeployment.ServerName">
            <summary>
            Gets or sets the name of the server to execute the PowerShell script on.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointDeployment.WspLiteralPath">
            <summary>
            Gets or sets the fullpath to the WSP file e.g. c:\myfolder\mysolution.wsp.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointDeployment.SiteUrl">
            <summary>
            Gets or sets the URL of the SharePoint web application to deploy a feature to.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointDeployment.GacDeploy">
            <summary>
            Gets or sets if a solution should be deployed to the GAC.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointDeployment.ScriptTimeout">
            <summary>
            Gets or sets the timeout to use when running the powershell script in milliseconds.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointDeployment.Force">
            <summary>
            Gets or sets if a solution should be force installed.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointDeployment.OtherParameters">
            <summary>
            Gets or sets if a any other PowerShell parameter needs to be passed
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointDeployment.FeatureName">
            <summary>
            Gets or sets the name of the feature to be deployed
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointDeployment.ScriptResult">
            <summary>
            Gets or sets the result of the underling powershell command
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SharePoint.SharePointDeploymentStatus">
            <summary>
            The data returned from a Sharepoint powershell activiy
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SharePoint.SharePointDeploymentStatus.ToString">
            <summary>
            A string representation of the stored data
            </summary>
            <returns>A list of values</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointDeploymentStatus.Name">
            <summary>
            Gets or sets the name of the feature or solution
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointDeploymentStatus.Id">
            <summary>
            Gets or set the ID of the frayure or solution
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SharePoint.SharePointDeploymentStatus.Deployed">
            <summary>
            Gets or set if the solutions is deloyed (always returns true for features)
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Signing.SignVSIX">
            <summary>
            Activity to digitally sign a VSIX package with an authenticode certificate
            <para>
            A VSIX can't be signed with the signtool.exe since it 
            is a file following the Open Packaging Convention 
            http://msdn.microsoft.com/en-us/magazine/cc163372.aspx) 
            and it doesn't has a SIP capabilities (http://blogs.technet.com/b/eduardonavarro/archive/2008/07/11/3087407.aspx)
            for the purpose of code signing.   
            </para>
            This code has been inspired by Jeff Wilcox's Blog Post http://www.jeff.wilcox.name/2010/03/vsixcodesigning/
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Signing.SignVSIX.InternalExecute">
            <summary> 
            Executes the logic for this workflow activity
            </summary>
            <returns>True if signing has been sucessful false otherwise</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Signing.SignVSIX.SignVSIXFile(System.String,System.String,System.String)">
            <summary>
            Signs all parts of the VSIX file
            </summary>
            <param name="vsixFileName">The file path of the VSIX file</param>
            <param name="pfxFileName">The file path of the certificate</param>
            <param name="password">The password for the certificate</param>
            <returns>True if the file has  been signed, false otherwise</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Signing.SignVSIX.VSIXFilePath">
            <summary>
            The path for the VSIX file to be signed
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Signing.SignVSIX.CertFilePath">
            <summary>
            The certificate file path. It can be a path on a disk or stored in 
            source control (fetched automatically)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Signing.SignVSIX.CertPassword">
            <summary>
            Certificate Password
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SqlServer.DacVersion">
            <summary>
            Updates the DacVersion version number in any .sqlproj file inside a solution.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SqlServer.DacVersion.InternalExecute">
            <summary>
            InternalExecute
            </summary>
            <returns>string</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SqlServer.DacVersion.SqlProjFilePath">
            <summary>
            The absolute path to the .sqlproj file in solution
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SqlServer.DacVersion.Version">
            <summary>
            A valid version number to set the DacVersion element of a sqlproj file
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SqlServer.Extended.SqlScriptLoader">
            <summary>
            SqlScriptLoader
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SqlServer.Extended.SqlScriptLoader.#ctor(System.IO.StreamReader)">
            <summary>
            Initializes a new instance of the SqlScriptLoader class
            </summary>
            <param name="reader">reader</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SqlServer.Extended.SqlScriptLoader.ReadToEnd">
            <summary>
            ReadToEnd
            </summary>
            <returns>string</returns>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SqlServer.SqlExecuteAction">
            <summary>
            SqlExecuteAction
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SqlServer.SqlExecuteAction.Execute">
            <summary>
            Execute
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SqlServer.SqlExecuteAction.ExecuteScalar">
            <summary>
            Execute
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SqlServer.SqlExecuteAction.ExecuteRawReader">
            <summary>
            Execute
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SqlServer.SqlExecute">
            <summary>
            <b>Valid Actions are:</b>
            <para><i>Execute</i> (<b>Required: </b> ConnectionString, Sql or Files <b>Optional:</b> CommandTimeout, Parameters, Retry, UseTransaction)</para>
            <para><i>ExecuteRawReader</i> (<b>Required: </b> ConnectionString, Sql <b>Optional:</b> CommandTimeout, Parameters, Retry, UseTransaction <b>Output: </b> RawReaderResult)</para>
            <para><i>ExecuteScalar</i> (<b>Required: </b> ConnectionString, Sql <b>Optional:</b> CommandTimeout, Parameters, Retry, UseTransaction <b>Output: </b> ScalarResult)</para>
            <para><b>Remote Execution Support:</b> NA</para>
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SqlServer.SqlExecute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TfsBuildExtensions.Activities.SqlServer.SqlExecute"/> class.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SqlServer.SqlExecute.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SqlServer.SqlExecute.ConnectionString">
            <summary>
            Sets the connection string to use for executing the Sql or Files
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SqlServer.SqlExecute.CommandTimeout">
            <summary>
            Sets the timeout in seconds. Default is 30
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SqlServer.SqlExecute.Files">
            <summary>
            Sets the files to execute
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SqlServer.SqlExecute.Sql">
            <summary>
            Sets the Sql to execute
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SqlServer.SqlExecute.Parameters">
            <summary>
            Sets the parameters to substitute at execution time
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SqlServer.SqlExecute.Retry">
            <summary>
            Specifies whether files should be re-executed if they initially fail
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SqlServer.SqlExecute.UseTransaction">
            <summary>
            Set to true to run the sql within a transaction
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SqlServer.SqlExecute.ScalarResult">
            <summary>
            Gets the scalar result
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SqlServer.SqlExecute.RawReaderResult">
            <summary>
            Gets the raw output from the reader
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SqlServer.SqlExecute.Action">
            <summary>
            Specifies the action to perform
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SSH.BasePuttyActivity">
            <summary>
            Base activity for performing operations on a remote host using PuTTy
            This is achieved by invoking available command from PuTTy (http://www.putty.org/)
            <para></para>
            To use this activity PuTTY needs to be installed on the build agent(s) machine.
            We assume build is installed on %ProgramFiles%\PuTTY or 
            in %ProgramFiles(x86)%\PuTTY on 64 bit Operating systems.
            <para>
            In order to PuTTY to remotely contact a host, the hosts needs to be known, this 
            has to be done interactively by logging on the machine with the build agent user
            and connect to the host with PuTTY and accepting the host key
            This operation needs to be done only once (per each different host) since
            the key will be stored on the registry and afterwards PuTTY will use it.
            </para>
            <para>
            In order to make this operation more scalable (or even possible since we can't
            interactively login with NETWORK SERVICES account which is the default account
            for builds) we can optionally pass a parameter with a file (.reg format)
            containing the known hosts.
            This will allows us to have as many hosts as we want, and everytime we add a
            host we can manage it centrally instead of having to log on manually on all
            our agents. (the file can be either a file in the filesystem or stored in 
            source control).
            We can do this by connecting to the hosts on a client machine, export a registry
            key which holds the know hosts and the activity upon execution will add the hosts
            to the agent.
            You can export the hosts list with the reg.exe command
            <code>reg.exe export HKEY_CURRENT_USER\Software\SimonTatham\PuTTY</code>
            </para>
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.CreateCallingParametersBody(System.Activities.Variable{System.String},System.Activities.Variable{System.String})">
            <summary>
            This method is responsable for returning an activity that upon the received parameters and the putty command
            being implemented will return the executable plus parameters to be invoked
            </summary>
            <param name="toolsPathVariable">The workflow variable that will hold the putty executable path</param>
            <param name="toolArgumentsVariable">The workflow variable that will hold the parameters to be passed to the executable</param>
            <returns>the activity code that will return the variables used to call the 
            putty executable that will perform the required action</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.CreateParametersValidationBody">
            <summary>
            This method is responsable for returning an activity that will validate if the
            main activity has received all the necessary parameters and if their
            semantic is valid.
            </summary>
            <returns>The activity code that will validate the parameters</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.CreateInternalBody">
            <summary>
            Creates the code for executing putty activity
            </summary>
            <returns>The code of the activity to be executed</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.SanitizeFileName(System.String)">
            <summary>
            Removes invalid character from a file name.
            </summary>
            <param name="fileName">The FileName to sanitize</param>
            <returns>sanitized FileName without invalid characters</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.CreateBaseParametersValidationParametersBody">
            <summary>
            Gets the code for the activity that validates the main activity parameters
            </summary>
            <returns>The activity that validates the parameters</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.CreateOperationFailedBody(System.String)">
            <summary>
            Gets the activity that sets the HasErrors to true and logs a build error
            </summary>
            <param name="message">The message to log</param>
            <returns>The activity</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.CreateLogFileBody(System.Activities.Variable{System.String})">
            <summary>
            Gets the code for the activity that is responsable to determine the log file file path
            </summary>
            <param name="logFileLocationVariable">The variable where the complete log file path will be stored</param>
            <returns>The activity</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.Authentication">
            <summary>
            The authentication information that we will use to authenticate the 
            user against the remote machine
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.KnownHostsFile">
            <summary>
            The registry (.reg file exported with reg.exe or regedit.exe) file 
            that contains the know hosts. Using this file to registry the hosts 
            which we know will allows us to conect to them without having
            to manually login on the build agent(s) machine once to interactively 
            call PuTTY to register the host on the registry.
            This file can be either a file in the local file system or stored on 
            source control
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.OutputLoggingLevel">
            <summary>
            Logging level for the placing the standard output content directly on 
            the build log
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.LogFileName">
            <summary>
            Specifies the File to log all output to.
            <para></para>
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.LogErrorToFile">
            <summary>
            Should we log to the log file errors that appear on stderr?
            If not the errors will be logged into team build public
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.ToolsPath">
            <summary>
            The path for the putty commands. If missing we will try to determine the path
            ourselves or ultimately rely on path
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.Port">
            <summary>
            The port used for communications. Only to be used if the non standard port
            is not going to be used
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.HasErrors">
            <summary>
            Were there any errors while executing the operation? (or even before that)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.ErrorCode">
            <summary>
            The error code returned by remote command
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.LinkMessage">
            <summary>
            Holds the string that will be shown on the link for the log file (if the file exists)
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.ValidateBaseParametersActivityInternal">
            <summary>
            Validates the parameters of the main activity.
            The hosts is mandatory        
            Username/password(key) also mandatory(if using usr/pwd authentication)
            key is mandatory (if using private key authentication)
            <para></para>
            If the parameters are invalid logs a build error message
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.ValidateBaseParametersActivityInternal.InternalExecute">
            <summary>
            Validates the main activity parameters
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.ValidateBaseParametersActivityInternal.Authentication">
            <summary>
            The authentication information that we will use to authenticate on the remote machine
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.ValidateBaseParametersActivityInternal.HasErrors">
            <summary>
            Predicate that indicates if there were errors found while validating.
            <para></para>
            If there are errors they are logged as errors.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.AddLinkToLogFile">
            <summary>
            Adds a link to the log file in the build logs.
            <para></para>
            The link is only added if the log file is stored in an UNC path
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.AddLinkToLogFile.InternalExecute">
            <summary>
            If the filename is stored in an UNC path then create the link.
            <para></para>
            The link is created with the message in the member LinkMesage
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.AddLinkToLogFile.FileName">
            <summary>
            The filename (complete path) of the file to linked
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.GetLogFile">
            <summary>
            Gets the complete path of the log filename. The file will be automatically stored in the drops folder.
            The name will be based on the user LogFilename parameter. 
            <para></para>
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.GetLogFile.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.GetLogFile.SanitizeFileName(System.String)">
            <summary>
            Removes invalid character from a file name.
            </summary>
            <param name="fileName">The filename to sanitize</param>
            <returns>sanitized filename without invalid characters</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.GetLogFile.GenerateLogFile(System.Activities.ActivityContext)">
            <summary>
            Make sure we have a log file in place.
            <para></para>
            If the user hasn't specified one we will create one for him on
            the logs drops folder path.
            <para></para>
            The file will have the same name of the solution/project being built, plus the
            context for configuration and platform with the .log file extension
            </summary>
            <param name="context">Activity Context</param>
            <returns>The location of the log file</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.GetLogFile.LogFilename">
            <summary>
            Specifies the File to log all output to.
            <para></para>
            If ommited the file will be automatically placed on the logs path of DropsFolder\logs
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.RegisterKnownHosts.RegisterKnownHostsWithFile(System.String)">
            <summary>
            Registers the know hosts using a .reg file.
            Doesn't verify the keys that the file contains.
            So this can be used to load any keys into the registry.
            The entries are written in the registry with reg.exe
            </summary>
            <param name="knowHostRegistryFile">file path for the .reg file that holds the know hosts</param>
            <returns>The exit code from calling reg.exe</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.BasePuttyActivity.RegisterKnownHosts.RegistryHostFileName">
            <summary>
            The registry file that contains the know hosts. 
            If the file is specified it's content will be imported 
            into the registry
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SSH.FileCopyRemote">
            <summary>
            Activity to copy files to a remote system or from a remote system.
            The files are copied either using scp or sftp.
            This activity relies on PuTTy (http://www.putty.org) being installed on 
            the agent machine
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.FileCopyRemote.#ctor">
            <summary>
            Initializes a new instance of the FileCopyRemote class.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.FileCopyRemote.CreateCallingParametersBody(System.Activities.Variable{System.String},System.Activities.Variable{System.String})">
            <summary>
            Base on the main activity parameters constructs the code activity that 
            will return the command line arguments and putty executable location 
            that will be used to perform the copy operation
            </summary>
            <param name="toolsPathVariable">The PuTTY location + executable (pscp) that will perform the copy operation</param>
            <param name="toolArgumentsVariable">the parameters to be passed to the pscp so the copy of files is performed</param>
            <returns>The activity that will construct the command + parameters needed to perform the copy</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.FileCopyRemote.CreateParametersValidationBody">
            <summary>
            This method is responsable for returning an activity that will validate if the
            main activity has received all the necessary parameters and if their
            semantic is valid.
            Only validates the subclass specific parameters. The common parameters are
            validated in the parent.
            <para>
            Validates if source and target parameters are valid.
            </para>
            </summary>
            <returns>The activity code that will validate the parameters</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.FileCopyRemote.Source">
            <summary>
            The source of the files to be copied.
            This is a straight quote from pscp documentation (http://the.earth.li/~sgtatham/putty/0.61/htmldoc/Chapter5.html#pscp-usage-basics-source)
            <para>
            One or more source files. Wildcards are allowed. The syntax of wildcards
            depends on the system to which they apply, so if you are copying from a Windows 
            system to a UNIX system, you should use Windows wildcard syntax (e.g. *.*), but
            if you are copying from a UNIX system to a Windows system, you would use 
            the wildcard syntax allowed by your UNIX shell (e.g. *). 
            </para>
            <para>
            If the source is a remote server and you do not specify a full pathname 
            (in UNIX, a pathname beginning with a / (slash) character), what you specify as 
            a source will be interpreted relative to your home directory on the remote server. 
            </para>
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.FileCopyRemote.Target">
            <summary>
            The target path where the files will be copied too.
            This is a straight quote from pscp documentation (http://the.earth.li/~sgtatham/putty/0.61/htmldoc/Chapter5.html#pscp-usage-basics-target)
            <para>
            The filename or directory to put the file(s). When copying from a remote server
            to a local host, you may wish simply to place the file(s) in 
            the current directory. To do this, you should specify a target of .. 
            For example: pscp fred@example.com:/home/tom/.emacs .
            ...would copy /home/tom/.emacs on the remote server to the current directory. 
            </para>
            <para>
            As with the source parameter, if the target is on a remote server and is not a
            full path name, it is interpreted relative to your 
            home directory on the remote server. 
            </para>
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.FileCopyRemote.Recursively">
            <summary>
            By default only files are copied. If you specify a folder it will skipped (as well as it's contents)
            if you wish to copy directories and it's content you need to see this to true
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.FileCopyRemote.EnableCompression">
            <summary>
            Should we enable compression on file copying operation?
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.FileCopyRemote.PreserveFileAttributes">
            <summary>
            Should the file attributes be preserved while copying file.
            By default the attributes are not preserver (when a file is copied a new timestap will be
            associated with the file). Se this to true if you wish to keep the timestamp of the original
            file.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.FileCopyRemote.Unsafe">
            <summary>
            Should we allow the expansion of wildcards at the server level?
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.FileCopyRemote.Protocol">
            <summary>
            The protocol to be used to copy the files (<see cref="T:TfsBuildExtensions.Activities.SSH.SSHCopyProtocol"/>)
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SSH.FileCopyRemote.ValidatePscpParametersActivityInternal">
            <summary>
            Validates the parameters of the main activity.
            <para></para>
            If the parameters are invalid logs a build error message
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.FileCopyRemote.ValidatePscpParametersActivityInternal.InternalExecute">
            <summary>
            Validates the main activity parameters
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.FileCopyRemote.ValidatePscpParametersActivityInternal.Source">
            <summary>
            The source of the files to be copied.
            This is a straight quote from pscp documentation (http://the.earth.li/~sgtatham/putty/0.61/htmldoc/Chapter5.html#pscp-usage-basics-source)
            <para>
            One or more source files. Wildcards are allowed. The syntax of wildcards
            depends on the system to which they apply, so if you are copying from a Windows 
            system to a UNIX system, you should use Windows wildcard syntax (e.g. *.*), but
            if you are copying from a UNIX system to a Windows system, you would use 
            the wildcard syntax allowed by your UNIX shell (e.g. *). 
            </para>
            <para>
            If the source is a remote server and you do not specify a full pathname 
            (in UNIX, a pathname beginning with a / (slash) character), what you specify as 
            a source will be interpreted relative to your home directory on the remote server. 
            </para>
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.FileCopyRemote.ValidatePscpParametersActivityInternal.Target">
            <summary>
            The target path where the files will be copied too.
            This is a straight quote from pscp documentation (http://the.earth.li/~sgtatham/putty/0.61/htmldoc/Chapter5.html#pscp-usage-basics-target)
            <para>
            The filename or directory to put the file(s). When copying from a remote server
            to a local host, you may wish simply to place the file(s) in 
            the current directory. To do this, you should specify a target of .. 
            For example: pscp fred@example.com:/home/tom/.emacs .
            ...would copy /home/tom/.emacs on the remote server to the current directory. 
            </para>
            <para>
            As with the source parameter, if the target is on a remote server and is not a
            full path name, it is interpreted relative to your 
            home directory on the remote server. 
            </para>
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.FileCopyRemote.ValidatePscpParametersActivityInternal.HasErrors">
            <summary>
            Predicate that indicates if there were errors found while validating.
            <para></para>
            If there are errors they are logged as errors.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SSH.FileCopyRemote.GetPscpCallingParameters">
            <summary>
            Gets the parameters to call plink (the exec name + arguments)
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.FileCopyRemote.GetPscpCallingParameters.Execute(System.Activities.CodeActivityContext)">
            <summary>
            Executes the activity and returns the data necessary to execute putty (executable + arguments)
            </summary>
            <param name="context">The context</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.FileCopyRemote.GetPscpCallingParameters.GetStringIfTrue(System.Boolean,System.String)">
            <summary>
            Gets the string passed as parameter if condition is true
            </summary>
            <param name="condition">The condition value</param>
            <param name="value">the value to be returned if the condition value is true</param>
            <returns>The value if true an empty string otherwise</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.FileCopyRemote.GetPscpCallingParameters.GetStringIfTrue(System.Activities.InArgument{System.Boolean},System.Activities.ActivityContext,System.String)">
            <summary>
            Gets the string passed as parameter if the argument has the value
            true
            </summary>
            <param name="argument">the argument to check</param>
            <param name="context">activity context</param>
            <param name="value">the value to be returned if the variable holds true </param>
            <returns>The value if true an empty string otherwise</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.FileCopyRemote.GetPscpCallingParameters.GenerateCommandLineCommands(System.Activities.ActivityContext)">
            <summary>
            Generate the command line arguments to be passed plink
            <para></para>
            If the user hasn't specified an output FileName we will generate a log
            file name with the project name (using the appropriate configuration/platform settings)
            and store it on the logs folder in the drops directory
            </summary>
            <param name="context">Activity context</param>
            <returns>The command line arguments</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.FileCopyRemote.GetPscpCallingParameters.ToolsPath">
            <summary>
            The path (only the directory) where putty tools are installed.
            <example>c:\program files(x86)\putty</example>
            If empty we will try to determine the correct path automatically and as 
            last resort rely on the PATH environment variable
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.FileCopyRemote.GetPscpCallingParameters.Source">
            <summary>
            The source of the files to be copied.
            This is a straight quote from pscp documentation (http://the.earth.li/~sgtatham/putty/0.61/htmldoc/Chapter5.html#pscp-usage-basics-source)
            <para>
            One or more source files. Wildcards are allowed. The syntax of wildcards
            depends on the system to which they apply, so if you are copying from a Windows 
            system to a UNIX system, you should use Windows wildcard syntax (e.g. *.*), but
            if you are copying from a UNIX system to a Windows system, you would use 
            the wildcard syntax allowed by your UNIX shell (e.g. *). 
            </para>
            <para>
            If the source is a remote server and you do not specify a full pathname 
            (in UNIX, a pathname beginning with a / (slash) character), what you specify as 
            a source will be interpreted relative to your home directory on the remote server. 
            </para>
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.FileCopyRemote.GetPscpCallingParameters.Target">
            <summary>
            The target path where the files will be copied too.
            This is a straight quote from pscp documentation (http://the.earth.li/~sgtatham/putty/0.61/htmldoc/Chapter5.html#pscp-usage-basics-target)
            <para>
            The filename or directory to put the file(s). When copying from a remote server
            to a local host, you may wish simply to place the file(s) in 
            the current directory. To do this, you should specify a target of .. 
            For example: pscp fred@example.com:/home/tom/.emacs .
            ...would copy /home/tom/.emacs on the remote server to the current directory. 
            </para>
            <para>
            As with the source parameter, if the target is on a remote server and is not a
            full path name, it is interpreted relative to your 
            home directory on the remote server. 
            </para>
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.FileCopyRemote.GetPscpCallingParameters.Recursively">
            <summary>
            By default only files are copied. If you specify a folder it will skipped (as well as it's contents)
            if you wish to copy directories and it's content you need to see this to true
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.FileCopyRemote.GetPscpCallingParameters.PreserveFileAttributes">
            <summary>
            Should the file attributes be preserved while copying file.
            By default the attributes are not preserver (when a file is copied a new timestap will be
            associated with the file). Se this to true if you wish to keep the timestamp of the original
            file.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.FileCopyRemote.GetPscpCallingParameters.EnableCompression">
            <summary>
            Should we enable compression on file copying operation?
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.FileCopyRemote.GetPscpCallingParameters.ToolCommandPath">
            <summary>
            The complete path (directory + executable name) to be executed.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.FileCopyRemote.GetPscpCallingParameters.Arguments">
            <summary>
            The arguments to be passed to tool
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SSH.InvokeRemoteScript">
            <summary>
            Activity for invoking a remote script via SSH protocol.
            This is achieved by invoking plink.exe command from PuTTy (http://www.putty.org/)
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.InvokeRemoteScript.#ctor">
            <summary>
            Initializes a new instance of the InvokeRemoteScript class.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.InvokeRemoteScript.CreateParametersValidationBody">
            <summary>
            This method is responsable for returning an activity that will validate if the
            main activity has received all the necessary parameters and if their
            semantic is valid.
            Only validates the subclass specific parameters. The common parameters are
            validated in the parent.
            <para>
            Validates if host and the command are present.
            </para>
            </summary>
            <returns>The activity code that will validate the parameters</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.InvokeRemoteScript.CreateCallingParametersBody(System.Activities.Variable{System.String},System.Activities.Variable{System.String})">
            <summary>
            Gets the code for the activity that is responsable for generating the parameters that will be used to invoke plink
            </summary>
            <param name="toolsPathVariable">The PuTTY location + executable (plink) that will perform the remote call operation</param>
            <param name="toolArgumentsVariable">the parameters to be passed to the plink so command is remotely invoked</param>
            <returns>the activity</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.InvokeRemoteScript.Host">
            <summary>
            The host where the operation will be performed
            No need to specify the host with the username@host since we pass the username explicitily
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.InvokeRemoteScript.Command">
            <summary>
            The shell command to be executed remotely. You can pass not only the command name but also the
            wanted parameters
            <example>ls -al</example>
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SSH.InvokeRemoteScript.GetPlinkCallingParameters">
            <summary>
            Gets the parameters to call plink (the exec name + arguments)
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.InvokeRemoteScript.GetPlinkCallingParameters.Execute(System.Activities.CodeActivityContext)">
            <summary>
            Executes the activity and returns the data necessary to execute putty (executable + arguments)
            </summary>
            <param name="context">The context</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.InvokeRemoteScript.GetPlinkCallingParameters.GenerateCommandLineCommands(System.Activities.ActivityContext)">
            <summary>
            Generate the command line arguments to be passed plink
            <para></para>
            If the user hasn't specified an output FileName we will generate a log
            file name with the project name (using the appropriate configuration/platform settings)
            and store it on the logs folder in the drops directory
            </summary>
            <param name="context">Activity context</param>
            <returns>The command line arguments</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.InvokeRemoteScript.GetPlinkCallingParameters.ToolsPath">
            <summary>
            The path (only the directory) where putty tools are installed.
            <example>c:\program files(x86)\putty</example>
            If empty we will try to determine the correct path automatically and as 
            last resort rely on the PATH environment variable
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.InvokeRemoteScript.GetPlinkCallingParameters.Command">
            <summary>
            The remote command to be executed. It can include parameters
            <example>ls -al /root </example>
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.InvokeRemoteScript.GetPlinkCallingParameters.ToolCommandPath">
            <summary>
            The complete path (directory + executable name) to be executed.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.InvokeRemoteScript.GetPlinkCallingParameters.Arguments">
            <summary>
            The arguments to be passed to tool
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SSH.InvokeRemoteScript.ValidatePlinkParametersActivityInternal">
            <summary>
            Validates the parameters of the main activity.
            The hosts is mandatory        
            Username/password also mandatory
            <para></para>
            If the parameters are invalid logs a build error message
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.InvokeRemoteScript.ValidatePlinkParametersActivityInternal.InternalExecute">
            <summary>
            Validates the main activity parameters
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.InvokeRemoteScript.ValidatePlinkParametersActivityInternal.Command">
            <summary>
            the command to be executed
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.InvokeRemoteScript.ValidatePlinkParametersActivityInternal.Host">
            <summary>
            The host where the operation will be performed
            No need to specify the host with the username@host since we pass the username explicitily
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.InvokeRemoteScript.ValidatePlinkParametersActivityInternal.HasErrors">
            <summary>
            Predicate that indicates if there were errors found while validating.
            <para></para>
            If there are errors they are logged as errors.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.SSH.PuttyHelper.GetAuthenticationParameters(TfsBuildExtensions.Activities.SSH.SSHAuthentication)">
            <summary>
            Constructs the string with the command line parameters
            related to authentication
            </summary>
            <param name="auth">authentication parameters</param>
            <returns>The command line parameters</returns>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SSH.SSHAuthentication">
            <summary>
            Class the represents the authentication information used by the varias 
            PuTTY related activities
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.SSHAuthentication.AuthType">
            <summary>
            Defines the method used to authenticate against the server.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.SSHAuthentication.User">
            <summary>
            The login of the user in which name the operation will be performed
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.SSHAuthentication.Key">
            <summary>
            The password if using username/password authentication  or the private key if using key authentication
            The key can be file in the filesystem or stored in source control (<example>$/TeamProject/Folder/private.ppk</example>
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.SSH.SSHAuthentication.PrivateKeyFileLocation">
            <summary>
            This is an internal member that will hold the physical location
            of the private key (if auth is of private key) if the private 
            key file is stored in source control, the file will be downloaded
            into a temporary file and it's true location will be stored on
            this member
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SSH.SSHAuthenticationType">
            <summary>
            What kind of authentication do we want to run agains the
            server
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SSH.SSHAuthenticationType.UserNamePassword">
            <summary>
            Authenticate against the server using a username and a password.
            Default method
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SSH.SSHAuthenticationType.PrivateKey">
            <summary>
            Authenticate against the server using a private key
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.SSH.SSHCopyProtocol">
            <summary>
            Represents the protocol used to copy files
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SSH.SSHCopyProtocol.scp">
            <summary>
            Copy files using scp (mandatory if you only have ssh v1 in the server)
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.SSH.SSHCopyProtocol.sftp">
            <summary>
            Copy files using sftp (prefered method)
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.AgentSettingsTags">
            <summary>
            AgentSettingsTags
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.AgentSettingsTags.InternalExecute">
            <summary>
            When implemented in a derived class, performs the execution of the activity.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.AgentSettingsTags.Action">
            <summary>
            Action
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.AgentSettingsTags.AgentSettings">
            <summary>
            AgentSettings
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.AgentSettingsTags.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.TagAction">
            <summary>
            TagAction
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.TagAction.Add">
            <summary>
            Add
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.TagAction.Remove">
            <summary>
            Remove
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.BuildAgentTags">
            <summary>
            BuildAgent Tags
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.BuildAgentTags.InternalExecute">
            <summary>
            When implemented in a derived class, performs the execution of the activity.
            </summary>        
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildAgentTags.Action">
            <summary>
            Action
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildAgentTags.BuildAgent">
            <summary>
            BuildAgent
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildAgentTags.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.BuildReportAction">
            <summary>
                BuildReportAction
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.BuildReportAction.Generate">
            <summary>
            Generate
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.BuildReport">
            <summary>
            <b>Valid Action values are:</b> Generate
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.BuildReport.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildReport.ReportFileName">
            <summary>
            Sets the Build Report file name. Defaults to BuildReport.txt
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildReport.FilePath">
            <summary>
            Sets the Build Report file path. Defaults to the build DropLocation
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildReport.XslTransformFile">
            <summary>
            Sets the Xsl File to transform the Xml report. An embbeded Xsl file is used by default.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildReport.Action">
            <summary>
            Specifies the action to perform
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildReport.SmtpServer">
            <summary>
            The SMTP server to use to send the email.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildReport.Port">
            <summary>
            Sets the port to use. Ignored if not specified.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildReport.EmailReport">
            <summary>
            Sets whether to email the report. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildReport.EnableSsl">
            <summary>
            Sets whether to EnableSsl
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildReport.SkipFiles">
            <summary>
            Sets whether to skip the reporting of all files in the DropLocation. Default is false;
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildReport.MailFrom">
            <summary>
            The email address to send the email from.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildReport.MailTo">
            <summary>
            Sets the Item Collection of email address to send the email to.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildReport.Subject">
            <summary>
            The subject of the email. Defaults to "Build Report: BUILDNAME (BUILDNUMBER)"
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildReport.Priority">
            <summary>
            The priority of the email. Default is Normal
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildReport.Format">
            <summary>
            Sets the format of the email. Default is Text
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildReport.UserName">
            <summary>
            Sets the UserName if SmtpClient requires credentials
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildReport.UserPassword">
            <summary>
            Sets the UserPassword if SmtpClient requires credentials
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildReport.UseDefaultCredentials">
            <summary>
            Gets or sets a Boolean value that controls whether the DefaultCredentials are sent with requests. DefaultCredentials represents the system credentials for the current security context in which the application is running. Default is true.
            <para>If UserName and UserPassword is supplied, this is set to false. If UserName and UserPassword are not supplied and this is set to false then mail is sent to the server anonymously.</para>
            <para><b>If you provide credentials for basic authentication, they are sent to the server in clear text. This can present a security issue because your credentials can be seen, and then used by others.</b></para>
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildReport.Attachments">
            <summary>
            An Item Collection of full paths of files to attach to the email.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildReport.AssociatedChangesets">
            <summary>
            Sets the changesets associated with the build
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.BuildStepDurationDisplayOption">
            <summary>
            Enumeration for which Build Steps durations should be returned
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.BuildStepDurationDisplayOption.All">
            <summary>
            Duration of all build steps would be returned
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.BuildStepDurationDisplayOption.SlowestTenSteps">
            <summary>
            Duration of the ten slowest build steps would be returned
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.BuildStepDurationDisplayOption.FastestTenSteps">
            <summary>
            Duration of the ten fastest build steps would be returned
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.BuildStepDuration">
            <summary>
            The activity allows the durations of each build steps to be shown in build summary. User have option to either view all, slowest ten or fastest ten build steps.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.BuildStepDuration.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>        
            <returns>A formatted string containing the list of build steps and their respective durations</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildStepDuration.BuildDetail">
            <summary>
            Gets or sets the build detail to get Build Steps Duration. The Argument is mandatory.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildStepDuration.ShowResultOnSummary">
            <summary>
            Gets or sets a value indicating whether to publish the result on the build summary or not. Default Value is True
            </summary>        
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildStepDuration.SummarySectionHeading">
            <summary>
            Gets or sets the Heading of the Custom Summary Section. If not set the default value selected is "Build Step Durations"
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildStepDuration.BuildStepDurationOption">
            <summary>
            Gets or sets the option to select whether to return all, slowest ten or fast test build steps. Default Value is Slowest Ten Steps
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.BuildWorkspaceAction">
            <summary>
            BuildWorkspaceAction
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.BuildWorkspaceAction.Add">
            <summary>
            Add
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.BuildWorkspaceAction.Remove">
            <summary>
            Remove
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.BuildWorkspaceAction.Clear">
            <summary>
            Clear
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.BuildWorkspace">
            <summary>
            Modifies the workspace associated with a Team Foundation Build
            <b>Valid Action values are:</b>
            <para><i>Add</i> - <b>Required: </b>BuildDefinition, LocalItem, ServerItem</para>
            <para><i>ClearAll</i> - <b>Required: </b>BuildDefinition</para>
            <para><i>Remove</i> - <b>Required: </b>BuildDefinition, LocalItem <i>or</i> ServerItem</para>
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.BuildWorkspace.InternalExecute">
            <summary>
            Internal Execute
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildWorkspace.Action">
            <summary>
            Specifies the action to perform. Default is Add.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildWorkspace.BuildDefinition">
            <summary>
            The build definition that will be modified by the activity.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildWorkspace.LocalItem">
            <summary>
            Local path for the build definition workspace. Use $(SourceDir)[\Path] to use the build agent's default.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.BuildWorkspace.ServerItem">
            <summary>
            Server (source control) path that will be mapped to the workspace
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.CompareLabels">
            <summary>
            Get a changeset for the changes between two labels.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.CompareLabels.InternalExecute">
            <summary>
            Get the label details.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.CompareLabels.Label1">
            <summary>
            Gets or sets the first version control label.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.CompareLabels.Label2">
            <summary>
            Gets or sets the second version control label.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.CompareLabels.VersionControlServer">
            <summary>
            Gets or sets the version control server to use.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.CompareLabels.Changeset">
            <summary>
            Gets or sets the version control server to use.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.ConvertToProperties">
            <summary>
             Returns Dictionary string, string of key-value pairs of a string of arguments that were passed in from another process
             MSBuild: Please use: '/p:Property=Value /p:Property2=Value2 explicit notation (Not /p:Property=Value;Property2=Value2 which poses greater risk because of complexity.  There's actually internal msbuild engine issues handling these scenarios also.)
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.ConvertToProperties.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
            <returns>String of properties converted to the desired type</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.ConvertToProperties.Properties">
            <summary>
            Properties you wish to convert
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.ConvertToProperties.InputType">
            <summary>
            Type of properties passed in (Accepts: MSBuild, Powershell)
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.ConvertFromProperties">
            <summary>
             Returns Dictionary string, string of key-value pairs of a string of arguments that were passed in from another process
             MSBuild: Please use: '/p:Property=Value /p:Property2=Value2 explicit notation (Not /p:Property=Value;Property2=Value2 which poses greater risk because of complexity.  There's actually internal msbuild engine issues handling these scenarios also.)
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.ConvertFromProperties.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
            <returns>String of properties converted to the desired type</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.ConvertFromProperties.Properties">
            <summary>
            Properties you wish to convert
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.ConvertFromProperties.OutputType">
            <summary>
            Type of properties passed in (Accepts: MSBuild, Powershell)
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.DirectoryInfoExtensions">
            <summary>
            The directory extensions.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.DirectoryInfoExtensions.Search(System.IO.DirectoryInfo,System.String,System.Collections.Generic.IEnumerable{System.String},System.IO.SearchOption)">
            <summary>
            Returns the names of files in a specified directories that match the specified patterns.
            </summary>
            <param name="source">The directory to search.</param>
            <param name="fileExtensions">The comma separated list of file extensions. <example>cs,cshtml</example>. </param>
            <param name="searchStrings">The list of search strings (ignore case).</param>
            <param name="searchOption">The search options. Default value is AllDirectories.</param>
            <returns> The list of files that match the specified criteria. </returns>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.FilesTextSearch">
            <summary>
            Custom Activity to search specified files (defined by root directory and file extensions list) for specified strings.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.FilesTextSearch.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TfsBuildExtensions.Activities.TeamFoundationServer.FilesTextSearch"/> class. 
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.FilesTextSearch.Execute(System.Activities.CodeActivityContext)">
            <summary>
            Execute Activity
            </summary>
            <param name="context">code activity context </param>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.FilesTextSearch.SearchDescription">
            <summary>
            Gets or sets the search description.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.FilesTextSearch.BaseDirectory">
            <summary>
            Gets or sets the base search directory.  All directories below this will also be searched,
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.FilesTextSearch.FileExtensions">
            <summary>
            Gets or sets the comma separated list of file extensions.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.FilesTextSearch.SearchStrings">
            <summary>
            Gets or sets the list of search strings.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.FilesTextSearch.MatchCount">
            <summary>
            Gets or sets the match count.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.SearchMatch">
            <summary>
            The search match.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.SearchMatch.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TfsBuildExtensions.Activities.TeamFoundationServer.SearchMatch"/> class.
            </summary>
            <param name="fileName"> The file name. </param>
            <param name="lineNumber"> The line number. </param>
            <param name="lineText"> The line text. </param>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.SearchMatch.File">
            <summary>
            Gets or sets the file information.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.SearchMatch.LineNumber">
            <summary>
            Gets or sets the line number.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.SearchMatch.LineText">
            <summary>
            Gets or sets the line text.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.GetCodeCoverageTotal">
            <summary>
            Activity to query the Test Manager service and get the total code coverage for a build.
            This task is heavily "time-dependent" since the code coverage results are calculates asynchronously on the TFS server.
            Therefore sometimes this activity returns 0 (since it runs before the results are calculated). Unfortunately there is
            no event to hook into, so you need to "sleep" a while before executing this task.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.GetCodeCoverageTotal.InternalExecute">
            <summary>
            Calculates the total code coverage for the build
            </summary>
            <returns>Code coverage total (percentage)</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetCodeCoverageTotal.BuildDetail">
            <summary>
            The BuildDetail object for the build
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.GetDropDownloadLocation">
            <summary>
            Get the most recent build for a build definition.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.GetDropDownloadLocation.InternalExecute">
            <summary>
            Get the label details.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetDropDownloadLocation.BuildDetail">
            <summary>
            Gets or sets the name of the build to get details for.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetDropDownloadLocation.DropDownloadPath">
            <summary>
            Gets or sets the name of the build to get details for.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.ExecuteWorkflow">
            <summary>
            Activity based on CodeActivity
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.ExecuteWorkflow.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
            <returns>IQueuedBuild</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.ExecuteWorkflow.TeamFoundationServer">
            <summary>
            Specifies the TeamFoundationServer. Defaults to that of the current build
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.ExecuteWorkflow.BuildDefinition">
            <summary>
            Specifies the BuildDefinition to query
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.ExecuteWorkflow.TeamProject">
            <summary>
            Specifies the TeamProject. Defaults to that of the current build
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.ExecuteWorkflow.MSBuildArguments">
            <summary>
            Specifies the MSBuildArguments
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.ExecuteWorkflow.OverrideExistingMSBuildArguments">
            <summary>
            Specifies whether to OverrideExistingMSBuildArguments
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuild">
            <summary>
            Retrieves IQueuedBuild object for build that is currently running
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuild.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
            <returns>IQueuedBuild</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuild.TeamFoundationServer">
            <summary>
            Specifies the TeamFoundationServer. Defaults to that of the current build
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuild.BuildId">
            <summary>
            Specifies the BuildId to get
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuildAgentMachineName">
            <summary>
            Get BuildAgent MachineName
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuildAgentMachineName.InternalExecute">
            <summary>
            When implemented in a derived class, performs the execution of the activity.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuildAgentMachineName.BuildAgent">
            <summary>
            BuildAgent
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuildAgentMachineName.AgentMachineName">
            <summary>
            AgentMachineName
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuildController">
            <summary>
            Workflow activity that gets an <see cref="T:Microsoft.TeamFoundation.Build.Client.IBuildController"/>
            based on the Build Server and controller name provided.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuildController.InternalExecute">
            <summary>
            Executes the logic for this workflow activity.
            </summary>
            <returns>The <see cref="T:Microsoft.TeamFoundation.Build.Client.IBuildController"/>
            that is specified.</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuildController.BuildControllerName">
            <summary>
            The build controller's name that exists on the TFS server.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuildController.BuildServer">
            <summary>
            The <see cref="T:Microsoft.TeamFoundation.Build.Client.IBuildServer"/>
            object for the Team Foundation Server and Team
            Project Collection to use that contains the build controller.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuildDefinition">
            <summary>
            Workflow activity that gets an <see cref="T:Microsoft.TeamFoundation.Build.Client.IBuildDefinition"/>
            based on the Build Server and build definition name provided.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuildDefinition.InternalExecute">
            <summary>
            Executes the logic for this workflow activity.
            </summary>
            <returns>The <see cref="T:Microsoft.TeamFoundation.Build.Client.IBuildDefinition"/>
            that is specified.</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuildDefinition.TeamProjectName">
            <summary>
            The name of the team project where the build definition exists.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuildDefinition.BuildDefinitionName">
            <summary>
            The name of the build definition to return.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuildDefinition.BuildServer">
            <summary>
            The <see cref="T:Microsoft.TeamFoundation.Build.Client.IBuildServer"/>
            object for the Team Foundation Server and Team
            Project Collection to use that contains the build definition.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuildDetail">
            <summary>
            Retrieves IBuildDetail object for completed build
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuildDetail.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
            <returns>IBuildDetail</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuildDetail.TeamFoundationServer">
            <summary>
            Specifies the TeamFoundationServer. Defaults to that of the current build
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuildDetail.BuildUri">
            <summary>
            Specifies the BuildURI to retrieve
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuildServer">
            <summary>
            Workflow activity that gets an <see cref="T:Microsoft.TeamFoundation.Build.Client.IBuildServer"/>
            based on the Team Foundation Server URL that is provided.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuildServer.InternalExecute">
            <summary>
            Executes the logic for this workflow activity.
            </summary>
            <returns>The <see cref="T:Microsoft.TeamFoundation.Build.Client.IBuildServer"/>
            that is specified.</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetBuildServer.TeamFoundationServerUrl">
            <summary>
            The URL for the Team Foundation Server to use.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.GetChangeset">
            <summary>
            Get a specific changeset.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.GetChangeset.InternalExecute">
            <summary>
            Get the changeset details.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetChangeset.ChangesetId">
            <summary>
            Gets or sets the changeset specification.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetChangeset.VersionControlServer">
            <summary>
            Gets or sets the version control server to use.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetChangeset.Changeset">
            <summary>
            Gets or sets the changeset.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.GetChangesetItems">
            <summary>
            Get the change items from a changeset.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.GetChangesetItems.InternalExecute">
            <summary>
            Get the changeset details.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetChangesetItems.Changeset">
            <summary>
            Gets or sets the changeset.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetChangesetItems.ChangesetItems">
            <summary>
            Gets or sets the changeset items.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.GetLastGoodBuild">
            <summary>
            Activity based on CodeActivity
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.GetLastGoodBuild.InternalExecute">
            <summary>
            Executes the workflow
            </summary>
            <returns>IBuildDetail</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetLastGoodBuild.BuildDefinition">
            <summary>
            The BuildDefinition to check
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetLastGoodBuild.TeamProject">
            <summary>
            The TeamProject to connect to
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetLastGoodBuild.TeamFoundationServer">
            <summary>
            The TeamFoundationServer to connect to.
            If parameter is empty then the server to which the build server is connected is used
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetLastGoodBuild.ParentBuild">
            <summary>
            The ParentBuild
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetLastGoodBuild.BuildQuality">
            <summary>
            The build quality. If set only the last build with this
            build quality value will be returned (the comparison
            is case insensitive)
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.GetLatestBuildDetail">
            <summary>
            Get the most recent build for a build definition.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.GetLatestBuildDetail.InternalExecute">
            <summary>
            Get the label details.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetLatestBuildDetail.BuildServer">
            <summary>
            Gets or sets the build server to use.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetLatestBuildDetail.TeamProject">
            <summary>
            Gets or sets the name of the team project to get details for.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetLatestBuildDetail.BuildName">
            <summary>
            Gets or sets the name of the build to get details for.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetLatestBuildDetail.BuildDetail">
            <summary>
            Gets or sets the build detail.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.GetLatestChangeset">
            <summary>
            Get the most recent changeset.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.GetLatestChangeset.InternalExecute">
            <summary>
            Get the label details.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetLatestChangeset.VersionControlServer">
            <summary>
            Gets or sets the version control server to use.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetLatestChangeset.VersionControlPath">
            <summary>
            Gets or sets the server path to find the latest changeset for. Defaults to $/
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetLatestChangeset.Changeset">
            <summary>
            Gets or sets the changeset.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.GetLocalWorkspace">
            <summary>
            Get the workspace for the local machine.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.GetLocalWorkspace.InternalExecute">
            <summary>
            Get the changeset details.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetLocalWorkspace.Collection">
            <summary>
            Gets or sets the project collection.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetLocalWorkspace.Workspace">
            <summary>
            Gets or sets the changeset items.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.GetMSBuildProperties">
            <summary>
             Returns Dictionary string, string  of key-value pairs of msbuild arguments that were passed in from another process
             Please use: '/p:Property=Value /p:Property2=Value2 explicit notation (Not /p:Property=Value;Property2=Value2 which poses greater risk because of complexity.  There's actually internal msbuild engine issues handling these scenarios also.)
             Note:  GetMSBuildProperties will eventually be replaced by ConvertProperties which converts msbuild, powershell, and ntshell.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.GetMSBuildProperties.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
            <returns>Dictionary(string, string)</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetMSBuildProperties.MSBuildArguments">
            <summary>
            MSBuildArguments
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.GetPendingChanges">
            <summary>
            Get the most recent pending changes in the workspace.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.GetPendingChanges.InternalExecute">
            <summary>
            Get the pending changes.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetPendingChanges.Workspace">
            <summary>
            Gets or sets the workspace to use.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetPendingChanges.PendingItems">
            <summary>
            Gets or sets the changed items.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.GetValueFromRegistry">
            <summary>
            Activity to read 
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.GetValueFromRegistry.InternalExecute">
            <summary>
            Reads the value from he registry. First we will read the collection 
            registry and if no value is found we will fallback to reading the
            configuration registry.
            If no value is found we log an error (so the activity may fail if
            FailBuildOnError is set to true
            </summary>
            <returns>The key value from the registry</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetValueFromRegistry.DefaultValue">
            <summary>
            Gets or sets the default value if the key is 
            not registered
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetValueFromRegistry.Path">
            <summary>
            Gets or sets the path of the registration entry we
            want to read
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.GetVersionControlLabel">
            <summary>
            Get version control information about a build label.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.GetVersionControlLabel.InternalExecute">
            <summary>
            Get the label details.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetVersionControlLabel.Label">
            <summary>
            Gets or sets the version control label to look for.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetVersionControlLabel.VersionControlServer">
            <summary>
            Gets or sets the version control server to query.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetVersionControlLabel.VersionControlLabel">
            <summary>
            Gets or sets the full version control label.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.GetWebAccessUrlAction">
            <summary>
            GuidAction
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.GetWebAccessUrlAction.BuildDetails">
            <summary>
            BuildDetails
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.GetWebAccessUrlAction.WorkItemEditor">
            <summary>
            WorkItemEditor
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.GetWebAccessUrl">
            <summary>
            <b>Valid Action values are:</b>
            <para><i>BuildDetails</i> - <b>Required: </b>TeamProjectCollection, ItemId <b>Output: </b> Result</para>
            <para><i>WorkItemEditor</i> - <b>Required: </b>TeamProjectCollection, ItemUri <b>Output: </b> Result</para>
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.TFBaseCodeActivity">
            <summary>
            Base class for TFS Activities that require a TeamProjectCollection
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.TFBaseCodeActivity.Execute(System.Activities.CodeActivityContext)">
            <summary>
            Entry point to the Activity. This validates that the TeamProjectCollection is not null and calls the base Execute
            </summary>
            <param name="context">CodeActivityContext</param>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TFBaseCodeActivity.TeamProjectCollection">
            <summary>
            Team Project Collection for this activity. 
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TFBaseCodeActivity.ProjectCollection">
            <summary>
            Protected; value of the TeamProjectCollection InArgument
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.GetWebAccessUrl.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetWebAccessUrl.Action">
            <summary>
            Specifies the action to perform. Default is BuildDetails.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetWebAccessUrl.ItemUri">
            <summary>
            Team Foundation Uri for specific items
            <list type="bullet">
                <listheader>
                <description>Used for:</description>
                </listheader>
                <item>
                    <description>BuildDetails - Uri for the build.</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetWebAccessUrl.ItemId">
            <summary>
            Team Foundation ID for the linked item
            <list type="bullet">
                <listheader>
                <description>Used for:</description>
                </listheader>
                <item>
                    <description>WorkItemEditor - the work item id.</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.GetWebAccessUrl.Result">
            <summary>
            Result Url for the item in TFS Web Access.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.GetMergedChangesets">
            <summary>
            Gets merged changesets for the list of changesets passed in.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.GetMergedChangesets.VersionControlServer">
            <summary>
            Version Control server object
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.GetMergedChangesets.AssociatedChangesets">
            <summary>
            List of changesets to find merges for
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.RefreshWorkItem">
            <summary>
            Ensures that the work item object is up to date.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.RefreshWorkItem.WorkItem">
            <summary>
            The work item to refresh
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.UpdateWorkItem">
            <summary>
            Updates the work item - specifically, the Microsoft.VSTS.Build.IntegrationBuild field
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.UpdateWorkItem.IntegrationBuildFieldRef">
            <summary>
            The name of the field to update in the work item
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.UpdateWorkItem.WorkItem">
            <summary>
            The work item to update
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.UpdateWorkItem.BuildNumber">
            <summary>
            The build number to use
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.UpdateWorkItem.WarningMessage">
            <summary>
            A warning message (for when work items could not be updated)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.UpdateWorkItem.WorkItemTypeFieldCache">
            <summary>
            A cache of already-updated work items
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.WitBatchSaveWorkItems">
            <summary>
            Save a batch of work item changes.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.WitBatchSaveWorkItems.WorkItems">
            <summary>
            The updated work items to save
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.WitGetWorkItemsForArtifacts">
            <summary>
            Gets a list of work items for the list of artifacts passed in (usually these are changesets).
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.WitGetWorkItemsForArtifacts.ArtifactUris">
            <summary>
            Artifacts to find associated work items for
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.WitGetWorkItemsForArtifacts.AsOfDate">
            <summary>
            The date to use for finding associations
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.WitGetWorkItemsForArtifacts.WorkItemStore">
            <summary>
            The work item store
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.WitGetWorkItemsForArtifactsAsyncState">
            <summary>
            Data for the async WitGetWorkItemsForArtifacts task.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.WitGetWorkItemsForArtifactsAsyncState.Action">
            <summary>
            The async action to execute
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.WitGetWorkItemsForArtifactsAsyncState.ArtifactUris">
            <summary>
            List of artifact Uri's
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.WitGetWorkItemsForArtifactsAsyncState.AsOfDate">
            <summary>
            The date to use in the lookup
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.WitGetWorkItemsForArtifactsAsyncState.Canceled">
            <summary>
            Flag to indicate a cancellation of the async operation
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.WitGetWorkItemsForArtifactsAsyncState.WorkItemStore">
            <summary>
            The work item store
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.WitQueryWorkItems">
            <summary>
            Run a query to get work items
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.WitQueryWorkItems.Fields">
            <summary>
            Fields to select for the matching work items
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.WitQueryWorkItems.Ids">
            <summary>
            The list of work item id's to get
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.WitQueryWorkItems.IncludeParentWorkItems">
            <summary>
            Include parent work items
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.WitQueryWorkItems.PageSize">
            <summary>
            Page size for the results
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.WitQueryWorkItems.ParentChildLinks">
            <summary>
            The links from child to parent for the matching work items
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.WitQueryWorkItems.WorkItemStore">
            <summary>
            The work item store
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.IsBuildRunning">
            <summary>
            Checks to see if a build is currently running either by the BuildDefinition or BuildId
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.IsBuildRunning.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
            <returns>bool</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IsBuildRunning.BuildDefinition">
            <summary>
            Specifies the BuildDefinition to query
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IsBuildRunning.TeamProject">
            <summary>
            Specifies the TeamProject. Defaults to that of the current build
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IsBuildRunning.TeamFoundationServer">
            <summary>
            Specifies the TeamFoundationServer. Defaults to that of the current build
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IsBuildRunning.BuildId">
            <summary>
            Specifies the BuildId to query
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.IsSourceChanged">
            <summary>
            Checks build definition workspace to determine if the source control has changed since a given datetime (i.e. when the last good build ran).  Useful for not launching builds if source hasn't changed.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.IsSourceChanged.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
            <returns>bool</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IsSourceChanged.TeamFoundationServer">
            <summary>
            Specifies the TeamFoundationServer. Defaults to that of the current build
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IsSourceChanged.TeamProject">
            <summary>
            Specifies the TeamProject. Defaults to that of the current build
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IsSourceChanged.BuildDefinition">
            <summary>
            Specifies the BuildDefinition
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IsSourceChanged.ServerPath">
            <summary>
            Specifies the ServerPath to query
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IsSourceChanged.Since">
            <summary>
            Since
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.IsSourceChanged.Exclusions">
            <summary>
            Exclusions
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.QueryBuildAgentStatus">
            <summary>
            Get the status of a build agent.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.QueryBuildAgentStatus.InternalExecute">
            <summary>
            Get the label details.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.QueryBuildAgentStatus.BuildServer">
            <summary>
            Gets or sets the build server.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.QueryBuildAgentStatus.BuildAgentName">
            <summary>
            Gets or sets the build agent name.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.QueryBuildAgentStatus.BuildAgentStatus">
            <summary>
            Gets or sets the full version control label.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.QueueBuild">
            <summary>
            Workflow activity that queues a new build with the specified build definition
            and TFS Build Server.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.QueueBuild.InternalExecute">
            <summary>
            Executes the logic for this workflow activity.
            </summary>
            <returns>The <see cref="T:Microsoft.TeamFoundation.Build.Client.IQueuedBuild"/>
            object that is returned after queueing the new build.</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.QueueBuild.BuildServer">
            <summary>
            The <see cref="T:Microsoft.TeamFoundation.Build.Client.IBuildServer"/>
            object for the Team Foundation Server and Team
            Project Collection to use that contains the build definition.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.QueueBuild.BuildDefinition">
            <summary>
            The <see cref="T:Microsoft.TeamFoundation.Build.Client.IBuildDefinition"/>
            object to use to queue a new build.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.QueueBuild.Priority">
            <summary>
            The build priority to use when placing the new build request on the queue.
            </summary>
            <remarks>The default value is <see cref="F:Microsoft.TeamFoundation.Build.Client.QueuePriority.Normal"/>.</remarks>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.QueueBuild.ProcessParameters">
            <summary>
            The process parameters to use whenever queuing a new build if you would like to change any
            of the parameters from their default values specified in the build definition or in the process
            template file.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.QueueBuild.BuildController">
            <summary>
            The <see cref="T:Microsoft.TeamFoundation.Build.Client.IBuildController"/>
            object to use to queue a new build if different from the default build controller
            as specified in the build definition.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.SetBuildAgentStatus">
            <summary>
            Set the status of a build agent.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.SetBuildAgentStatus.InternalExecute">
            <summary>
            Get the label details.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.SetBuildAgentStatus.BuildServer">
            <summary>
            Gets or sets the build server.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.SetBuildAgentStatus.BuildAgentName">
            <summary>
            Gets or sets the build agent name.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.SetBuildAgentStatus.BuildAgentStatus">
            <summary>
            Gets or sets the full version control label.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.StopBuild">
            <summary>
            Will stop another build from running with a given build id.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.StopBuild.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
            <returns>IQueuedBuild</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.StopBuild.TeamFoundationServer">
            <summary>
            Specifies the TeamFoundationServer. Defaults to that of the current build
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.StopBuild.BuildId">
            <summary>
            Specifies the BuildId to stop
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.TfsAction">
            <summary>
            TF action to perform
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.TfsAction.Add">
            <summary>
            Add item(s)
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.TfsAction.Checkin">
            <summary>
            Checkin item(s)
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.TfsAction.Checkout">
            <summary>
            Checkout item(s)
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.TfsAction.Delete">
            <summary>
            Delete item(s)
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.TfsAction.Undelete">
            <summary>
            Undelete item(s)
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.TfsAction.UndoCheckout">
            <summary>
            Undo checked out item(s)
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.TfsSource">
            <summary>
            Activity to wrap TF.exe commands for simple integration in the build process.
            <para />
            <b>Valid Action values are:</b>
            <para><i>Add</i> - Add an item</para>
            <para><i>Checkin</i> - Checkin pending changes</para>
            <para><i>Checkout</i> - Checkout an item</para>
            <para><i>Delete</i> - Delete an item</para>
            <para><i>Undelete</i> - Undelete a deleted item</para>
            <para><i>UndoCheckout</i> - Undo a checked out item</para>
            </summary>
            <example>
            <code lang="xml"><![CDATA[
            <Sequence DisplayName="TFSBuildExtensions TfsSource Sequence">
            <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Default="C:\Builds\1\Tailspin Toys\Tailspin Toys - Iteration 2 - Extension\Sources\Development\Iteration 2\VB6\Class1.cls" Name="ItemSpec" />
                <Variable x:TypeArguments="x:String" Default="C:\Builds\1\Tailspin Toys\Tailspin Toys - Iteration 2 - Extension\Sources\Development\Iteration 2\VB6" Name="WorkingDirectory" />
                <Variable x:TypeArguments="x:String" Default="A checkin comment" Name="CheckinComment" />
                <Variable x:TypeArguments="x:String" Default="A policy override reason" Name="OverrideReason" />
                <Variable x:TypeArguments="x:String" Default="DefaultCollection" Name="ProjectCollection" />
            </Sequence.Variables>
            <!-- Add item to version control -->
            <tat:TfsSource 
                DisplayName="Add file" 
                Action="[TfsAction.Add]" 
                Itemspec="[ItemSpec]" 
                WorkingDirectory="[WorkingDirectory]" />
            <!-- Checkin pending changes with comment -->
            <tat:TfsSource 
                DisplayName="Checkin" 
                Action="[TfsAction.Checkin]" 
                Collection="[ProjectCollection]" 
                Comments="[CheckinComment]" 
                OverrideReason="{x:Null}" 
                Notes="{x:Null}" 
                Recursive="{x:Null}" 
                WorkingDirectory="[WorkingDirectory]" />
            <!-- Checkin pending changes with policy override -->
            <tat:TfsSource 
                DisplayName="Checkin" 
                Action="[TfsAction.Checkin]" 
                Collection="[ProjectCollection]" 
                OverrideReason="[OverrideReason]" 
                WorkingDirectory="[WorkingDirectory]" />
            <!-- Checkout item from version control -->
            <tat:TfsSource 
                DisplayName="Checkout" 
                Action="[TfsAction.Checkout]" 
                Itemspec="[ItemSpec]" 
                WorkingDirectory="[WorkingDirectory]" />
            <!-- Delete item from version control -->
            <tat:TfsSource 
                DisplayName="Delete file" 
                Action="[TfsAction.Delete]" 
                Collection="[ProjectCollection]" 
                Itemspec="[ItemSpec]" 
                WorkingDirectory="[WorkingDirectory]" />
            <!-- Undelete delete from version control -->
            <tat:TfsSource 
                DisplayName="Undelete file" 
                Action="[TfsAction.Undelete]" 
                Itemspec="[ItemSpec]" 
                WorkingDirectory="[WorkingDirectory]" />
            <!-- Undo Checkout -->
            <tat:TfsSource 
                DisplayName="Undo Checkout" 
                Action="[TfsAction.UndoCheckout]" 
                Collection="[ProjectCollection]" 
                Itemspec="[ItemSpec]" 
                WorkingDirectory="[WorkingDirectory]" />
            </Sequence>
            ]]></code>    
            </example>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.TfsSource.InternalExecute">
            <summary> 
            Executes the logic for this workflow activity
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsSource.Action">
            <summary>
            The action to perform
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsSource.Itemspec">
            <summary>
            Item to operate on
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsSource.ItemspecList">
            <summary>
            List of items to operate on
            </summary>        
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsSource.ToolPath">
            <summary>
            Path to TF.exe. Defaults to %VS120COMNTOOLS%..\IDE\tf.exe
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsSource.WorkingDirectory">
            <summary>
            Working directory used when executing command
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsSource.Comments">
            <summary>
            Optional checkin comment
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsSource.Notes">
            <summary>
            Optional checkin notes
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsSource.OverrideReason">
            <summary>
            Optional checkin policy override reason
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsSource.BypassGatedCheckin">
            <summary>
            Bypass a gated checkin policy
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsSource.Collection">
            <summary>
            TFS collection to perform action on
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsSource.Login">
            <summary>
            Optional login information, format: username [, password]
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsSource.Recursive">
            <summary>
            Performs the operation recursively. Defaults to true
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsSource.IgnoreItemAlreadyHasPendingChangesWarning">
            <summary>
            If true, ignores warning about items that already exists in source control during add. Defaults to false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsSource.ReturnCode">
            <summary>
            Gets the Return Code from TF checkout
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.WorkItemTrackingAction">
            <summary>
            WorkItemTrackingAction
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.WorkItemTrackingAction.GetById">
            <summary>
            GetById
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.WorkItemTrackingAction.Save">
            <summary>
            Save
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.WorkItemTrackingAction.Reset">
            <summary>
            Reset
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.WorkItemTrackingAction.GetFieldValue">
            <summary>
            GetFieldValue
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.WorkItemTrackingAction.SetFieldValue">
            <summary>
            SetFieldValue
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.WorkItemTracking">
            <summary>
            Performs operations on Team Foundation Work Items
            <b>Valid Action values are:</b>
            <para><i>GetById</i> - Returns a work item by id. <b>Required: </b>TeamProjectCollection, WorkItemId <b>Output: </b>WorkItem</para>
            <para><i>Save</i> - Saves a work item to the work item store. <b>Required: </b>TeamProjectCollection, WorkItem </para>
            <para><i>Resets</i> - Discards all changes and resets to current version. <b>Required: </b>TeamProjectCollection, WorkItem</para>
            <para><i>GetFieldValue</i> - Gets the value of a work item field. <b>Required: </b>TeamProjectCollection, WorkItem, FieldName <b>Output: </b> FieldValue</para>
            <para><i>SetFieldValue</i> - Sets the value of a work item field. <b>Required: </b>TeamProjectCollection, WorkItem, FieldName, FieldValue</para>
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.WorkItemTracking.InternalExecute">
            <summary>
            InternalExecute
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.WorkItemTracking.Action">
            <summary>
            Specifies the action to perform. Default is Create.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.WorkItemTracking.WorkItem">
            <summary>
            Target work item or returned work item.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.WorkItemTracking.WorkItemId">
            <summary>
            Target work item id or the returned work item id.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.WorkItemTracking.ItemValue">
            <summary>
            The value to set for a field/link or the returned field value.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.WorkItemTracking.FieldName">
            <summary>
            The name of the field to set.
            </summary>
        </member>
        <member name="T:CodeActivitySamples.Hello">
            <summary>
            Hello sample
            </summary>
        </member>
        <member name="M:CodeActivitySamples.Hello.Execute(System.Activities.CodeActivityContext)">
            <summary>
            Execute
            </summary>
            <param name="context">context</param>
            <returns>string</returns>
        </member>
        <member name="P:CodeActivitySamples.Hello.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="P:CodeActivitySamples.Hello.Message2">
            <summary>
            Message2
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.ActivityResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.ActivityResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.ActivityResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.ActivityResources.BeginActionMessage">
            <summary>
              Looks up a localized string similar to {0} has started.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.ActivityResources.CompleteActionMessage">
            <summary>
              Looks up a localized string similar to {0} has completed.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersionAction">
            <summary>
            TfsVersionAction
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersionAction.GetVersion">
            <summary>
            GetVersion
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersionAction.SetVersion">
            <summary>
            SetVersion
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersionAction.GetAndSetVersion">
            <summary>
            GetAndSetVersion
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersionVersionFormat">
            <summary>
            TfsVersionVersionFormat
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersionVersionFormat.DateTime">
            <summary>
            DateTime
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersionVersionFormat.Elapsed">
            <summary>
            Elapsed
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersionVersionFormat.Synced">
            <summary>
            Synced
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion">
            <summary>
            TfsVersion
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.SetFileEncoding">
            <summary>
            Sets the file encoding.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.SetAssemblyDescription">
            <summary>
            Set to True to set the AssemblyDescription when calling SetVersion. Default is false.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.Action">
            <summary>
            Specifies the action to perform
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.SetAssemblyVersion">
            <summary>
            Set to True to set the AssemblyVersion when calling SetVersion. Default is false.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.UseUtcDate">
            <summary>
            Set to True to get the elapsed calculation using UTC Date Time. Default is false
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.SetAssemblyFileVersion">
            <summary>
            Set to True to set the AssemblyFileVersion when calling SetVersion. Default is true.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.SetAssemblyInformationalVersion">
            <summary>
            Set to True to set the AssemblyInformationalVersion when calling SetVersion. Default is false.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.SetNuSpecVersion">
            <summary>
            Set to True to set the SetNuSpecVersion when calling SetVersion. Default is true.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.ForceSetVersion">
            <summary>
            Set to true to force SetVersion action to update files that do not have AssemblyVersion | AssemblyFileVersion 
            | AssemblyDescription present.  Default is false.  ForceSetVersion does not affect AssemblyVersion when 
            SetAssemblyVersion is false or AssemblyDescription when SetAssemblyDescription is false.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.TextEncoding">
            <summary>
            Sets the file encoding. Default is UTF8
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.Files">
            <summary>
            Sets the files to version. If Files is not provided, all AssemblyInfo.* files under the SourceDirectory are versioned.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.Version">
            <summary>
            Gets or Sets the Version
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.AssemblyDescription">
            <summary>
            Gets or Sets the AssemblyDescription.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.AssemblyVersion">
            <summary>
            Sets the AssemblyVersion. Defaults to Version if not set.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.AssemblyInformationalVersion">
            <summary>
            Sets the AssemblyInformationalVersion. Defaults to Version if not set.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.PaddingCount">
            <summary>
            Sets the number of padding digits to use, e.g. 4
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.PaddingDigit">
            <summary>
            Sets the padding digit to use, e.g. 0
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.StartDate">
            <summary>
            Sets the start date to use when using VersionFormat="Elapsed"
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.DateFormat">
            <summary>
            Sets the date format to use when using VersionFormat="DateTime". e.g. MMdd
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.BuildNumberRegex">
            <summary>
            Sets the BuildNumberRegex to determine the verison number from the BuildNumber when using in Synced mode. Default is \d+\.\d+\.\d+\.\d+
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.VersionFormat">
            <summary>
            Sets the Version Format. Valid VersionFormats are Elapsed, DateTime, Synced. Default is Synced
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.Minor">
            <summary>
            Sets the minor version
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.Major">
            <summary>
            Sets the major version
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.Build">
            <summary>
            Gets or Sets the Build version
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.Revision">
            <summary>
            Gets or Sets the Revision version
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.CombineBuildAndRevision">
            <summary>
            Sets whether to make the revision a combination of the Build and Revision. Not applicable for VersionFormat.Synced.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.Delimiter">
            <summary>
            Sets the Delimiter to use in the version number. Default is .
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.TeamFoundationServer.TfsVersion.VersionTemplateFormat">
            <summary>
            Specify the format of the build number. A format for each part must be specified or left blank, e.g. "00.000.00.000", "..0000.0"
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.CodeQuality.VSTest">
            <summary>
            Executes Test Cases using VSTest.Console.exe. 
            The activity is needed for scenarios where the tests are written using Visual Studio 2012 and the TFS server is TFS 2010.
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.CodeQuality.VSTest.VSTestConsoleExecutablePath">
            <summary>
            The path of VSTEST.CONSOLE.EXE
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.CodeQuality.VSTest.PlatformAnyCPU">
            <summary>
            The default Platform Setting of Any CPU
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.CodeQuality.VSTest.FlavorToBuildRelease">
            <summary>
            The default build flavor of Release
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.VSTest.#ctor">
            <summary>
            Initializes a new instance of the VSTest class
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.VSTest.#ctor(TfsBuildExtensions.Activities.CodeQuality.IProcess)">
            <summary>
            Internal constructor taking in an IProcess interface for dependency injection
            </summary>
            <param name="process">The process interface to create the windows process</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.VSTest.InternalExecute">
            <summary>
            Executes the logic of the custom activity
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.VSTest.ConstructCommandLineArguments">
            <summary>
            Creates the command line argument to be passed to the executable VSTEST.CONSOLE.EXE.
            </summary>
            <returns>Returns the command line arguments to be passed to VSTEST.CONSOLE.EXE</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.VSTest.ExecuteTests(System.String,System.String,System.String)">
            <summary>
            Executes unit tests  
            </summary>
            <param name="exeFilePath">The path to VSTEST.CONSOLE.EXE.</param>
            <param name="commandLineArguments">The test assemblies and options passed as command line parameter.</param>
            <param name="workingDirectory">The working directory to execute the executable file from.</param>
            <returns>Returns True if the executable runs without errors. False otherwise.</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.CodeQuality.VSTest.SetBuildError(System.String)">
            <summary>
            Sets the exitCode and Log the build error.
            </summary>
            <param name="errorDescription">The build error description.</param>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.VSTest.Build">
            <summary>
            Sets the Build Details object of the build under which the activity is running in.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.VSTest.TestAssemblies">
            <summary>
            Sets the name of the test assemblies containing test cases to execute."
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.VSTest.Settings">
            <summary>
            Run tests with additional settings such as data collectors.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.VSTest.TestCaseFilter">
            <summary>
            Run tests that match the given expression. Expression is of the format property=value
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.VSTest.TestNames">
            <summary>
            Run tests with names that match the provided values.
            Example: TestMethod1,testMethod2
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.VSTest.PublishTestResults">
            <summary>
            Set to true to publish test results to TFS.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.VSTest.EnableCodeCoverage">
            <summary>
            Set to true to publish unit tests code coverage to TFS
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.VSTest.Platform">
            <summary>
            Which platform to publish test results for (ex. Any CPU). Default to Any CPU
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.VSTest.Flavor">
            <summary>
            Which flavor to publish test results for (ex. Debug). Defaults to Release.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.VSTest.ProjectCollectionUrl">
            <summary>
            Sets the URL of the Team Foundation Server's Project Collection URL
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.VSTest.WorkingDirectory">
            <summary>
            Sets the Working Directory for the VSTEST.CONSOLE.EXE to run in.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.CodeQuality.VSTest.ExitCode">
            <summary>
            Whether or not the tests ran successfully.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Virtualization.Utilities.Utility.GetServiceObject(System.Management.ManagementScope,System.String)">
            <summary>
            Common utility function to get a service object
            </summary>
            <param name="scope">The scope, in effect the HyperV server</param>
            <param name="serviceName">The name of the VM</param>
            <returns>A service object</returns>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Virtualization.Utilities.Utility.ValueRole.Default">
            <summary>
            Value role state
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Virtualization.Utilities.Utility.ValueRole.Minimum">
            <summary>
            Value role state
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Virtualization.Utilities.Utility.ValueRole.Maximum">
            <summary>
            Value role state
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Virtualization.Utilities.Utility.ValueRole.Increment">
            <summary>
            Value role state
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Virtualization.Utilities.Utility.ValueRange.Default">
            <summary>
            Value range state
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Virtualization.Utilities.Utility.ValueRange.Minimum">
            <summary>
            Value range state
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Virtualization.Utilities.Utility.ValueRange.Maximum">
            <summary>
            Value range state
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Virtualization.Utilities.Utility.ValueRange.Increment">
            <summary>
            Value range state
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Virtualization.HyperVAction">
            <summary>
             Possible action for the activity
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Virtualization.HyperVAction.Start">
            <summary>
            Starts the VM
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Virtualization.HyperVAction.Shutdown">
            <summary>
            Shutdown the VM Guest OS
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Virtualization.HyperVAction.Turnoff">
            <summary>
            Stwich off the VM
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Virtualization.HyperVAction.Pause">
            <summary>
            Pause the VM
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Virtualization.HyperVAction.Suspend">
            <summary>
            Save the state of the VM to disk
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Virtualization.HyperVAction.Restart">
            <summary>
            Restarts the VM
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Virtualization.HyperVAction.Snapshot">
            <summary>
            Takes a snapshot of the VM
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Virtualization.HyperVAction.ApplyLastSnapshot">
            <summary>
            Restores last snapshot of the VM
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Virtualization.HyperVAction.ApplyNamedSnapshot">
            <summary>
            Restores named snapshot of the VM
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Virtualization.HyperV">
            <summary>
            An activity to perform HyperV operations within a TFS 2010 build<para/>
            <b>Valid Action values are:</b>
            <para><i>Start</i></para>
            <para><i>Shutdown</i></para>
            <para><i>Turnoff</i></para>
            <para><i>Pause</i></para>
            <para><i>Suspend</i></para>
            <para><i>Restart</i></para>
            <para><i>Snapshot</i></para>
            <para><i>ApplyLastSnapshot</i></para>
            <para><i>ApplyNamedSnapshot</i></para>
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Virtualization.HyperV.action">
            <summary>
            The action to perform
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Virtualization.HyperV.InternalExecute">
            <summary>
            Calls the actual method
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Virtualization.HyperV.GetVm(System.Management.ManagementScope,System.String)">
            <summary>
            Gets the requested VM
            </summary>
            <param name="scope">The HyperV Server scope</param>
            <param name="vmname">The name of the target VM</param>
            <returns>The VM management object</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Virtualization.HyperV.RequestShutdown">
            <summary>
            Shutdown the names guest VM
            </summary>
            <returns>True if succeeds</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Virtualization.HyperV.GetScope">
            <summary>
            Gets the scope of the target HyperV server 
            </summary>
            <returns>A hyperV server scope</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Virtualization.HyperV.RequestStateChange">
            <summary>
            Requests that the state of the running VM is changed, these are HyperV operations
            </summary>
            <returns>True if the action was completed</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Virtualization.HyperV.CreateVirtualSystemSnapshot">
            <summary>
            Creates a new snapshot of the named VM
            </summary>
            <returns>True if completed without error</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Virtualization.HyperV.GetLastVirtualSystemSnapshot(System.Management.ManagementObject)">
            <summary>
            Gets the last snapshot of the named VM snapshot tree
            </summary>
            <param name="vm">The current management object for the VM</param>
            <returns>The object containing the details of the snapshot</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Virtualization.HyperV.ApplyNamedVirtualSystemSnapshot">
            <summary>
            Reverts the VM to the previous snapshop
            </summary>
            <returns>True of operation completed without error</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Virtualization.HyperV.ApplyLastVirtualSystemSnapshot">
            <summary>
            Reverts the VM to the previous shapshop
            </summary>
            <returns>True of operation completed without error</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Virtualization.HyperV.ApplyVirtualSystemSnapshot(System.Management.ManagementObject,System.Management.ManagementObject)">
            <summary>
            Reverts the VM to the previous shapshop
            </summary>
            <param name="vm">The vm to apply the snapstop to</param>
            <param name="snapshot">The snapshot image</param>
            <returns>True of operation completed without error</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Virtualization.HyperV.ServerName">
            <summary>
            The name of the server host the VM. '.' can be used for the localhost.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Virtualization.HyperV.VMName">
            <summary>
            The name of the VM to perform operations on.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Virtualization.HyperV.SnapshotName">
            <summary>
            The name of the snapshot to restore to the VM 
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Virtualization.HyperV.Action">
            <summary>
            The task to perform.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Virtualization.HyperV.Succeeded">
            <summary>
            Gets whether the action succeeded.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Virtualization.Extended.HyperVException">
            <summary>
            HyperV Activity exception handler
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Virtualization.Extended.HyperVException.#ctor">
            <summary>
            Initializes a new instance of the HyperVException class
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Virtualization.Extended.HyperVException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the HyperVException class
            </summary>
            <param name="message">Message to send</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Virtualization.Extended.HyperVException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the HyperVException class
            </summary>
            <param name="message">Message to send</param>
            <param name="innerException">Inner exception details</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Virtualization.Extended.HyperVException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the HyperVException class
            </summary>
            <param name="info">Serialization information for the exception</param>
            <param name="context">The streaming context for the exception</param>
        </member>
        <member name="T:TfsBuildExtensions.Activities.VisualStudio.VSVersionNotSupportedException">
            <summary>
            Exception to be thrown if an action is asked to be performed with an unsupported VS
            version
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VSVersionNotSupportedException.#ctor">
            <summary>
            Initializes a new instance of the VSVersionNotSupportedException class
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VSVersionNotSupportedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the VSVersionNotSupportedException class
            </summary>
            <param name="message">Message to send</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VSVersionNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the VSVersionNotSupportedException class
            </summary>
            <param name="message">Message to send</param>
            <param name="innerException">Inner exception details</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VSVersionNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the VSVersionNotSupportedException class
            </summary>
            <param name="info">Serialization information for the exception</param>
            <param name="context">The streaming context for the exception</param>
        </member>
        <member name="T:TfsBuildExtensions.Activities.VisualStudio.VSVersionInternal">
            <summary>
            Represents the several Visual Studio versions.
            <para>
            Internally the value is stored as the VS internal number multiplied by 10 (eg: VS2010 is 100 since it's internal version number is 10.0).
            </para>
            It also contains two reserved versions one for versious previous do VS .Net 2002 and another for versions we do not know about (versions
            above VS 2012)
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSVersionInternal.VS2015">
            <summary>
            Visual Studio 2013
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSVersionInternal.VS2013">
            <summary>
            Visual Studio 2013
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSVersionInternal.VS2012">
            <summary>
            Visual Studio 2012
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSVersionInternal.VS11">
            <summary>
            Visual Studio Dev 11 DEPRECATED. Not deleted so we don't break existing process templates.
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSVersionInternal.VS2010">
            <summary>
            Visual Studio 2010
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSVersionInternal.VS2008">
            <summary>
            Visual Studio 2008
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSVersionInternal.VS2005">
            <summary>
            Visual Studio 2005
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSVersionInternal.VSNet2003">
            <summary>
            Visual Studio 2003
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSVersionInternal.VSNet2002">
            <summary>
            Visual Studio .Net 2002
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSVersionInternal.Previous">
            <summary>
            Previous unregonized version. 
            Any version previous to Visual Studio .Net 2002
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSVersionInternal.VSNext">
            <summary>
            Next Version whose number is still not known.
            Versions above VS 2010
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSVersionInternal.Auto">
            <summary>
            Let the system decide which version to use.
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VSSolution.CanAutoDetectVersion(System.String)">
            <summary>
            Checks if we can auto detect the version of the FileName
            <para></para>
            Only solution (.sln) files are supported
            </summary>
            <param name="filePath">The path (with filename) to check</param>
            <returns>true if we can auto detect the version false otherwise</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSSolution.Version">
            <summary>
            The internal version on the solution fileName
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSSolution.FriendlyVersion">
            <summary>
            The version number as people are using to refer to (marketing name)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSSolution.FileName">
            <summary>
            Filename of the solution
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.VisualStudio.VSHelper">
            <summary>
            Gets the installation path of a given VS version.
            <para></para>
            Supported versions 2005, 2008 and 2010, .Net 2003 and .Net 2002
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VSHelper.GetVisualStudioInstallationDir(TfsBuildExtensions.Activities.VisualStudio.VSVersionInternal)">
            <summary>
            Gets the installation directory of a given Visual Studio Version
            </summary>
            <param name="version">Visual Studio Version</param>
            <returns>Null if not installed the installation directory otherwise</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VSHelper.IsSupportedVersion(TfsBuildExtensions.Activities.VisualStudio.VSVersionInternal)">
            <summary>
            Predicate that indicates if we support getting the installation folder
            for it.
            </summary>
            <param name="version">Visual Studio Version</param>
            <returns>true if supported false otherwise</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VSHelper.GetVersionNumber(TfsBuildExtensions.Activities.VisualStudio.VSVersionInternal)">
            <summary>
            Gets the version number as used by Visual Studio to identify it's version internally.
            <para></para>
            eg: Visual Studio 2010 is 10.0 and Visual Studio 2008 is 9.0
            </summary>
            <param name="version">Visual Studio Version</param>
            <returns>A string with the VS internal number version</returns>
        </member>
        <member name="T:TfsBuildExtensions.Activities.VisualStudio.VB6">
            <summary>
            This activity wraps the VB6 compiler. 
            </summary>
            <example>
            <code lang="xml"><![CDATA[
            <Sequence DisplayName="TFSBuildExtensions VB6 Compile Sequence">
            <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Default="[SourcesDirectory + &quot;\Development\Iteration 2\VB6\AComponent.vbp&quot;]" Name="ProjectToCompile" />
            </Sequence.Variables>
            <!-- Compile a VB6 project using default settings -->    
            <tav:VB6 
                DisplayName="Compile VB6 for Project" 
                ProjectFile="[ProjectToCompile]" />
            <!-- Compile a VB6 project, change project properties  -->    
            <tav:VB6 
                DisplayName="Compile VB6 for Project" 
                ProjectFile="[ProjectToCompile]" 
                ChangeProperty="RevisionVer=4;CompatibleMode=0" />
            </Sequence>
            ]]></code>    
            </example>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VB6.InternalExecute">
            <summary>
            Executes the logic for this workflow activity.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VB6.ProjectFile">
            <summary>
            Name of VB6 project to compile
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VB6.OutDir">
            <summary>
            Output directory. Default is build drop location + vb project directory
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VB6.LogFile">
            <summary>
            Logfile for compilation output. Default is build drop location + vb project filename + .log
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VB6.ToolPath">
            <summary>
            Path to VB6 compiler. Default is C:\Program Files\Microsoft Visual Studio\VB98\VB6.exe
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VB6.WorkingDirectory">
            <summary>
            Working directory used when compiling
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VB6.ChangeProperty">
            <summary>
            Project properties to change at build time. Specify properties to change as key=value;key=value
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VB6.CompileTimeout">
            <summary>
            Specifies the amount of time, in milliseconds, to wait for the project to compile. Default is 0 which no timeout
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VB6.ReturnCode">
            <summary>
            Gets the Return Code from the VB6 compile activity
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.VisualStudio.VBPProject">
            <summary>
            Internal class to wrap a VB6 project file
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VBPProject.#ctor">
            <summary>
            Initializes a new instance of the VBPProject class. Wrapper class to parse and edit a VB6 project file
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VBPProject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the VBPProject class. Wrapper class to parse and edit a VB6 project file
            </summary>
            <param name="projectFileExt">Project filename</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VBPProject.Load">
            <summary>
            Method to load a VB6 project file
            </summary>
            <returns>True if project was loaded successfully, false otherwise</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VBPProject.Save">
            <summary>
            Method to save a VB6 project file
            </summary>
            <returns>True if project was loaded successfully, false otherwise</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VBPProject.SetProjectProperty(System.String,System.String,System.Boolean)">
            <summary>
            Sets a VB6 project property
            </summary>
            <param name="name">Name of property to set</param>
            <param name="value">Value to set</param>
            <param name="addProp">True if property should be created</param>
            <returns>bool</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VBPProject.ProjectFile">
            <summary>
            VB6 project file
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.VisualStudio.VSDevEnvAction">
            <summary>
            The action to be performed while using devenv to build a solution/project
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSDevEnvAction.Build">
            <summary>
            Build the solution/project
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSDevEnvAction.Rebuild">
            <summary>
            Clean and then build solution/project
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSDevEnvAction.Clean">
            <summary>
            Clean the solution/project
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSDevEnvAction.Deploy">
            <summary>
            Build the solution/project and then deploy it.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.VisualStudio.VSVersion">
            <summary>
            Represents the several Visual Studio versions.
            <para>
            Internally the value is stored as the VS internal number multiplied by 10 (eg: VS2010 is 100 since it's internal version number is 10.0).
            </para>
            <remarks>The value of the enums MUST be kept in sync with <see cref="T:TfsBuildExtensions.Activities.VisualStudio.VSVersionInternal"/></remarks>
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSVersion.VS2013">
            <summary>
            Visual Studio 2013
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSVersion.VS2012">
            <summary>
            Visual Studio 2012
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSVersion.VS2010">
            <summary>
            Visual Studio 2010
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSVersion.VS2008">
            <summary>
            Visual Studio 2008
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSVersion.VS2005">
            <summary>
            Visual Studio 2005
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSVersion.VSNet2003">
            <summary>
            Visual Studio 2003
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSVersion.VSNet2002">
            <summary>
            Visual Studio .Net 2002
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.VisualStudio.VSVersion.Auto">
            <summary>
            Let the system decide which version to use.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv">
            <summary>
            Activity for building Visual Studio solutions using devenv. This allows for building or deploying
            solutions/projects that can't be built using msbuild (C++ (pre VS2010), BTS 2004, 2006 and 2006R, 
            deploy reporting services projects,etc)
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.CreateInternalBody">
            <summary>
            Creates the code for executing dev env activity
            </summary>
            <returns>The code of the activity to be executed</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetActionCommandLineOption(TfsBuildExtensions.Activities.VisualStudio.VSDevEnvAction)">
            <summary>
            Gets the command line action string to be executed by devenv
            </summary>
            <param name="action">The action to be executed by devenv</param>
            <returns>The command line option for the corresponding action</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetVersion(System.String,TfsBuildExtensions.Activities.VisualStudio.VSVersion)">
            <summary>
            Gets the Visual Studio version to be used.
            <para>
            If the user has specified the version than that version will be used.
            </para>
            If the user has specified Auto then we will determine VS's appropriate
            version based on the version of the file (.sln) we are going to build
            </summary>
            <param name="fileName">The name of the solution file to get the version (full path). Only used if <value>TfsBuildExtensions.Activities.VisualStudio.VSVersion.Auto</value> is specified</param>
            <param name="version">The version</param>
            <returns>The devenv version that will be used</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.CreateValidationParametersBody">
            <summary>
            Gets the code for the activity that validates the main activity parameters
            </summary>
            <returns>The activity that validates the parameters</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetOperationFailedBody(System.String)">
            <summary>
            Gets the activity that sets the HasErrors to true and logs a build error
            </summary>
            <param name="message">The message to log</param>
            <returns>The activity</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvLogFileBody(System.Activities.Variable{System.String})">
            <summary>
            Gets the code for the activity that is responsible to determine the log file file path
            </summary>
            <param name="logFileLocationVariable">The variable where the complete log file path will be stored</param>
            <returns>The activity</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvCallingParametersBody(System.Activities.Variable{System.String},System.Activities.Variable{System.String},System.Activities.Variable{System.String},System.Activities.Variable{System.String})">
            <summary>
            Gets the code for the activity that is responsible for getting the location and executable name
            of the devenv version we need
            </summary>
            <param name="devEnvPathVariable">the variable that holds the dev env path</param>
            <param name="logFileLocationVariable">the variable that holds the complete path of the log filePath</param>
            <param name="devEnvCommandPathVariable">the variable that holds the path+exec name to be executed</param>
            <param name="devEnvArgumentsVariable">the arguments that holds the arguments to be passed to devenv</param>
            <returns>the activity</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.FilePath">
            <summary>
            The Path to the solution or Project to build
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.ProjectPath">
            <summary>
            The Path to the project to build for the specified solution.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.Configuration">
            <summary>
            The Configuration to Build.
            <example>
            <list type="">
            <item>Debug</item>
            <item>Release</item>
            </list>
            </example>
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.ProjectConfiguration">
            <summary>
            The project configuration to build. Can only be used is the <see cref="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.ProjectPath"/> property is set.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.Platform">
            <summary>
            The Platform to Build.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.OutputFile">
            <summary>
            Specifies the File to log all output to.
            <para></para>
            If omitted the file will be automatically placed on the logs path of DropsFolder\logs
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.Action">
            <summary>
            The action to perform with devenv (build, rebuild, clean,...)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.Version">
            <summary>
            The Visual Studio's devenv version to use to build the FileName.
            <para></para>
            If Auto is specified the system will determine the most appropriate
            version to use based on the file version.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.OutputLoggingLevel">
            <summary>
            Logging level for the placing the standard output content directly on the build log
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.HasErrors">
            <summary>
            Were there any errors while executing devenv? (or even before that)
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.ErrorCode">
            <summary>
            The error code returned by devenv
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.ValidateActivityInternal">
            <summary>
            Validates the parameters of the main activity.
            The filename has to be mandatory and has to exist on disk.
            If the user has selection auto selection of devenv version than it verifies
            if the version type can be auto detected for the specified file type (only
            solution files support auto detection)
            <para></para>
            If the parameters are invalid logs a build error message
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.ValidateActivityInternal.InternalExecute">
            <summary>
            Validates the main activity parameters
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.ValidateActivityInternal.FilePath">
            <summary>
            The Path to the solution or Project to build
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.ValidateActivityInternal.Version">
            <summary>
            The Visual Studio's devenv version to use to build the FileName.
            <para></para>
            If Auto is specified the system will determine the most appropriate
            version to use based on the file version.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.ValidateActivityInternal.HasErrors">
            <summary>
            Predicate that indicates if there were errors found while validating.
            <para></para>
            If there are errors they are logged as errors.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvCallingParameters">
            <summary>
            Gets the parameters to call devenv (the exec name + arguments)
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvCallingParameters.Execute(System.Activities.CodeActivityContext)">
            <summary>
            Executes the activity and returns the data necessary to execute devenv (executable + arguments)
            </summary>
            <param name="context">The context</param>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvCallingParameters.GenerateCommandLineCommands(System.Activities.ActivityContext)">
            <summary>
            Generate the command line arguments to be passed to devenv
            <para></para>
            If the user hasn't specified an output FileName we will generate a log
            file name with the project name (using the appropriate configuration/platform settings)
            and store it on the logs folder in the drops directory
            </summary>
            <param name="context">Activity context</param>
            <returns>The command line arguments</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvCallingParameters.DevEnvPath">
            <summary>
            The path (only the directory) where devenv is stored.
            <example>c:\program files(x86)\Microsoft Visual Studio 10\common7\ide</example>
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvCallingParameters.DevEnvCommandPath">
            <summary>
            The complete path (directory + executable name) to be executed.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvCallingParameters.Arguments">
            <summary>
            The arguments to be passed to devenv
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvCallingParameters.FilePath">
            <summary>
            The Path to the solution or Project to build
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvCallingParameters.ProjectPath">
            <summary>
            The Path to the project to build for the specified solution.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvCallingParameters.Configuration">
            <summary>
            The Configuration to Build.
            <example>
            <list type="">
            <item>Debug</item>
            <item>Release</item>
            </list>
            </example>
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvCallingParameters.ProjectConfiguration">
            <summary>
            The project configuration to build. Can only be used is the <see cref="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvCallingParameters.ProjectPath"/> property is set.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvCallingParameters.Platform">
            <summary>
            The Platform to Build.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvCallingParameters.OutputFile">
            <summary>
            Specifies the File to log all output to.
            <para></para>
            If omitted the file will be automatically placed on the logs path of DropsFolder\logs
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvCallingParameters.Action">
            <summary>
            The action to perform with devenv (build, rebuild, clean,...)
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.AddLinkToLogFile">
            <summary>
            Adds a link to the log file in the build logs.
            <para></para>
            The link is only added if the log file is stored in an UNC path
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.AddLinkToLogFile.InternalExecute">
            <summary>
            If the filename is stored in an UNC path then create the link.
            <para></para>
            The link is created with the message "Visual Studio DevEnv log file"
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.AddLinkToLogFile.FileName">
            <summary>
            The filename (complete path) of the file to linked
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvLogFile">
            <summary>
            Gets the location where devenv output will be stored.
            <para></para>
            If the caller explicitly set the output log file use it, otherwise
            create a new one on the logs drops folder. The name will be base on the
            project to build, the configuration and the platform.
            <para></para>
            The log filename will be in the format $project$configuration$platform.log
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvLogFile.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvLogFile.SanitizeFileName(System.String)">
            <summary>
            Removes invalid character from a file name.
            </summary>
            <param name="fileName">The filename to sanitize</param>
            <returns>sanitized filename without invalid characters</returns>
        </member>
        <member name="M:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvLogFile.GenerateLogFile(System.Activities.ActivityContext)">
            <summary>
            Make sure we have a log file in place.
            <para></para>
            If the user hasn't specified one we will create one for him on
            the logs drops folder path.
            <para></para>
            The file will have the same name as the solution/project being built, plus the
            context for configuration and platform with the .log file extension
            </summary>
            <param name="context">Activity Context</param>
            <returns>The location of the log file</returns>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvLogFile.FilePath">
            <summary>
            The Path to the solution or Project to build
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvLogFile.Configuration">
            <summary>
            The Configuration to Build.
            <example>
            <list type="">
            <item>Debug</item>
            <item>Release</item>
            </list>
            </example>
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvLogFile.Platform">
            <summary>
            The Platform to Build.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.VisualStudio.VSDevEnv.GetDevEnvLogFile.OutputFile">
            <summary>
            Specifies the File to log all output to.
            <para></para>
            If omitted the file will be automatically placed on the logs path of DropsFolder\logs
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Xml.XmlAction">
            <summary>
            Possible actions for the Xml activity.
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Xml.XmlAction.Validate">
            <summary>
            Reboots the deployment defined by the unique deployment name.
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Xml.XmlAction.Transform">
            <summary>
            Reboots the deployment defined by the service name and slot.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Xml.Xml">
            <summary>
            Process an XML file.
            <b>Valid TaskActions are:</b>
            <para><i>Transform</i> (<b>Required: </b>XmlText or XmlFile, XslTransform or XslTransformFile <b>Optional:</b> Conformance, Indent, OmitXmlDeclaration, OutputFile, TextEncoding, EnableDocumentFunction <b>Output: </b>Output)</para>
            <para><i>Validate</i> (<b>Required: </b>XmlText or XmlFile, SchemaFiles <b>Optional: </b> TargetNamespace <b>Output: </b>IsValid, Output)</para>
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Xml.Xml.action">
            <summary>
            The action to perform
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Xml.Xml.InternalExecute">
            <summary>
            Executes the logic for this workflow activity
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.Xml.Action">
            <summary>
            The task to perform.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.Xml.TargetNamespace">
            <summary>
            The TargetNamespace for Validate. Default is ""
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.Xml.TextEncoding">
            <summary>
            Set the Encoding option for TransForm. Default is utf-8. This maps to the Encoding.WebName property
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.Xml.Conformance">
            <summary>
            Sets the ConformanceLevel. Supports Auto, Document and Fragment. Default is ConformanceLevel.Document
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.Xml.XmlFilePath">
            <summary>
            Gets or sets the XmlFile
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.Xml.XslTransformFile">
            <summary>
            Gets or sets the XslTransformFile
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.Xml.XmlText">
            <summary>
            Gets or sets the Xml
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.Xml.XslTransform">
            <summary>
            Gets or sets the XslTransform
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.Xml.OutputFile">
            <summary>
            Gets or sets the OutputFile
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.Xml.SchemaFiles">
            <summary>
            Sets the Schema Files collection
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.Xml.OmitXmlDeclaration">
            <summary>
            Set the OmitXmlDeclaration option for TransForm. Default is False
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.Xml.Indent">
            <summary>
            Set the Indent option for TransForm. Default is False
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.Xml.EnableDocumentFunction">
            <summary>
            Set the EnableDocumentFunction option for TransForm. Default is False
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.Xml.IsValid">
            <summary>
            Gets whether an XmlFile is valid xml
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.Xml.Output">
            <summary>
            Get the Output
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Xml.XmlFileAction">
            <summary>
            Possible actions for the Xml activity.
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Xml.XmlFileAction.AddAttribute">
            <summary>
            Add an attribute to the specified element.
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Xml.XmlFileAction.AddElement">
            <summary>
            Add an element to the document.
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Xml.XmlFileAction.ReadAttribute">
            <summary>
            Read an attribute from an element.
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Xml.XmlFileAction.ReadElementText">
            <summary>
            Read the text of an element.
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Xml.XmlFileAction.ReadElementXml">
            <summary>
            Read the XML of an element.
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Xml.XmlFileAction.RemoveAttribute">
            <summary>
            Remove an attribute from an element.
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Xml.XmlFileAction.RemoveElement">
            <summary>
            Remove an element from the document.
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Xml.XmlFileAction.UpdateAttribute">
            <summary>
            Update an element's attributes.
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Xml.XmlFileAction.UpdateElement">
            <summary>
            Update the content of an element.
            </summary>
        </member>
        <member name="T:TfsBuildExtensions.Activities.Xml.XmlFile">
            <summary>
            <b>Valid TaskActions are:</b>
            <para><i>AddAttribute</i> (<b>Required: </b>File, Element or XPath, Key, Value <b>Optional:</b> Namespaces, RetryCount)</para>
            <para><i>AddElement</i> (<b>Required: </b>File, Element and ParentElement or Element and XPath, <b>Optional:</b> Prefix, Key, Value, Namespaces, RetryCount, InnerText, InnerXml, InsertBeforeXPath / InsertAfterXPath)</para>
            <para><i>ReadAttribute</i> (<b>Required: </b>File, XPath <b>Optional:</b> Namespaces <b>Output:</b> Value)</para>
            <para><i>ReadElementText</i> (<b>Required: </b>File, XPath <b>Optional:</b> Namespaces <b>Output:</b> Value)</para>
            <para><i>ReadElementXml</i> (<b>Required: </b>File, XPath <b>Optional:</b> Namespaces <b>Output:</b> Value)</para>
            <para><i>RemoveAttribute</i> (<b>Required: </b>File, Key, Element or XPath <b>Optional:</b> Namespaces, RetryCount)</para>
            <para><i>RemoveElement</i> (<b>Required: </b>File, Element and ParentElement or Element and XPath <b>Optional:</b> Namespaces, RetryCount)</para>
            <para><i>UpdateAttribute</i> (<b>Required: </b>File, XPath <b>Optional:</b> Namespaces, Key, Value, RetryCount)</para>
            <para><i>UpdateElement</i> (<b>Required: </b>File, XPath <b>Optional:</b> Namespaces, InnerText, InnerXml, RetryCount)</para>
            </summary>
        </member>
        <member name="F:TfsBuildExtensions.Activities.Xml.XmlFile.action">
            <summary>
            The action to perform
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.Xml.XmlFile.InternalExecute">
            <summary>
            Performs the action of this task.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.XmlFile.Action">
            <summary>
            The task to perform.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.XmlFile.RetryCount">
            <summary>
            Sets a value indicating how many times to retry saving the file, e.g. if files are temporarily locked. Default is 5. The retry occurs every 5 seconds.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.XmlFile.Element">
            <summary>
            Sets the element. For AddElement, if the element exists, it's InnerText / InnerXml will be updated
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.XmlFile.InnerText">
            <summary>
            Sets the InnerText.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.XmlFile.InnerXml">
            <summary>
            Sets the InnerXml.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.XmlFile.Prefix">
            <summary>
            Sets the Prefix used for an added element, prefix must exists in Namespaces.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.XmlFile.ParentElement">
            <summary>
            Sets the parent element.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.XmlFile.Key">
            <summary>
            Sets the Attribute key.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.XmlFile.File">
            <summary>
            Sets the file.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.XmlFile.XPath">
            <summary>
            Specifies the XPath to be used
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.XmlFile.InsertBeforeXPath">
            <summary>
            Specifies the XPath to be used to control where a new element is added. The Xpath must resolve to single node.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.XmlFile.InsertAfterXPath">
            <summary>
            Specifies the XPath to be used to control where a new element is added. The Xpath must resolve to single node.
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.XmlFile.Namespaces">
            <summary>
            Dictionary specifiying "Prefix" as key and "Uri" as value for use with the specified XPath
            </summary>
        </member>
        <member name="P:TfsBuildExtensions.Activities.Xml.XmlFile.Value">
            <summary>
            Gets or Sets the Attribute key value. Also stores the result of any Read TaskActions
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.AssociateMergedChangesetsAndWorkItems.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.AssociateChangesets.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:TfsBuildExtensions.Activities.TeamFoundationServer.IncludeMergesInBuild.AssociateWorkItems.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
    </members>
</doc>
